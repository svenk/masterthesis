(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    566167,      11440]
NotebookOptionsPosition[    563854,      11362]
NotebookOutlinePosition[    564215,      11378]
CellTagsIndexPosition[    564172,      11375]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Holo Calc13", "Title",
 CellChangeTimes->{{3.609224071153977*^9, 3.60922407507295*^9}}],

Cell["\<\
Anlehnend an \[OpenCurlyDoubleQuote]Calc12/Symmetrie und Polstellen.nb\
\[CloseCurlyDoubleQuote] wird hier nochmal die Residuensatz-Loesung fuer A \
fuer das Holographie-Modell mit n Extradimensionen diskutiert. Dabei suche \
ich jetzt nach einer geschlossenen L\[ODoubleDot]sung und vertraue der dann.\
\>", "Text",
 CellChangeTimes->{{3.6092240814320517`*^9, 3.609224150481538*^9}, {
  3.609225495031287*^9, 3.6092254990432463`*^9}}],

Cell[CellGroupData[{

Cell["\<\
0. Was ist in dieser Rechnung neu?\
\>", "Section",
 CellChangeTimes->{{3.609225505085411*^9, 3.609225509400169*^9}}],

Cell["\<\
1. Mitgenommener Faktor 1/r^{n+2}, siehe Seite 2 von Calc12 (kein Effekt auf \
Polstellen, aber auf Residuenwert)
2. Mitgenommener Faktor (-1)^n, siehe handschriftliche Anmerkungen zu Calc12, \
Seite 10f\
\>", "Text",
 CellChangeTimes->{{3.609225520707694*^9, 3.609225581615424*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"holo", "[", 
    RowBox[{"z_", ",", "n_"}], "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"z", "^", 
     RowBox[{"(", 
      RowBox[{"2", "+", "n"}], ")"}]}], " ", "/", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"z", "^", 
       RowBox[{"(", 
        RowBox[{"2", "+", "n"}], ")"}]}], " ", "+", " ", "1"}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"hD", "[", 
    RowBox[{"z_", ",", "n_"}], "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"holo", "[", 
       RowBox[{"z", ",", "n"}], "]"}], ",", " ", "z"}], "]"}], " ", "//", " ",
     "Together"}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Eigentliches", " ", "V", " ", "was", " ", "3"}], "+", "n", "-", 
    RowBox[{"dim", " ", "Fouriertrafo", " ", "sieht"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bigV", "[", 
   RowBox[{"z_", ",", "n_"}], "]"}], " ", "=", " ", 
  RowBox[{
   RowBox[{"1", "/", 
    RowBox[{"z", "^", 
     RowBox[{"(", 
      RowBox[{"2", "+", "n"}], ")"}]}]}], " ", "*", 
   RowBox[{"hD", "[", 
    RowBox[{"z", ",", "n"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hDzPlus", "[", 
   RowBox[{"z_", ",", "n_"}], "]"}], " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"z", "^", 
     RowBox[{"(", 
      RowBox[{"1", "+", "n"}], ")"}]}], " ", "*", " ", 
    RowBox[{"bigV", "[", 
     RowBox[{"z", ",", " ", "n"}], "]"}]}], " ", "//", " ", 
   "Together"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hDzMinus", "[", 
   RowBox[{"z_", ",", "n_"}], "]"}], " ", "=", "  ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], "^", "n"}], " ", "*", " ", 
    RowBox[{"z", "^", 
     RowBox[{"(", 
      RowBox[{"1", "+", "n"}], ")"}]}], "  ", "*", " ", 
    RowBox[{"bigV", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"-", "z"}], ")"}], ",", "n"}], "]"}]}], " ", "//", " ", 
   "Together"}]}]}], "Input",
 CellChangeTimes->{{3.609224162281843*^9, 3.6092242592225246`*^9}, {
   3.609224299931324*^9, 3.6092243330100393`*^9}, {3.609224449146277*^9, 
   3.609224452974798*^9}, {3.609226435241901*^9, 3.60922644168463*^9}, {
   3.6092278644566803`*^9, 3.609227876797871*^9}, {3.6094919743837852`*^9, 
   3.609491977341172*^9}, 3.609492059892982*^9, {3.6094954634156*^9, 
   3.609495470285696*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{"2", "+", "n"}], ")"}], " ", 
   SuperscriptBox["z", 
    RowBox[{"1", "+", "n"}]]}], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SuperscriptBox["z", 
      RowBox[{"2", "+", "n"}]]}], ")"}], "2"]]], "Output",
 CellChangeTimes->{
  3.6092243332425222`*^9, 3.609224453192827*^9, {3.609226437080901*^9, 
   3.60922644186335*^9}, 3.609227877888144*^9, 3.609482942418449*^9, 
   3.6094919424750977`*^9, 3.609491977936689*^9, 3.609492060158209*^9, 
   3.6094954708570967`*^9, 3.609495789494631*^9, 3.609824500521399*^9, 
   3.615536057286537*^9, 3.615549000481338*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", "+", "n"}], 
  RowBox[{"z", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["z", 
       RowBox[{"2", "+", "n"}]]}], ")"}], "2"]}]]], "Output",
 CellChangeTimes->{
  3.6092243332425222`*^9, 3.609224453192827*^9, {3.609226437080901*^9, 
   3.60922644186335*^9}, 3.609227877888144*^9, 3.609482942418449*^9, 
   3.6094919424750977`*^9, 3.609491977936689*^9, 3.609492060158209*^9, 
   3.6094954708570967`*^9, 3.609495789494631*^9, 3.609824500521399*^9, 
   3.615536057286537*^9, 3.615549000484338*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{"2", "+", "n"}], ")"}], " ", 
   SuperscriptBox["z", "n"]}], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SuperscriptBox["z", 
      RowBox[{"2", "+", "n"}]]}], ")"}], "2"]]], "Output",
 CellChangeTimes->{
  3.6092243332425222`*^9, 3.609224453192827*^9, {3.609226437080901*^9, 
   3.60922644186335*^9}, 3.609227877888144*^9, 3.609482942418449*^9, 
   3.6094919424750977`*^9, 3.609491977936689*^9, 3.609492060158209*^9, 
   3.6094954708570967`*^9, 3.609495789494631*^9, 3.609824500521399*^9, 
   3.615536057286537*^9, 3.615549000486857*^9}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], "n"], " ", 
    RowBox[{"(", 
     RowBox[{"2", "+", "n"}], ")"}], " ", 
    SuperscriptBox["z", "n"]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "z"}], ")"}], "n"], " ", 
       SuperscriptBox["z", "2"]}]}], ")"}], "2"]]}]], "Output",
 CellChangeTimes->{
  3.6092243332425222`*^9, 3.609224453192827*^9, {3.609226437080901*^9, 
   3.60922644186335*^9}, 3.609227877888144*^9, 3.609482942418449*^9, 
   3.6094919424750977`*^9, 3.609491977936689*^9, 3.609492060158209*^9, 
   3.6094954708570967`*^9, 3.609495789494631*^9, 3.609824500521399*^9, 
   3.615536057286537*^9, 3.615549000489369*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
0.1. Wie sehen diese Funktionen aus?\
\>", "Subsection",
 CellChangeTimes->{{3.609226535786672*^9, 3.6092265421375523`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"myPlot", "[", "fun_", "]"}], " ", ":=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"fun", "[", 
        RowBox[{"z", ",", "n"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "0", ",", "6"}], "}"}]}], "]"}], "//", "Evaluate"}],
     ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"z", ",", 
      RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", " ", "\[IndentingNewLine]", 
    
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Riffle", "[", 
         RowBox[{"#", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Dashed", ",", "#"}], "}"}], "&"}], "/@", 
           RowBox[{"Reverse", "[", "#", "]"}]}]}], "]"}], "&"}], " ", "[", 
       RowBox[{"ColorData", "[", 
        RowBox[{"9", ",", "\"\<ColorList\>\""}], "]"}], "]"}], ")"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotLabel", " ", "\[Rule]", " ", 
     RowBox[{"\"\<Even and uneven functions \>\"", "<>", 
      RowBox[{"ToString", "[", "fun", "]"}]}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "\[Rule]", " ", 
     RowBox[{"LineLegend", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{"n", ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "0", ",", "6"}], "}"}]}], "]"}], ",", 
       RowBox[{"LegendLabel", "\[Rule]", " ", "\"\<n=\>\""}]}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "\[Rule]", " ", "Medium"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.609227479924295*^9, 3.609227499566025*^9}, {
  3.609227542154497*^9, 3.609227547026669*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Effektives", " ", "v", " ", "was", " ", "1"}], "-", 
    RowBox[{"dim", " ", "Fouriertrafo", " ", 
     RowBox[{"sieht", ".", " ", "Diese"}], " ", "beiden", " ", 
     "Formulierungen", " ", "sind", " ", 
     RowBox[{"identisch", "!!"}]}]}], "  ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"vEff", "[", 
      RowBox[{"z_", ",", "n_"}], "]"}], " ", "=", " ", 
     RowBox[{
      RowBox[{"z", "^", 
       RowBox[{"(", 
        RowBox[{"1", "+", "n"}], ")"}]}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"bigV", "[", 
          RowBox[{"z", ",", "n"}], "]"}], "*", 
         RowBox[{"HeavisideTheta", "[", "z", "]"}]}], " ", "+", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "^", "n"}], "  ", 
         RowBox[{"bigV", "[", 
          RowBox[{
           RowBox[{"-", "z"}], ",", "n"}], "]"}], "*", 
         RowBox[{"HeavisideTheta", "[", 
          RowBox[{"-", "z"}], "]"}]}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vEff", "[", 
     RowBox[{"z_", ",", "n_"}], "]"}], " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"hDzPlus", "[", 
       RowBox[{"z", ",", "n"}], "]"}], "*", 
      RowBox[{"HeavisideTheta", "[", "z", "]"}]}], " ", "+", " ", 
     RowBox[{
      RowBox[{"hDzMinus", "[", 
       RowBox[{"z", ",", "n"}], "]"}], "*", 
      RowBox[{"HeavisideTheta", "[", 
       RowBox[{"-", "z"}], "]"}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"myPlot", "@", "#"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{"hD", ",", "bigV", ",", "vEff"}], "}"}]}]}]}]], "Input",
 CellChangeTimes->{{3.609227390788275*^9, 3.609227419776153*^9}, {
   3.609227502943391*^9, 3.6092275590437307`*^9}, {3.609227787845902*^9, 
   3.609227862632802*^9}, {3.6094860105651903`*^9, 3.609486027605851*^9}, 
   3.609486068963377*^9, {3.6094927740675*^9, 3.6094927896858873`*^9}, {
   3.6094928448835773`*^9, 3.6094928541388197`*^9}, {3.6094955044497004`*^9, 
   3.609495514110235*^9}, 3.615540523849009*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], "n"], " ", 
     RowBox[{"(", 
      RowBox[{"2", "+", "n"}], ")"}], " ", 
     SuperscriptBox["z", "n"], " ", 
     RowBox[{"HeavisideTheta", "[", 
      RowBox[{"-", "z"}], "]"}]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "z"}], ")"}], "n"], " ", 
        SuperscriptBox["z", "2"]}]}], ")"}], "2"]]}], "+", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"2", "+", "n"}], ")"}], " ", 
    SuperscriptBox["z", "n"], " ", 
    RowBox[{"HeavisideTheta", "[", "z", "]"}]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["z", 
       RowBox[{"2", "+", "n"}]]}], ")"}], "2"]]}]], "Output",
 CellChangeTimes->{
  3.609227422169242*^9, 3.609227507472005*^9, {3.6092275377747602`*^9, 
   3.609227559579589*^9}, {3.609227807615513*^9, 3.6092278371736813`*^9}, 
   3.6094829440252533`*^9, {3.60948601864968*^9, 3.609486028568152*^9}, 
   3.609486069696102*^9, 3.609491943274571*^9, 3.609492790961113*^9, 
   3.609492858610567*^9, 3.609495476746091*^9, 3.6094955166365*^9, 
   3.6094957899948797`*^9, 3.609824501347597*^9, 3.615540524357706*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {}, {
        RGBColor[0.9372549019607843, 0.6470588235294118, 0.6431372549019608], 
        
        LineBox[CompressedData["
1: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
fjidIbV0Vo2G6SLjzCOX+qEhW3RCR5QGkaQEkZ0LByDdLaIlrIUCMxfVXt7D
g3Cz3vK7uTYFRVt3PiiaPwyXdMXHhGdYsGnB5744rREweloVVWDbBaKfrffP
9/kFt3vPR54Ybweu6Tlv7KjfENYsY37tXCtMHMs1Ldn4B+ZbipzqWNsMbYpn
1268Owaz5XftF9U1wDVDoSUS7eNw4KSSl39JHawOZozmiU6CYVLnryyeWkg2
jn416jwFzo4lBpl61WCodlurLHcanLW4//7OqYQPpjYSu2b+wrkA1bq7MuUw
uVBzbpbBPwiqXx/98G0Z6NfsVhINmwVzVwm5n09KYeHuRQWfX8wCl8rFckG/
UiiIa9UxiZ2FXbssPBQ8S0He2eXc8+RZYO53SHtfKwXBdZn+q0tmIdOhaL+p
bil8vaJAL/89C22bNKereEthD5/0I8HDHBj+81P17e0SmLw+uSb5GAfcRQtk
dJxKIKXtS7yuIQceqwZODtmWgFiKVY6/OQcivOpFwLQEZgzieha6cCDyxXzL
xWolkBm7To03gQOhaltNrf4Wg63Azy8JSRzoDZ/ZoTFaDJuc8vQPfOAAr0FH
mfhgMQRrn7l47zMH2KOvpH60FoPdr/Anc+s4sKPIK+BddjFsMb4sFtvMAaGL
Q1tepRYDu1jljUYnB7pdZJ3jEovhaFhz3p1+DnTUrhdLDC8GvjmvD4n/5EDN
R90bqUHFgNZO9fl/OFCiss8u70ExODYcOGs2zYH4Oo3V3z2L4f+/V8D/f6+A
/wM01qe7
         "]]}, {
        RGBColor[0.6470588235294118, 0.5686274509803921, 0.611764705882353], 
        Dashing[{Small, Small}], 
        LineBox[CompressedData["
1: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
Hovk
         "]], 
        LineBox[CompressedData["
1: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
d8N4efuI3Z4UIsWx3TvFyRVFGmGSB6aSSFWsZtxA0i2Y6wvk9pxPILQ7P/Ky
3K9jYuanolNlPCn+eVsiQP8a3J41EZ5t8SR/1vhcvsxVRPV41auOxhHluEFb
9hWOkPYw0+9RjyN9p3a/Uf5rj/cieztvJMeSq39PF25ktUNufWvV8ZYXRK1x
u1/qYRu0r/Zp8QqOJnbPhOPPelphxkix7+2JKPL29CqhvMZz2D0Q84P/03Mi
WaymfkvLAvrbTrAcDwsn2y8fOfvJxAxX7JZxeZmEkUKfUO3LAaeQ+cNhK707
lPx+/YZP77whGhVFdvFHhZB6PVv9sGUGmPJoU9I1DyZOVy4LyL44Du5KH/W7
QkGEq+6taILLfzDhvZFwkTwhYTuTNfxiNBAW1f2+UfUR2TRZIkdbpYZP4qpt
8pV+ROXhcGBanQrWZSdTEeoPydjGIrWPMQdw4gDPEtba+yT4u7f5VuxFcNWN
TRf+u0e69LrWmF2XQ/PxHtmGhjskgZa+Z+KWJIRy7wXaxLoR/cl+V5r8VkTW
6JHdiTdJgIDUCQWFzdjYJzi18OoaCcmPZN9huBpSQx2Kz8ztSfs/fg88YoU4
15UwmQtniUfO5ZQ6qwnlO+0S7fwVOsTL/wznu/JKZelVfXZLd8qDoitI1a4L
Uf407RWzetYEvBm/R2wV+5S/Hd/+/fI1GzTf7c52ePFb2TVEvc5e/gpMb9Hq
1F5wYMHDJTJmlxOu7DOSkF6xHnfs0h3aJG9D8p2lgBmXCNhO9h9aLu6JVy9V
+M8Xi6NCxPdB9GovtMgG1kmGy8D72ZYr+x57Y21gv9Wpxj1Q5yoyaVn5AE7u
XdruI/ux3MtI1d7XF2GuRz7eCVJGze+pHUuXB2D3rdNEzvYw/C495I3xfgx3
tvVOvO1HkTQd6C5wNxCqXc7K53yP4cIFSZt3C8EIG4tsS2LoQXPLzdP3DoVi
me/6/T/2nIBEX4WunttTFN1l6N6KNwJlYL6PmguDd0P1ua3fT6OOO1Uqb/9z
HOWSyjrWYo60ml/C3jcjcO3Zh+RWO0s4KAdyCP2Mwppleaf+JZ2HzlzvX2rP
C5yd9CyYs7SGTO6O6bxrMfhV0170ZOcFzIYOTkjMxiJnRa/VgwU7FKxw7Sh3
iodxl5lpA7mK2J3r2zK3JCD6XmtQKst1+OhlNkc1JYDlvWvjTe0bMHw2VO+8
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
LEX3/lWO/wExEuec
         "]]}, {
        RGBColor[
        0.6745098039215687, 0.07450980392156863, 0.043137254901960784`], 
        LineBox[CompressedData["
1:eJwtmnk4Vd/bxpXZN5GUpKRBCJWhhHjSIJEIoTJVqEQhUZkVUSpDSZI5EZkz
hceYeZ7neTrnOLaQmff8ruv9Z+/rc9ba61rrue/n3uePvf/2Iy2zzXR0dL9o
l//dj8JO0sbGBubXLwp/1M/DR0sHvZeWN9BF++qbP5Z5mJIucXh2fgMbvfjP
sLjnoaSw+u0x8gYebH7fmRefhzLbXnbVtG/g7EzOdcpKHp4Znqn6nLyByXX7
DttE56PWq9oEKeMNvL25QeTZRgE61L+0uluwju0SzqyPFwrRl2zfPpe9jobb
dbV7GIowivm+kkf6Oi5U8Xpc5SrCGlDf8TVuHX8E++caixfhgZQd+U0B66j2
+lvdFtMirPOL3aJ4dx1LJmsN05uL8LBWRQI35zo22Twb88grxpaW/0hFt9ZQ
g2Kl15RZiu6mvwoSDNZwD/M3gyd/SvHonFHgR7013HAfsBBsK0Xv7Wmn76uv
IWeFRV3ifCkqaOm/55RdQ8HYuPHrJ8owtj5G2phzDb9kMIjKZJXh0yoF19WC
Vfx6/ECNetkf3Fv4iFtmzyoGMkdefMFeiTVcJ+zkeFbRffuBk3cEKvG52XKz
AtcqbioTeK0lVYltbJ6B51lWcZxPOND4eiX6XQvh0ppbQXbuQhfp2EqkJ5dy
WtWsYP6Z3U4tZ6twcsdu9minFSyUEdc9712Nvx6UMnL0LuOZ71iSolyHpwQe
SsS2LyOf8dn6EuM6zG3hMVRoWsZJgdkiytM6LFR4kPGgfBnlKzIi3RLqsIqD
605F6jJ+D0oQT9tWjwPpxoXuXsvonqcRpjZUj2yry8/nji2jTdnNuXtVDWji
K0F0eiyhusX2fvfIJnyeEeBV67yEjfI2u+hTmvBjz+yeoqdLWCu2Wvy+oAmr
xDIvxT1cQj/ptlfV3U0oVSsXbX9jCYWf1X2s3dmMTFvP626XXEKNytCRTe+b
MfG9bt7lwUU8elSz6KZ3Cy4GOHojLCJL0DYl1Yg2HN9TRFKWW8TqwpIHuult
2BbLpF4nvYijjEZzNn/aMD3Xf1uvyCIq6Zqdbqe04cOh7yHL2xdR+c0b65ty
7Tgs0ZJ4YmIBbU1OuWt2tGNdg1hjgt8CxpL0anYLdGL01j7e4MF/GObc/tFw
oBsDbgKzbM8/dD60Z5h+oRs94iLmOtv+YeOpTqlc9h68ffZOPV/NP+QMvD2m
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

         "]]}, {
        RGBColor[
        0.2823529411764706, 0.21176470588235294`, 0.27450980392156865`], 
        Dashing[{Small, Small}], 
        LineBox[CompressedData["
1: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
1ior+4g6iFH+B79doIs=
         "]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        RGBColor[
        0.8627450980392157, 0.5215686274509804, 0.34509803921568627`], 
        LineBox[CompressedData["
1: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
         "]]}, {
        RGBColor[
        0.09411764705882353, 0.08235294117647059, 0.2901960784313726], 
        Dashing[{Small, Small}], 
        LineBox[CompressedData["
1:eJwVlGk81YkbxVWW0pQtS1wlg5HIPlnSc5UlRGOfKKRsU1lSiCSiNCoSRmXf
Iox9SfJQytIlyZ41Smgbd/+53H//F+dz3pzveXU+Z5dngJ3Xeh4engc/9X/f
CxKLXC4XL9JfKzkEZUAA+9d4NsHFiTRy+KPUDKis0VSi0rkobdJyVb0pA7SU
rT0/LXExkW+VO7khE/aJxI5RhrkopR/o8vJ+JpBn/+u+X8HFwjjpvWtvssDu
Rk+ptjsXg7f7XDlemwP3jN9bqLlw8ezXBrk93TkwsPJ5XsnxZ19rrYL0dA44
BfIqSFtx0ZBXa4/LL7ngeswwg2cfF59kmhr6eufC6T0lt3q2cpGpHrP5m1we
hL6JPefTsobfbIp9TKry4dZSyDCtcQ2DdWWedvbkQ56An3FMzRoqpixIX17M
BwpYi2cWr+GsZYp7kEIByFeKP+tPXkML356X2Q8KoDep6JcDPmuo8Ne1tuNJ
haBk11m6TXgNf1U4LCFQ8Aj2+zeJ5wn+5Mt2bFPqeAS2f5dFqfOtIUlDJe/q
4iO4/DzJ3pJYRYk5I4NFzWLo1zq2EjW3itYH1+QyXhRDpNii5VLjKgovm9nN
LZfAwMDmxbaTq1hvOKGYEFsG0afrWkqPr6KHkNXy7vIy2Etzu5fqvIpHC0qX
BYfKIF6ser+f9Sp6p12ISFUuByO7PxOF9Vex7Xyi61hfORS9KdBxF15F3hn+
/Sl7KyCs2yiK08JB2xhbaVORKlB0mbf/9ISDv5hXaemrVEH/QpJyXy0HeWeL
FJ0PVYHqprm3+Y85yPlWNy4SUgUz5n8rWKVxkEF6GZUwUQWWL4e67p/jYHvn
neDR2mqQbQ3Yto/EwdpXyeVON2qBIqp7wUCSg0SBhmlKYS2EexHvjEQ5OCfb
s5OvvRaGBOPumWzkYEVQiFrMujpIcnwgakdbQW2Zjg7alTrYsNQufI6yghWe
jFHJ2HpYEJfekn95BdX2PRb1aWqEdN+ps0WhKziiADrTU41g9rSAUnJ+Bb3l
XRcf8D2BPA/1W5W+KxhhY6w0bPsEjpeabG5xWMHX5q7Zl74+gTfkgE2jqiuY
tr6mc1rzKdSdaecTmiBQhRX2/ij1GejJ+WsWDRN4/g+3RCGlFmgakDxh1E/g
uwvKXK1jLdBqdKb2TAeB5oHMnOLWFugWEj3VWUVglR/h7JuCMF3j3hp9nUC2
Y1gkf3ErePpu+iIVTWBl9hHJ5vZW+EiqkayMIHCqU3p/6UwrLMbxB0wGEpim
q0fWI7UB3blc1tCVQP6BL7qklDYQ5BDhNHUCc4pXR+MTn8PtyoKiBBUCP6oH
am+vfA7CXjb98ooExjylq37pew7ivbm7baUJ/OQ8Hnlc7AXI5RweKeclUMIt
3zfs4QvQNUnT9Rllo8JduyXNJ+3gcUvzx2gMG4euDXQ0qHdAeG3y9Z5INtLW
tabLOXdA6jiV1BbGxpwfkhtHrnRAt2q9RbE/G8OybQt133SAdo9BfogLG+3i
vaJbgzuBf6uJk5gWG3VV/xtrpXSB3O+FX/jV2FiSeeCqP7sLDN34rxG/sXEd
S8IsVKkbAv/trJiRZePKY6n8zOhuGLWx3lS5iY03Km0MnPa/hrJEp+YjMyy0
SkveYtJOgVcNDXbkcRY6lrhKCTMpMDMltaA9zEJt5Vh1M5UekNB4Ly7Tw8Ku
daezaXd7IKrPPWCh8Wf+pQAz1LsX7ET85K8nsTC2pdv4hmgfsJIj4hFYOI2h
sYE8/TBPals0M2Dhb1wbL3eFfhgq4rfu1WFhj1362/zD/VDTdFdkYjcLbRWc
dmgm94P/h0cPCDEWzpZkr4btfgezmgNlup+ZeLHr99ECvwHof7pd6NkHJhYF
OuzwvjcArabuQSYTTNyj60O5/WwAso4t6tr3MzFjm6WcuNgg/BnNg4HNTNTo
lUHFF4PQ26f6tjSJiaGj52z89Yah2eW8tnYCE91GxwLU/IahdK4htSmOiRX9
9Ss+D4YhnnXQpSuciYUR2WTHtWE4JHds9tNpJn7oOrLPkDICjQFx9F36TJz+
uDKaGT0G+Vsnt6fPMDCN3iPq5j4Jya4goD/OwD+jGwbzcichpjiHNjrEwByn
oCPpc5PgefDUGxkKAzelNZ/KOjsF8iGfY7PrGdh8m2FTdnAa8iaWvxclMNDD
WEV65NwMJKs4TJhfZ2Dk7YBRkdQZiAmt6/58lYGXgoMtGptnwFMkrFAlhIE2
6TVCtls+wC7TVZd/PRhI+oftMl7zAXLKBF7V6TIw2ZaoaZWcgyS2b42TBgMt
XpS/jDabg6tm3TlMFQamnPprsuviHHhM34rQl2NghWBQC2NwDnZuE9V8JshA
NcM7ZkTGR8iKIGW0T9GxVkej+or5PNzpjLzpNUZH3mN5dUVR83BFfCqEf5CO
hd5u9mGN8+BWkWt7uJuOTn+ln5FX/Qyys0oClFo68hvZC76XWYAMS83z727S
UU3FrfnoziVQ2GzZ3RdLR2nOeD26LUHpa0/53ig6Wpxgqi5lLUHTkZT+zot0
NKRIREXt+vJz70ytlpN0NPojRu2r+leQsH9GLdan41emg13che+QJTZkVaRD
x+r22Csibd9BceBbfr46HXfzOuWZCvwAHUc5hyxFOnJyxhT3OP0AO+drtfdE
6FhVZxQ5xv4Bia4WF68s0HDwNSs41WUZJEiePRFzNOwbYwTr3VyGrPFwxUtT
NNymwyt3oXEZ/j1RNhg8SMNypw9RKEUFirvQ735tNFw7WHLi+zQVNp4eZNjf
pyHxNilNJZkOSQrfbGxTaFi21eN77ms6SH7kf2STSMOAyuGcaT4GKHnrOVvE
0TC2TH3d88sMMPV92HAgiIbSdw5Wh19gQszZk2G7LWiorW1lbJDIhsk7bhlN
h2hYJKp/c+sEGwyqXFutDtBQ0DV9vYwqAct0x43+2jRUP7yRS+8h4GSUZXq1
LO3nPzHvBuziQHOuefMhKRrmDjdR8BIHpNpNpgdEadgQui8t6h0H+jaCMlOA
hnrS7zefS1gFcrJ2o+EyFe90nXr7cQsXMmo1xilfqMh1Mrv8z3kusIbUeNzm
qfjQI36QM8KFShnlw1fHqeh3JCEt1pGHvLOQNNL+iopbKn8w8rTWkdca+FjW
D6mYVn37puyODWSXsfWkqVQqFtF8Uwo9NpDrOVwITKLiAQeTDu+CDWR/Y+JG
chwVlyb4BGvUeck4czRd8BoVn5NIXhvseMn/A+PiNTY=
         "]], 
        LineBox[CompressedData["
1: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
E0qhpPJvP6L3Bbkls//0Hx2nMv6LJ9ypq+X36grocq3kBH/Fg4jr6gzdwQoU
RH1IaPLBQ9cnyiMp4lWgj7zUlPsFD6afeeitqFfBN/VQX+UzHk76SAtEM6yC
7JnRsmR3PET7Pb/fzrEK6Z2yrIVueBAPctHH861CuY7usL0L/l/djHjPK7IK
3GJjErsOeCCN6s9wf7AKpDJVTxn+5S82dqs+/8kq8PrLFlVY4OF24pmJKZ1V
wGmYMTP/y79FxgNasF6FxeeV5iT6eCDPeXXFzGkVUuisLvhr4iE+/9PdH56r
cJWq8nG/Kh4Gy5DNbvgqhNG92w+Sw4M1Gvl6OWkVzK0ixKnu4oG6Zj/5Uc4q
KIeWpkni8HCnWWg4q24VRFfGRib48ZA6kASvVlZBTZuUk+Q0Hu6N1KoF761C
UMqRq8lJPKytronqE66BI1f2T/+/h+C1SaXiR7EGahTdE6yLh1B5IPNxiXUN
8En3lpVqDuGLQ5/fictroP3AKqC2+BDUjl5EnOddA2JBIxw+4xA2CF0LZYXX
QPTCQnfJ90PgJCufj5ddg/b7rqGOr/7JG/iNYx+uQf/GmpeO5j//7jGLUSpr
IO5JxEWpdAiqxB4rYZprYNjDFNhw8xA+HStv+VmswdOEguE+wkOY2f597BCy
Bm/vaA/2+R5Adr7GB/uINQiit5VLcj4AhzdtRLaxayBrpuX/wOIAzq3nkrxJ
XwPOmeTjM8oHILXkSGFUtQZuQU7kSTQHEDt1lv7J/BpUPj1ce+e5D+Yx7iEq
y2tQpRxu0GazD+K6+4xKG2uQUiEnRWCwD12jY8wP8Gtw9aZUFIHkPhAOpnBI
0qzDhm51kMPuHuj+Av6rouvQl2CgOae9BxfKTe6ReK7DVY+SET+mXTjHeHBg
7rMOlmlyYWvEu0Bp45k9ELAOTBIL93D/+gP+WgJTesQ6qMfIMkZX7cBQ3Ni6
St46vCj3lIl8sQPBX5Qjo8fWYfWSExtV6jZQPxPZvXVjA5g26NuW+LeA4IAo
xWpqA5JZWOE5bh10pwc3nX9vAPd/nywWudahqjUb81nagNcbzZZOtOvgEqXd
k7SzAayObwbrfq/B8d3S4xHyTRDpEymcCFiDo6+WqjJCm+CqLfxruW8V8Jcn
TjB/3ATK4o91UwrLoHm6SIHn8yZEvspVN+NahvI9n9Cbvpvgt8SCZ/jXBxxa
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
fAzSn+MvPPT/Af8DUPQeQQ==
         "]]}, {
        RGBColor[0.9686274509803922, 0.6039215686274509, 0.], 
        LineBox[CompressedData["
1:eJwUV3c4lv8XfiskSVKoqJAkSVbZ75FUUiRFUhFaKF+jUlZ2IrJCkk1Wtuz3
2HvvvVf23rw/v7+e676e63Pf9+c55zmDXfs/5ee7CQTCLQoC4f9PPmAaJ5PJ
+EFzUeZp3jf8b+2009o6Gf9FEtYZpr5hYooA18ISGTXb2iIpD7ijILeC9sgE
GcfNMpVfirujyCH7jqpWMh5sTQlq8XFH6cG5ih8JZDR4eJvjp6oHKn+ujhXS
JOOuR2sO9gue6HWl8+YFdTLSmrDTp9B5YdPG2CiXChmlerWSaXm8UNWQgvP4
LTKGQaGujJYXPnooEUAQIaP3TM4k1nvhs/PRX6vpyNh846jmjWxvNK21f/OS
tI3XLtCHlSb74NeJ962LGdt4NMXPIr/FB0P36l6xTdnGI4vPFdbXfbAKFBh/
RW0jTy+m8cj6IkciY26D5zYu8/Nte7X7Yo17JC3x5TZuXRf3Wab/gVzKZbFH
6Lcx8N2vE+FpP1HSIIsxlGYbDTgUOT4O/MS7znGfLlJuY/X9l5yBBwPQosD9
nvz6FjKfUXTr0AvABsGHG5+GtjBkXoDId+YXWh4el5/I2MK6SH3L2uhAbGra
P56vtYX+tQKWHRvBaPMsjRT7eAvzko/Z0zCFIN+ihtf3B1vYvWds+wV/CDod
TpbUVdjCUNEO38jnISilrPaNXmwLmXRq/rvZEIKRteHCmvRbKL0rI+BVaih+
qJD6tEnaxMmg8czPgeF4Rn303kjmJpqV25jNkcKx4Z87d13qJo7dvCXi1RuO
vPuG6sNiNvG25dYNa/YI7L/hzHnLZxOf3KV/ThsVgfLFLeU/3mwi9TbL1dt5
kXgi778jIqyb6HV68pwPWzRWMVx6K868if2yuYYH5aLR7Pl6oxTDJl5arU6s
+i8aW2gcvGSpN1HE9AojY140uqv4MygvbqBCu53RhE4M7pkoon9TtYHNghSl
7Jmx+I/x+IEwiw0Mz2boc/gVj36vel9Hmm4gbc7kgENNPF7PDq+KNt5AG9m/
vzrJ8Rj69OLXxFcbWNB3n+Ssk4CPY2X3k+5vINV/GYX2zIlYK/3fvnbeDfx5
i3TCbSIR0/SLKA92r2NtIUOvWEYyirIZCES2ruMy0/cllfZkzGpifiLVsI4/
De42Ja0nY56Ufqp+6TpKq6gt8xBTsOIgg05Z0jommXk8FihLwb4UzTwbx3W8
EMLbTvUvFbVf7Zs8arOOi3NuHJp0aTjMmsKcaL6O9Es+w2ShNBx3oPqvx3Ad
D623XjhhnYZLD/6ckHi0jlN3ep62svxFms11s8WL63hw7bJso1Y6uiaGR7rw
7JznYsUNl3Skf67YwHFmHXsU536+/5uOjDUh5+4e3zk/X336BW0GsgXLtf2h
WMdv/NQqkJOBl2R9Lr1sX0NrPTnB97xZ+PSrwGy77Rra00psn76fi2apno7V
lmu4a/OLv7ZjLn7vWmDN/7CGr36SxrcycrGC9+/NKIM1XKMUNlI4RUKhavGw
9+pr2Kt795/OLAmp6GRVDwuuoaaxb7mTch7GfVPNud2/ivcP+p37x1eAJenp
ytJdq+hVylTnqliA/b1H/wm1rmK5FvnuG4MCZOLvZGSpXsWRwB8xPfEF+KlO
879/Gavoptl6wVewEJUP6XI4uq/ix7zvp0uuFeGqp7kTwiqm3L2iaxlYgqOs
+ePXxVfxePsrhYLyEmyJpFKoEV7F/QcVqzSWSjAly+NQ97lV1BfIfx6iUIoG
A7/91w+von9/XO/T3WU4KNAUd2lsBUcU3m3pW5ZjQ/axg7kDK6h+N4HZJr4c
865pGsl2r2Ap21vPtd5yDHw4fulewwoeuNFYzixbgWo2BDTMWcG9VEVvTh2q
xJo63vpY9xWs6FK1OIRVmKNuLCTksoJP35RJ5i5XYexQ+vcshxUUC5S2auer
RqdVGfVysxXsq6TZehFcjVfZHg6OPFtBXdYZh2mnGsz4z2GJXWwF5xduBkmK
1mEYXc8xv/5lDOy5J7RPqQE9H8Fesa5l7FPXIXCaNKBtVPBie8syEsvo/tj5
NKC2jE4tS9Uy6tM3BhzuaUCO92P2QX+XMbrNOcfOsBFDu+dnIl2WUZ37BhNT
WBN68tzvvuG4jBoJRozZFU1oa5pWMWa9jIauwox/5ptQ+9CHCJ73y9jtkS5g
drUZ2a9tqcc/3eGfi8soHWvG4Li9JWmXllH5Ra5ylEwruq+9SlHl39FzJto/
+a8Vra9XBK/w7OiFrD54FdCKT/u+mouxLaNDuiGrzUornjrCIJBLs4xDsh9+
1yS1YaA5a0BR7xLyh51keiDSgQHyAsaNX5Yw+Y4U0Dt3I+d++Yo6+yW8yikc
nkfqxthKbY6aT0sYcLD9fOVCN2bd9m4oe7eEn/lOm8xq9GC74oogSWsJ9Qdr
bJzEepHpXu5ClNgSbimVSp6z7sNvj26+s/q3iGeVbhyJ1h9AJlbtavOhRXT9
GJp28OsABnaZnfnYu4hBGW68MXEDGP8krtmkeRFpYx3VzKcHsErz4GXd/EUM
Y6VL83o7iNTPmpfv/VhExZ9iSQXOQ2j7WuvDuZuLmPjWQYe9bwR73DQCsq4u
IlPNQ9UQmlEUT3qUd4u4gz9z6+lcGsX5JRVqA6FFfDA4oBDvMopan+T9kk8s
ov49KlotiTGU9hTKkJhfQL3DqaNXf//D7XTKVYWfCxgR/kCoPnESzffEmBpP
zaMa2/DjeZxDgx8aVE/H5nHlb1UpXeccal88/F1hcB7nVaSjpZfnUP6RRTJ3
+zw6u2S7DPLO7/RVxameonk8cf4/W9af85iqvaB9K2Ae2WdaD9GYL+B0vqQi
5615TDSRM2u/toQDD+a6Dl2fx7Pdj1d7tZeweSpCnyw9j2Kuin+nduKSc+zg
l47L83jr5GtP1qwldDHqL3TnmMdRKdbYv3zLyM3uKLa1NocXYhPcbh1dQS3r
Ws6WqDnkORdOtTy6iqrtQcTusDm0qIts3EWxhvKChmpDgXPorviDcfvUGgoP
0X+d957DP0N3ooserCG1nPICnc0cMhGFrY1L1jD+YHP+jYdzSH4mlOoWtI5h
ryI6Fe/P4YuUtRHxrHX0y3+3pHJnDh/Xn3Ypb1pHGxOmc8+uzSGdyz9D530b
eL/1gbu1wBwmvzv12tpoAzcCOzQy981h5ljDtZfimzi7EvMhj2IOTUfMC8qU
N3FIydyzlDyLCdkn1Lb0NrFmN2tJ89IsltCc7Or038TQF08uzPfP4svds+7K
q5sox9e3wZM1i+E/De7JRW+h1OdERsG0WTRrq/z4jLSFgn3WF8USZ9F9Vq7n
auMWsniy69yInMWmZ2rGcptbOL2kXaHjOYvPlb/pKNzaxu+5w34BerM4aOPx
3qBrGzU++FuJPJ9FfcqXyWnT28gtdOdZg+YseoSevhdGIGNWVMZFapVZdA5b
Of3mNBl7vFxKTGAWvXmVZH8+I+NvRek4OvFZPMUb27pkQkbDfUse0cKzyK6f
2z1lS8bdnzSe9J6bRQ028b3JQWQ8qyewKH9kx1+9KbVBExlnOUfah+lm8e2M
ibJvHxkze/3Ret8sFvAMklUmyegbQ830ZmsG+yMlRm/sIuTxsBn3h87P4FfD
Xe72VIS8nO+dcW2jM/ifAiWL835CXp91/FXZhhlM8RE5PX2EkGe8zHzQrHQG
i9Vdq24dI+RRvLbpSMiZQe37XxMNTxDyfPrHI4aTZjB9z4r+Y3ZC3rkH941Y
fs9g5wmVQLozO/xVuZJ3A2awm2LXuCM3IU9R5iz1Z48ZFNt9abHo/A7/hfXA
efMZ9LGrHHUX2OEP09HjNprBGZ93PCeFd/iPVl/SeDGDqR/u9Px3mZDH7XZ5
l/ejGYy7lJjuIErIy94TXFWuNIPrH44aaIrv8H/c50e+NoMClVI5mxI795k2
1rkkMYMRVoxPn0jt6D3r4tPnn8Fr13uP2xB39DqurQefmcH8txeTXsKO3p2E
4pbjM+jbvzpOL72jV3zUg5Z+Bn8Y+XhZ7OAscdvHMpQzWCbd9DFmByskTpz9
sD6Navqr//nv4L4zKgt/Zqbxu0nlrds72PgniTQ4NI21MsEjuMNPcYjb+VjH
NDIWPjqxtKPv4+ihcqd2GunpLeomdvxxb66zORRN45rkqaEwyR09o2eTWZnT
uCt+n/SJnfvcHq1On42fRr09cbUPxAh5vY9F7LjCp7HUm9v2nsiOXkOw4uMf
01hjpiZPf2lHT47muKfbNJpw1Z10E9zRyzUZLrWbxiy7wbWqizt6Qt2JWx+m
Ufh3dHsV745e1HULIYNp3KAg5Lme29E7mXhDV2caly+6Jh/kIuQZ7bPraVKY
xvO7+4dVT+7wf5qMprm6489xUZb1+A7/oso7adFp9MnumAxl3OHr5aaN45jG
iV2hlos7+WUhueuP/9FpDDlxr/j4XkKe1I92hS900yhJvNxBs5uQl6fs/O3F
+hS6O/zt9pgmo22CNr/K7BQCe48B3yAZZWkl6q+OTKFhZXSu5s7eVFo8wcDe
MIX5zdeWbUhkdOIoSjlYNoUP3ikGmSSRUf5TwP3t3ClsHNSw3wgjY42ogk9n
9BRO0DWQaj+TsSk2/piPzRSqCDgq+cqT0Yf6c5a96RQOGlYfkBMn44Pnmo9M
3kzh5zElOq9zZOw4Sf9L6eEUslB3yaxTkbHfw4htv8AUXjFutj6Vu43TpsJn
rfsm0ei9wcRz5m1MbKItM2iZxGt7SIkHdm2jkcDwqydVk+i9GhH4aHwLF8e/
x4hnTOLhezJuU9lbuPFk5cLSt8mdObq2Zc+jLaSWzRLWg0mUpFNTbv2yiafp
pWXuB07glYIErj87c7Mbf7+ZntcEvvZ9dNfo2zquKtmmWDtNYKqDNNvS63Ws
8iji/GM8gXvvfFy+cnYd3x6+uZfqxgRSJNd2s/5YwxIm5ar0mXHUjSuZkzRZ
Rb0Tz1RZroxjSldSizztMibzOOkNDI4hDVttvMSZOTxV/zTzfPsY7u63f+m5
U4e/mopRv6sZwxpZlde7O3bqZNF4xN7MMfzv/bOjgt9m8aiGQj+v2xiuGFRZ
NCzNoKUHg5qp6BjWB22GDidOodxqwDVa11HMUepZHtb6h2mB77xVbEfx6dJx
6eFT/5DjmuJgoOkorhiK18r0jOGGB9laQHsUL7+MPcD6eAzjz2vnqIqMIs0t
SsfHj0fxiOZZoZD+EdycEV2M+m8Ye4uT2C5fHsFzhsEvQob60eLemqwo7wjO
K7SeoEvpx6P90rriHCMoob1Hs82mH5U2a5OIdCO4l9ji6cDWj3mC0zI3RoZx
y6nMVEa7D4ODeJ6r+QzjBYaNYMPpbpS8YPxF/eswcmkZU875dGNbVuafx7bD
uDKsPnVOuhvpW+SWnxoMY5jQw+JC7y60oX35Wff6MCaz2Da4XO9E7Y9h0WbL
Q+jZmfdmu7INt6kmqi0mh9CD6/xqzac29PcWnLcaGMINI/rkO8Jt2JCQL25X
M4R3amT3aAa14tWR3kqXyCFs+7BiEmLZgpz3WKcDVIdQJd9O4IB6Ew7zfhfE
v4N46SLN/pivdchjFTE9FjuIfNLO03JKdWhQmxbDEDKIcSLR13yP1OGqUQvH
C5dBvGs9l2lGrEWadObDB54OYoXlC7ejH6uR/4r/gvq+QbynUPhDmLcC33nG
JNhvD+ARaduPQmXlmDWYpR+/MICKez3KXj0vx6uOnYO7egYw7+1Tw9dhZaha
ydoUlTyAelJqe90vlKK5SlDq8qMB7DC9GkbzoQjzIhMM2e4OYLM9M4MUVxFS
rCKv/PWBnfymZLRsLkQ3/77wX/wDWLhnqIRFpBCDe9m/y1IO4M/dejWuVDv7
kW74O8/4fuSne9B6KQpxf3aqQE5YP7o0tFasnUZUoi2eGvbrR67bavedQ0jY
Hj/8XMyuH7vL6i9vh+Ti5AKXat+DflzQkR/5k56Nh6yiL/Pt6kc3+0cbXIIZ
6PiXu4x+pQ8D6g4ecKxNx/Xp3w8XJvuwk33luIhBOg5oRlpktPXhm9bTzDYJ
fzH5SliBTGIftoRxity7kobKlL8UH2j24feCwdiVwGQskWLtE1PpQw3x3D+d
d5JR/P1PI9ZbfUiZ6zzSuSsZOUZ/ePdf7kP2xQsqnLpJuFDm06FPt/O+hbnd
UjYRzx5jryaY9yIlG9ug2oM4pHc+NVv8ohev6eV1lbXH4ur6icMuyr0oRt2l
eUgjFsu6jj9k5OnFKrbG34yvY/BV8JHhc+096BZTq3b3VxQqHTpMPVPUg49f
aD2fuBCForaHzqcm9uDZWM0Pgnm/cd8zOiOiUw8Od83VJP+LxJiz1FvKIj3I
dDrOZ/JOBHr6UbEdPd2D5j+6uzSmwtFsH+XVbroeXK5776HyNRzlJ3Z9eTnS
jc2Gr5tyasJwIn7jiMX3blybGeeYehaKvJdneCMWujCAjt/sR0QQvuD79Cmz
uwsFsip/EwhBGMR1sKG6tAu/Rufr334SiAzMF02Xf+7g3Y33X7L9wpUVg/wb
sl0oyHZO06nUH/lntw8/5utCk12Bp+dE/FFvzO2F4dEufDpfEzsZ8wO72uL3
/5jsxJaLYxLv/PywIHNaZdy7E788PNtb4O6Dm0lWUdtWndgz9uBT+hEfvBRD
t8Gg24mnqwKPLfp/xyh/vmAJqU785uTRwR7vja7mBuNfhztwr3l72JNpT1ST
mra6eLkDN5sujVwO/Iael6zqr7J1YAptQhCMumHlBTpONZoO/Bbp9rZJyA2J
J/nKrXvaUccShV61fsXT5DeHGxzbsWXPB9eY6874eGXr+YhhO6ab/n3oEPMF
fWZcM9bV23Hsw9f3Foe+IHXfnyenL7bjIbeKIy5jn3E6b+r329Y2lFCJdSrM
dMCzmZbrTvlt6JNrfv3YJQd8mnRA4VdsG4aeqPbjSrHHxpAL88U7dScxwzlL
NN0OM2zfSDJzt6H6vzTKtW4btJOdqsv80IrJ9VqtaaKWWCA3eUdYpxUL8mqm
5D9ZIEFhoiZeoRVvRpxaayg3RwuVf1VhHK0oSxWh/VbPDN+/GC5zrWrB37b5
aYxtppiqN3SDOr0FNfPutD+UNMV5g8ES25AWNC4g36QOf4//mfYXmb5vwU/q
vMrPLN/hK6fuPC22Fmx0HQ55qWqCkV+7oIumBa0qXbhvNRnjkHsnSXWpGb+F
hbw4pWKMWj/ac25VNOOCkYCxlqYRqsc0Z1x624zjquyrPuf+Q7/4JpFEjWYc
uqfe9vyuAbYkN/7ludmMYlH3IohWb/Bedn3qqZPNSP1+93L0iD7erqpO3FfW
hLq8S+F5M6/Qua7qon1yE85+51S+JPUKy5oq47cDmvB0MkvakttLvNZdHrdg
1IRf7+9y2AUvkDhdHNXN0oTRrucfzNbooMV80Vk1qiaMl2zm15fUwazlwsiG
2UY0I/h7O//RRhFyfnhpcSP+4rcr0vXXQn56UnDSf424bKtwkyimiQZHck/x
qjfiSXaTbG15DYw7mhMYKduIRwExVusJnmPPCvh5rBHF1btLOUMfIYfgXz+H
wgZMuB/NwPlSDZ9eTmMmxDfg6B660x0RDzBIPNXHzK8BlWmqmP7+U0XWq8ne
/71pwJJWvgw9axVkvB/v/pC5Aeef0ConjShjMpdL1rU9DXgubOhVkYoyKq29
HBKYqceMh08WvcruonMguyhNaT0WxvRLM2Uq4faYd2/W+3qU/K8ybNVRAX9m
G+37rV2PUxXVROeA2yjqpijkpViPnryDfBoZt9BYiPqzPlc9WjlrfyLulscR
S3M+1pY65Gz3MjnZeR3tlNTUqAvqMOLfYuzGyevIdvqS7eKfOsynP3KP7tU1
VC+bbq5yqEPGE09H1PbJYg2DtqXlpTosucCcdM3hCuoPE3/rstehybfXVV9n
pJE6g6Ve5UAdiubwVbBrSKNDVszNxxW12Lldl+b7jYgGdzz8cs/V4n1qrisp
3uIYtSg/+X1XLfpkDnU4R4nhwA8KaYP2GpTXpSs3KhRF1SHT0ZNfarA6gsU9
84AIun8RkFh5WoOO/1pDCyQvYwXfhFutaA3uXo95f974EsJHjcvWY9XoNTBh
+X5GCM1OHnVWy6tGyTd7+vaKCGFqYX03v181mr0rffjAXhC56a459N+oRjZj
Ckq/iwJIH3a+SeZ3FW4E1ROvfLmA8nLDZ1k+VeETCZc/4q950X4q0HxBtQor
tiXevVc7j6siDKfDqarwq3irbuqtcyjYXfneoqcSyR1YLKbMja9tHSru/63E
9H9YtVfrLPZXrRpRvqhEB8fj57x8ziCrcXJxt1QlLsYbvu7J4URV5tfH/jJW
orO61Xm38dNYodWb96K4AreYbSdlH3Fg8nLxwTLOCmTSkdg3e/TUTt8JLSCu
leMHKSZxw7QTqK/x6V1adTnu0iPLhmqyImeJaGfo+3IM2Huz6GHnMSSYMbod
u1WOfVKa7yjjjmL3hXlp91Pl6HTZ7nGCEzP6fI+NtCwrw9cNJkK6zxjR+KbT
w8WAMuQKPvs9TfsI3tl6RqtvVIan25sWP+gfRurnJ43Vjpfht0+cR9b9D6GZ
sIeU0OtS3KM4QqCpp0XVsTez0dKl6HJU3J5Xez8KBciHsTGWoo5mEtfBPTQ4
uYdiHx2pBLkEqKobjfZiWXpftr1nCRrKWZUGEakwQj/XYONFCZpWXgsiH6VE
jcb3TWMHS3BP0VKX2eJuFP9877PmUDGm+UlVBS3uQmYJfvGWjGL8vF/+kz5h
F9aF/gsq1CpG0Ud7/j0z3ibFqZYoi18uRh4WSdaoik3SF5owyiSaYqRet++v
v7xBkjF+rB+YUoRJTBCVfWOVdJJL7CSjUxHWJ4flbY4vkzbaGetdHhdh9PNJ
ea6gJVLqldrLHymLsLvE/6qpyALJfSn230x7IRYVh925c3ye9CbaKeBFfCEu
hxSj4f45Etchmd33HxTiXonrJ9V5p0m7i0+mVZwvRL39uPvGk0lS74eNl1cI
hZiqumwsHDlO8utLreaLLsAMD9K7CfNR0ltvD+sIywJMppP0yKQaId2VMxBi
VS5AVROhSveIIRJN4tkf+zby0bdTpaGIZYA0okNx27o2H78mHP6hP9dHKmTu
314Oy8dnxfHLTxJ6SRaf/J8N3c7H1cqYysmITpKakCnzI/Yd7OI0SVHdTro0
eq+ifikPH3z6z/ndwTbStOIBfgzMw7pjeYdZ+ptIFbvHBy6Z5OH7jDSrmjeN
pN9/S77H3chDz19xP1voG0j2emFyp1nzkE3MZeNQeR0pT5KwItSPeNjKiq6F
p5b0MTzzMbsz4pGx/64m/KsiCdKaFNAJIUa5xfsmVVWQIjqHXf/Zk7D4CuPP
8JUSUocFU9AvIRJy98S8dVArJtGdvJF4dyAXKfaIfiptKCTJoGk+pUcuqnBw
3mB9XkB6/zSqIRNy8VFF3NWrdPmkmF3tg2+mc3Ao80A1gz+SekL3LbH/ysHs
iyWPPKRzSdeH9Zid17Mx/VFXdjI5g2Tm+JObGJ2NIlYbTqJH0knxZ6vE5h9k
48tbSuS3N9NIA2Wb8pFU2bi1dF7N81cKiVnvwmP1tCwsGvp4qo4umXR7v8Yb
umdZ2OBbamr7M5FkHedmVcCQhaB0v5jDPp40Nj0TzGOYiStNGrJOf6JJrO5s
yT0nM9FX2FeMx/43SUngbqFndQYOOM7IidhFkOwbbJquW2QgYyNvg0BUGCnD
JHl4nScDH27b7MuZDSFNHhlcjm9Px8TxHwU+6sEktr+HqXWc0nHtOeNn6dJf
pC+rb3kqh/9i9ZSSkLOPH4n0I0Lik/dfXHiezHr7tg9pXrzlttDVv3g9+Wil
pYA3iauLSmN0Lg3TNQuY+mU8SeqWIv/9DE7DEw6Tfc8t3UluJ19Z37mThrpc
b68p5biSCtDPY892KiYpeh7pKnImLT8tD02PS8XPKXa3bh90IvHsXk/Rf5SK
DoT7opU+DiSNMJ7iUzSpGJPtOVqlakfylH3U0piRgkv/NVbuv2VDKhl2Gf38
MgXnuNe2aXqtSOuOOasSTCl4WGZVesbanMTHPbVvtigZH9rNOWe+/UDSLj/B
Em6SjNeELhxtTHlH8tFT5FXjSEZ9uupPh0VNSJX7P0nR1ifhweQLQtkbhiTC
nwTFvE9J6Oo796Br/g1JWLFP8y1fEqr3nvd8oqZHejVDb8TdnYiDU3dSkk6+
JAW4X7HtcklEJvcvMWJSz0h1AsZe7uKJmNnEY7Mcq0Wijrx280tDArYdF1gm
lGqQDMci9ecuJuBkq+WxrUx1UhsPtdtD13g03W68Kcn5gCT9Rjcxf/wPyoZn
ezCt3yNFJVQ0nJP7gxU9h3c38N8l0c+fX/KIiMMEoTplbksF0kdhV+b13XH4
xKHlVpTwTdLA+2kx7aexSPsj+Je/6TWSfOadxxW5Mfjv7H+DQ5dlSMkbiVaC
LDHI7xdq51hOJB0nMoT4f4jGrHyQ1P4nRrK1Ninc3RKF5yx7myL+XiJNFDQN
6wlFIU9m43Y+qyDpPuVl6kb331jh0r+kwMBHyrnhyyMxHYmn2nqyJFu4SZzO
q7fDbkViMJPeV4WXnKSvVQ//2x8dgVq/kRAWw0ZapMv2MKGKwJPpTTOf6VlI
T+6ypnbqhOOx71eUc5oZSZMLS2LvisKQYV+Mx5TnIZKFTy3SnQnDvUrzPxuY
aUm0YtHXohxCcTEiRrX7JhUpoNO28spICF6yIfdKuewi8Vo9vtt5fQe7xrIn
aG/kZrNdbn37OxgpH3x8c55vKVe+8OATOupgrNmDu7JEZ3NTKxuK79QHYv2H
fDUWn7HcJnrHelvPXyi1pDvspz+Qu6Ai1p12LwCTXNRX42U6cxl+To6NHfmJ
KgPU7R9GGnMF+4IWWVp+IHV5r7d3cFXu3TP3CHd8/fD70+FHjDJFuYZ6VLS2
ar6YI3VRnv1cTq57QiZz2jEfrKs0CMy4mJKbsPj69FiHN96rz/nn5hGdWyPG
dpElwAs7iqxTcn4F505bNYorPvFEib4XbA7b3rkHihyv25z0QAmLzTzKhC+5
agxvw1/hNyxf9EvSu26V6xvQkV1zxRW3HDV0i5iMclu4rjQKFzljYbP5MU8V
7dwjSb/H/a874e6ZF7tFbZVz70nQ7d5V7oAcTgccSh9eyfUsfnvs5S07pB5Y
PkUfeyG37k4nf3W1NfKI0zkNfGXKPZlq5/4i2AJbcg20Nx9s5fwsU0LBCFPM
2mJaPlPRk3O0+8T0drQxRqmpmTLZpeecH2wW83mij0LrseevvXLI4aI19OV7
qYUWHkLid+slc6ybuJtYChUwvOCvVeDVlGzeg916lBeEQfRBMdurGxQSLXO2
QfSramDvIWT4nzOVpLnX9Qp9YUOoGnpy7oFliOS21cefQRffgchE7i/Or1WS
1npxrxt5zKCK+5CKya0ZyT2qvVJ7uT7Be9OFrGwrGqlCti+ff9HbQsyBPcH7
/3JI2ftwGIq42cOK4YlVJhYRqeu0OWr1+z/Dz6Ak6Y3Mm1J7bVWu6H/5Aify
h+YPaKtLla1Mn6Pc+xVuGjodOK+oK+X8xokhyN4NGGJZdFmX30tFzrlbstq4
Q6MiW1Vfv52UY1y30T/0gAPWgdGxzu5SL1/yvPi77Qk/GD2nGHz9peQ4TNXt
pLyBOBzz1y0nXIq7u1BRyeI7ZExefTVplSC1z4/+6olsH7jSNTIX+Thdalz5
icj4mi/U7XFaLVzJk6o4EHM+XfQHXDMrnP1+sUwqtmz5lL2pPwTJXrdbm6uT
+mp39cjdvz/BTr4mlqDVKvWa6E59cikAruUdTHlY3SulsNa1OS4UCPMHyjUo
1Iel+FLPzaUbB0H5QLZr3v1JKSeRbOMCtWD4o1FGEPKdl1r17p/kXg0GI9Z3
XLlcq1Kv5ve+/OYbArf2mO9LOEKWarvD1790ORTqNgu5DzfuIcr9uf/ocUso
HOjjDXnKuI+YSWPeXPAuDKROPD06aHWQGHyBsTGBIxyuyZRlsZMPEx2VEuoC
asPB5iTlDaLAMeIbk5s1XywiIOGXkYW4zSnifZ/ByvfnIiH83vE7N9xPEyUy
Lct1WiJB5vAl7ejT3ESOLuZSJbvfoMWeNGDkf4G4j5xUJMUfBRf1xwI5aQWJ
s+y3C3i6oyDXQtPAd+ASsVV2BJmdo2FQqKpm6oU4kfTSOpdCJAbeqh1cP5IM
xHDn49lzgzFgLBe83DcjQ3T5k5rR4x4LNW9i4lU+Xyca1yn+rZSKg8jOkxo6
ifJEtYWxlIzxOPjS+UigyPIOEZjskiJ8/4BfLebss1UmcomdSPCUjYesz9y2
q3EqRNrH6XGf5uLh9iVdhsO3HxIXrO7GvA5MAI/PtyVGXj8hTtUtNcadSQSq
tzY/ThzUIj4dKFA+bZEIdLd7tJgydIhNC9/qfzQkwv2M0aSTWS+INyifKNGf
SwKb1axT6Sf1iFlMPLWOn5JAJ9I/4PzsGyIf94rCVnMSKOyzWqtlNSKGihVV
mfAmQ/+ImbabnQmR8ZbHrXHbZIg5XulYI/ie6PRYo+JpezLcfdN02E3gI3Hz
zfmbrRdToKhKlE/5swXxv0+rpQqOKfD8gNgn5pPWxAH34utFXSmw2LSS/5LX
lqga6lksLpQKnrqbrUQTe2J5iqZs0pdUMNlb9ez7iiNRspi38GxfKphujx3I
IX0hJrasXQm8nAZF/WkrmjVfiafHSvKOuKaBJa1W6g0md6LPmhe4DKZBQSG9
fO+MB5FmvxZpl/hfUP+Uce3FihfRkpVP6oP7X8jw9ea15/chzl7YyJ4e+QvH
x2bZWYL8iM+gTPy5VDp8U/H6JX/jJ7FN6Xtmp1c6nOGUFjG+EEi8pa0tqjye
DmfNmq4ejw0mkkwuppdJZwBLiMtBKZ1QoqDD5iXwzQCZ4EM3s66EEyN8ylPT
pjKAZlGnRulmJPFolI8Qr2wmMLkw8I1aRBHJFfwCx+YyYU7X5azV2z9E466t
hG83skDtqFe2+6lE4shUBR9VYBaIcAtXOYYkER+Sff9YLGaBQc5sDIVMCrGK
/jnvgnw2cGaZjVLtSSNKcwjG6oZkQzXbNeHwkb/EFCHyub6VbBC5xf2cbiaD
6K/642x1eA44Ia9boGkuke7Vi8irGzng1fGVI3MTiTYfhc5k3c0Fu3pG8jW1
fOKiMyGcPyoX/r0sE56tKCC+Cqjm+L2dCylrIb/rHhQRO//4h5xQIYGutZaw
AaGEqIgv2bxjSUBsFcrUKiklXhrYddJGDeFpNV/v/qRKIl/Wgzn+aISw8pdK
d1OqiVyef4r61hCKmhiSpZpriftD4i4FK+TB81aqDFloIFK7Pji1+i4PomLC
u6PsG4kUH3fvUwrMg3iKE+M3u5uIm0pqXeTpPOCLJZ4/UNVKXJXcU/KAOR+m
Jvcz8z5rJy5yxyckQD4w+Hf22xzuJE4SKOw03fPh9kmGXNGcHuLYZPzr9Ix8
OGOnk7TwqI841PZQ9WB/PpB4ZO+lvuwndicmnEOBAnhVlkthETtI7AhQP8ys
XgDxrTjXMjREbHGi3DKwLYCFiZuihXwjxJqnj+pONhbA4QIKosTKGLHiNlXW
+40CkCvzG7ttOk4sEU0KqzldCLmvmo9u0kwSSfR7Ta3eFsIvj7NNXwxniFmb
SU9bAgpBJVOylSF0lvh37LE8X3EhGL84RPHGd44Yn5d8ooexCH6zeJXERS4Q
Y+Ke7L1MLIJspZ/fvuUvEiP9qOdcXxTBDb/fF9f+LRGDDDWKpNKLwLbxVbvT
81ViwON98d97i+BO2tu46sw1op9cqu/U3mJYFV5kbT2xQXRno9H/pVYMTBMe
ir+Zt4lfadPuL1kXQ0a2ZGxSPJnotKpJVIguBo+r6fso4ghgXZd2aGutGITm
w1+dN94NFjlPN+5zlICNn4Ttk2d74EPU/uE4+RLYPgMB7FoUYGitlfH4Zwkc
eaD19p85FWjxH9DMkSyFzQCTd51X9oMGa4bckeelIOpS6THtRQvq1DqCr11L
Ye/KkOjCwgFQ7sugZO0phRqHsKnu/+hBsUpnxoSqDNJ3axcQLx8C+Qy69kq+
MqC9Mc7iQ8EAMu7P4sw/lUEw949jYlmHgWhx0KfxdxmI+4X9OhR6BMRfZX06
X1cGbXRaH9Y9GUFQmv5eJ1s5+DIYuJz3YIbTs9lr4gXlsFuKaih3LytYVF+1
X5wqB8Xg11XWj05AS0wlXfyxCnAysqFbzjkJzs87T7MbVcD2xy7Nl81sMCSj
E98RUAFf9h0vYwhgBym2CVHvsgqI+KNU46zHAbMd6wp72SqBxsN/cfgU545/
27a8W5XwRit56s7eMxD+nUbHzLQSjozo3vBeOQMPlI5/mKqphMs6G8zVC2eB
VCwW2mhZBZcefuFX0OGFo2H5vK7RVcA7H0JV9eMCGFvfTL/eXAV6DM/Z/Tr5
4IzEw6pM3moYSPjrKZHPD1ZH+1VN1KqBzHBb99RbAWhbetXPa18NP35lJGhc
EISviR+Wgzqr4b2tmEJiihCMuBJsHu6tAQOOL61nbIRBWt9p/2GhGshduSyT
q3IJFs74sTk610CUhvAqJ6MIqP9Ml38tVgtyxOl9g/PikPoBms88rwVNBY1f
emQJoFMt1ex1r4VPT2znO45IQT5961vlsVooDN7FYPwI4IBpApmSpg70bhUI
uV6XhqznC0UDp+qA5e5VpQdD0nDkqvmdgFt1EEloI6lelIF8ATzyUasOXE4X
+zZ0yYAB254OFdM6qL/P/r7+21Uo23J+djCsDuTdeqKmqK6BeYb/R9v1OmDg
PzfTLyUH3L97iJr09bCrV+1vMstNaPrOQSHJVQ8p+XvFrhPkgc8kxm3pbj0s
KwaKPu+5BQMXssJeRddDJSg52C3cgW+s26+uYT1Ec766JeioBJL7Zfg4muvh
TNTNImS6Cz5j5RmdhAaQpt913U9WGW6GtVcrqjUA5/u7NTwt92HWIf5F8ZsG
YOYsyztrpwJ+r+zIEnYNMCpZ0TIlrApjFy4InItvAKVDu9Su/34AThnW3nso
GuEAzym+xxXqwP9T5YLZsUYYdhwmNgQ/gjZLnpJZvkYIejO9TbB8DNxXm1a6
HzbC3uEDaTQ3NKCs+uyjjIRGeM8qzY8MWmCYuLnAV9wIDPWmGck+WnDUq/5r
REcjqNyjfEJ7UhteqZmTPCmboKBkNlBSRAeoB2vY3zxqAv5kb40/359DYnFY
1qBhE5itxm9MXH4BalEf7qk7NsF88MYLvq4XEPWGw+FGUhMEHj/cdVjoFdxY
fTfGvrcZhGsPPi4/og/THfI2fqzN4OHOe/Zrmz745J46flCwGc6Vkl9ThbyG
EdvyW5uPm0GqGSVtpQ3A8cCJhJbkZnA6D+fP9RgC3+zcDYWyZth+Ezkge98I
WhpK+gq7m+GvhNAVjmoj4PIzZEiiboFSjqe5aqXGUMJR9M5FowXe+RhRS/e+
BQPKH3S737YAZ0dg//zrd8A09ub3hy8t0E3wtO/Yegcv/jC3P09tgYQ1pjGH
c6ZAJaovKU3TCqJHj96iifkI1xQY9iyltUJC7k0/M41P4Ka1b26tvBV0ZDQk
y2itoe0doXe7uxV2GTTyXnxtDXqB01nUVG2gLG71IZHfBtxmKoxZVdtAaenv
Q+16W2jdU/CUXa8NrnB7i8YT7YDtaKYil1UbvL/R6M8cbwcp0r95+CPbIG+f
5J/nXvbQ5mE3cHW5DWib7n4e++AI7JFmdXI07UC+bAfHVh1BL8uIpHCyHUq8
NQYTPn6GzQFN/wfX20Ho9YbcJXsnYBeWVNb3aQdqFj6/lHRn0GtZzPe83AFd
1IQ/5iHfIGV8IsFXvgOWX3R/GzrjDpvbA78CNDrAY05nxcPCHdzO1n+MdOyA
fxxGC758HpDy4Y9AVksHVEvDjeUIT9j8Gn4KxzvAk/ZVxMpeL7ge8vNA0XYH
6Fg4pSToe0Fb+Zd/1Vyd4JXTcv6JqDdsHn8R0v++Ex6b87tpj36HaxeffBtx
7oSv1zznqx/4gNvV+5YTgZ2Q0Xb+HWeFD7C/lnm4VNIJY9QRuvGpvnA99+Sh
fcxdcNBG/8pGyA/4ptlqzZ/eBRHHM7T6B3+B46QkjFR1AfXE5HiXbSBYfQzd
+jnQBX9z9LsjOYPAwOuN2V66buj8HEJ6KRoMiqV73vY864Z/AvMXFX1C4Pp9
XUFvs27w4mf2+jEXAsT+mtmb7t0QReQ6ZaoYCnwbP96kZXcDUc5JmkwbBnQX
+V9+ZegBVx7OqqFf4UCV8/2MDHcP+PGOCmlTRcC23MbgilQPoELns2DDCJjW
Lnmqo9sDM+wG7qbykVDj81hdPK8HxpSpX8GRKHDbdlIYe9MLi9elTDso48DR
ZXp/oF0vUOR48Wq5xu3U9/sV9370wsezGU8PMf8BA8FTN7CoF469/e1NIxAP
Z1PU2SoP9ME4HfvgEelECPvoSo442gch/R61A18T4ZR0Xo/16T4oeEvrO9CR
CMzVZ35dFuuDCVb+DkezJNg7Onss9FkfVD+p7KouSwa7P6fXLP7rg8TWQ0w+
p1KAbKLa9sCsD5Q5P0okmKbACiHH54B7H9hOfn8xdD4VRo9/Pvwxuw+avzHG
V4WnQaniiQNKDP2Q95uFeKUrA47w9TMZs/ZDKPsToSSZTHh6IILNm6sfjo27
+dvEZMJ6Ja9wm3g/hE+kqihbZQHvTclHT3X6YePul/zjIjngfvVRtGFqP+xr
kur2mEXo4jiV4knqhzvr4/bPRPLg3O7BnNSyfnhM5g1WNM2Dgjy9utWufqDO
PiPns5YHS1JmK9aUA/DrytI2D3UBqIv+uOahOgC6+oUUF+4UQSTzkzspTwdA
uypWgT2gCBaW2R426w2Ak5SXCcV4EXxNi3p97NMA7MkXCQpyKgYUzPAK+T0A
7qoTMTr1JcB5obU/aXUA8J1x4LJnORjS/pxo3D0IfceW+xpmyiF3QmNpiXYQ
ii/vMkKFClCNGaEWZx8EW2GBrnraSnA6u3yx4OYg+J69+5bJrwqm2BmtGvwH
wYWH48PsUC2ImocY5YcPwgi/SmMVdx3YNl14nhg/CM5RSmdSNeuA6fP1224F
g8DCFlpErK0D4qTpcfnxQQh7GiOpkVYP3/52/M0XGwKz9sk6r8BG6Dj4Mibx
6hAErsQctutpBE7dhV9BCkMQsfbJ+/CpJshgoXWw1BoCmuz9iSyhTdBnLXVP
7MsQeJiGPutNaAaBW8EziW1DID11x3dovBUswnkHgwaG4NCZDfMbl9qgZCuj
xW1yCLzbW7seWLeBemJ97mvCMByfeJtod7QdbBn3fOXmHobOhdyDx+52QGPv
c+5g02HYzpA7mzHYBe/entf6xjQCl/ZI3GuV6wcmmpkcVfYRmJRt8zG37IeM
oOSjJ3lHILdxNudrcj9sVojVxV0ZAYb1frelEwNgyy4HFa9H4Klqm2Dv2gC4
1Tw7QVk4AvqqwVdniocgkjuw3ey/UXCKuEgIixsDOZLWJRmzUThMLyWsMz0G
/+6d8djnMAr1UXs/2PH/A95PcXJ+/qPQuMqS2Zf2D5Kbs9LTikeBLtzs7GLR
OJBsW7/PsoxBiZTAlNfCJLR20Su/KBuD3Mzjp+qLZkHe5Xnb24Yx8PpoPk0x
Ngs5Ylkadl1jsL/R3PXO/jkI9tHRD54dg4RfN5m4lOfgldJf+46j/0Ce3SEo
v28O1gsfpSvq/oMEc4WX84QFYI2NZBWhGQcBVdN5v+tL4PZwI/TakXEIz8mH
Eb0lIFArnbt/chwqbjYbnf+2BEPP1i4ZCe749G5f8mtdgj8nb9+JVR8Havpf
XH0vl4HoOWdzKnYcJG6c/sLksAJPP0qO7r09Afkv5S74Ra8Bz7Oy5mnVCaAS
qqO9V70GC4r3i5q1JuCniMrbltk1cOR8HRJmOgF3pwm2/CLrEFf78xGETYCe
wJwmZf46rJ3ZqH2/PgHD8oWPm0s3oID+M+kJ5SR8rus++2R0A75uMPyRpZ+E
/YtQ5021CWz1PM4MXJPwII9l8IDsJly3UJeNvzsJ59zpN7azNsGzITNjOGoS
JifVL0b7bsHj3Gu/q1ImQcn14p/PSVs7c1r99xTSJOjJ8tgTKrcgw/KfsU3T
JKzdLbHL2dyCHu5jF04QpuDIL6EFqUfbEHU4goVi/xRERXoRa422wWibn2aC
cQoOfq+mmv+8DRRNcqMZ56fA9xfrkbHkbeD59CHk/oMp6H9lSTLfQ4ZFXQp3
Ce0pOPp6j5YVExly77tbcbyZAt2xWvH958igxBP1aNZ2Cs5Rsb7Lu02G44zC
8q2uU8B+hUVt9AkZBskoSvKbgokrDqbfDcjwvrmV8Wv8FOTd8s23dyODdJ4O
hUnmFJCZ1qOLfpFhX+zM/MOiKbjkpS7/JY4MAdZ76852TIGKC49tYBkZCs+L
OBdSTkP8/WvcE+tk0Lh4P2zu4DQsuszKFe4mSK8KGuWcOj4N3VlbCe17CdK8
4rHT5nzT0M7deOTpIYJ0iVTZ3hjRabi3m6OjlpEg/fTKMFubzDSIXcG+vccJ
0t5yp+4JP5gGffIZ7Tp2gjTfbcnX2lrTcDUpIOfpGYJ02Z2HDu7606BxP5s5
k5sgrX3vfSDp3TSExw7otZ8nSG+peqVPfpqGn77vEvP5CNJ+6ol1x52nwcG8
ddhIgCAtqFH9T857Go4r6O0fFyJIV2mN7zYNnIbQO185eS4TpF8838saETUN
V8y/iwiKEqQJupyXGpOnYdy9SWG3OEHa//UVxV2507Dd6WLiL0GQFjbUeHmx
dBqUQ6fS1yUJ0jUm5tZP6qch8erRC6eJBOlXpn4/XDqn4dM+hrHDQJDebZ6W
nDk8DZu/iwjVOzjAqqFydGYasoxWPRSlCdIitjNDjOvTUEK8k+m3gxscaLev
UsyAPTX4xu7g11/OMRvTzYCrBO2dzzuYyvU6f/DRGcjLK6Ti3cHB7jo3azhm
YJYkPPpjh1/c21p7k3cGzJjGWep3/DT5/jLnEZkBIb/TjfVSBGmDn1nealdm
gHetRipgxz91UOsfx1szEG5v/Y1/536hoYslqSozMO2qv+0mRpCWjDzUN6A5
A25h6oXpIgTplmi+NXq9GTBy+H0s9hJB2vDPLQZ4OwPevYKgu/N9aZJenX9j
NQNslY/ezvMTpMNTHWR/Os2ANPPKxvWd+LRn4/uVgBkQbJ0+dm8nnm+x69uZ
3zOQcWz2yv6deNMVrkXdS5qBd5/8e7/t5INMhVBnQvEMrKQ4ZJCPEaS7qpUW
u2tnwGY51HdiJ5/e1785QNsxA2lbB4QjdvItpu03vJqegd+OJynsqAnS17qK
1HxWZ+DPPu/J33sI0rMzs6Lau2YhLrtwRWSLDM4LB5Td988C16tm1pFRMpDW
b9hPnpqFcY6smtoMMrhYtLjvOTMLaZ0umew7/4fa9rNfx3lmYdV1RuFoEBnm
d9n+lROeBQq79P5lOzJw7csZC5ebha2gSi3PmzvvS/n0QhVm4fLipKmh+A6/
Y8hEkPIszP7ICdriIYMqxedp/8ezUJ5QmMy9nwwO5LuL7oaz8JfhuXRn6TYM
LY2SLfxmIejkyzJboW1ITFW3Mfs1C7z7DnjlndoGC5Pq3R9CZ+GGc8X7nP3b
cGQumdIkbhYefd9nNj+wBVcnLffr5s2C58t0PhO3LQgdOMysstM38t2KaX53
bIJBiKOf8tQsyK641UkVboL407VjSvOz8DZOJiY0dhMauntYb23OAlvnz58d
5puwqz2a4wr93M5eXWZ46vgmPK0FvguicxD+63N3h+IGnMjRv0bpNAfC9tbG
bUFrcOTY+rqB6xy8LVNsybRZA9r3ToltnnMgzRt+z15nDTYvRrDE/ZqD+tdG
G21ca9AR1jOnnDIHhJX4w0Fxq+DjcjcwuGcO9m9UXXZMWwG6RyIrEpfmIVbc
6Ourwp3+tL472nhgHlryLru2rc/B08H2hU+j88D7TT6W1DsHeVWJRNfJedg6
U0yVVTQH1kEaTb+X56HpdEfsnNsckGWzyF00CzD64k3ua8452P5mpHpDaAFk
RFN1q+7NwuaZvj2s9gvwZPmhp4rLFDw+mK547ssCBBlncKk/moKcVdcfl90W
QO+OPvn7Tl23qJS4eNdvAV6mR99KrZqEDUNfdce4BZh590LL/dAkrGcrJs02
LcDvu6QjoxHjsHI3V6P4zCKksai5Ba2Ngm17Qjfx/E7zuv1O/HH1zlygFfo4
g38Rri++e/Y4ZBS4DD+rx0oswveua9Nc8qNw3+2uqsfdRZgV8fk2EDgCiRXD
Ck8sF6G6My+j8/4w6F6lk1pqWoTBykLpvLkBWKwg5Bh0LIJYGZd/bPUAWCsv
iI/1LoJb3OL15ugB8NNqE+0cXwRThQMRA9oDUPIpVDifsASbeeWuPa39wJFz
mdeVdwnerAS6sFf3QaewJssZ+5054PPqYFNxN7xYu3TQ4csSNFS4blxz7YbZ
XNo9w25LsKVOdeekSjdQ3MgaD/+xBCMlzHq7R7qA7yFjFmfCElx+NB3pRNsF
1paVapwdS6DxjPQf3esOoJEJvW3fuwR9LZofE8Q64DvVR+mhoSVIyaNMit/b
ATHfuLjDZ5ZgRdjrRXF4OzSG2KycplyGaqpYZtnBNuAqEfE5zb8MD8v1/amN
WiHRmc7Z7tIypEuazMrJtoL4nWHLQfFlkL3jZdHD3Ap32jyfh11bBvNR1j17
81rgw/iU8OlHyyD10c+YeKQFKunCGzkcl8GOcsG2urIJDB/QH+LoWgYD/tDI
LJMG0I666H+mfxnucV8emlduAJU1xdPnRpYh25A174VgA4j/dL3EP7vjx2Yx
lzxXD5S9NOpEihUgZ79rnzCpB/8XlGHqvCuwprH6UNW2DorerQt7WayAxL7P
jzJcq+FvyTGSj80K0A5r8vs/rIZoZrEb/o4rcDjYtKzzTDW4ZZo+DHFfgaGw
3d/NsQoebi1aJoSvwBddrmMsK5UwbT9TUlm1Auf3jDfJmVbAMe8hNYoTq/Bn
wcSIJr0URO1OMb3lWIX7dhnVAs6loGqs3jh4dhUetl1JTn5SCp5KdQqFgqsg
7f/3BomyFGgP5MjYyq3CMGPDvX8PS2DbwYuX8HYVwn1k7FYPFQPru5p//31c
hYGKPxQvd/YfiWf7fvdarcJr4++vOQuL4IPMJ3b8sgq/MsqNvrwrgrltPSar
oFXg7R1nm+guhCFTGcJmxSpQRxcqf84pgN0vLXP161aBULnS8fNHAbCpZph1
Nq8C5Zxby9L7AngizLeU1bcKuws5500FC6Bl9tj4x+VV2NUVYxURlw/lunON
K+xr8MztntXFP3kQ/yj498KHNZCYTf28Kz0XhFtPr1NZrQFXukAXp30uZCv/
vn3cbg24pWk6I+7mQtnN+Dlp1zUglAjSkKZyYFAkR8ItZA2EE6+3C/HkwNEj
bbXcFWvA/78W7vwd6gSA4zhb5Fg0trTIURaP44lyrHX02eohkfspmzO21bJM
oUT7aK0zucZMjBwxbkszjyY75IpyrTbnYz0UD7s82iVH8ug735nvzg/9F+/X
L+/12fGH/KdIfqmyG6hJYEzN1VVqbyvknFku0boEongMj4JZAfKeq5Wl6hNQ
ZI1vxvIFKH2qdbrRjACO0V8rXhFAUG+SvXuGgGVOhgZ78Hespp7VZUUSSKXl
GNY8bIGvwy/Og50EkshJPb2f+Xj9YVmlt5fA+S8CU/L8+Qjluv/VPkDAQi0h
08Kej0gd7TDeGIF++by3uuLHSJbuTClcIkDYNPWlpT4Gt4/ouqIkhJpX9Ihu
STP2usdZSQcKUZ7wZaXqDA/3ZOdIIkSIlTdj5kF1PKh0O77YDhOisHhnUvom
DxrmB31WrgvR6lk86k7jwUz1yfWRVCGuRWRRa25c+E1tNpY1CdHPjb3dOtWE
5qCoo7akEP6qCc9ij/6G0JYNrQppEkF8+pjBTgMOfH5DXXYfieHaSprpHw2I
a7u9f5xG4pW8OtM4tgG2B+6Kww1J1DOmRUuD9egdqpx54E3CT3ZR9VVyHSYt
p5kf60nEm52yuWxag7Qs/9xgLglr7nk/S/kaWC/OZfbxSbjIGbKdl6tRlLeU
lN9FIrTOIsKMU43Af7foRpMkMoy3V1fUq7FcruR6iSLR9fFGYKVaFXYVzuxp
uyDCHeH8+0O2HKi+U77f6yfCh5ua36/qcGAyNvPVy2ARGhNVMldlOAhixzjN
h4vQJirtpI9X4LleZabMHRGYHk3nYqIqkGsvvd+7VgRPpkPt1Yvl0Kd3H/5v
RwQqxMP4UkYpTnplPdoWijDN3bSfCCjFd5a+J8VSEnf4cA6zTpTiHvEumCbp
gFGFYe/FuRJspGtXfS3phKRSFbtm2xJ0lCcapZ4Vg5bSvlEvfgDvMTtrrSIx
uCOTfqtP2FCwU+zpKBPDZ44XY5fLRk/1jGtAlRgXORvGo1fZMI9PCCnhirFe
PhUwqMmGso4gW71PjLScPP2l9EIMRZ74++CWGG0lGX8GhRfgWzkjhrLEKevz
E0dIfxZ2o3c1uF4U5NZaGxQdWODNDtS4+VJ4P+8+4KXNgjYvrD07lMK1jmHd
pAUmyAvVywoJFIbGO+X8IpgQVOk47KulMC9z3KYxLR90pfWB2kYK5kpWHdvh
+TC41eXt1ExBdFe/ge6ej/sugT+mdUhclN7vtnUoHzGbxaw9ExRiWuZnjj1i
wNg/QrtqmsLxyjdtm0wGFl5803B6jkJUXIHlYjwDnkXTXb++pWBlqlLt4siA
3Gf1546sU/hHvLPWY8JA90+3Jp9tU1ioWEj8QZUh8ZZT8GWJkziOBlIRW3n4
9CfBpz8J/gfTzzUd
         "]]}}, AspectRatio -> 
      NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True, 
      AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, ImageSize -> Medium, 
      Method -> {}, PlotLabel -> 
      FormBox["\"Even and uneven functions hD\"", TraditionalForm], 
      PlotRange -> {{-2, 2}, {-2.031575156965207, 2.5400455378727154`}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {
        Scaled[0.02], 
        Scaled[0.02]}],
     TemplateBox[{"0", "1", "2", "3", "4", "5", "6"}, "LineLegend", 
      DisplayFunction -> (StyleBox[
        StyleBox[
         PaneBox[
          TagBox[
           GridBox[{{
              StyleBox[
               TagBox[
                FormBox["\"n=\"", TraditionalForm], TraditionalForm, Editable -> 
                True], {FontFamily -> "Times"}, Background -> Automatic, 
               StripOnInput -> False]}, {
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[
                    0.9372549019607843, 0.6470588235294118, 
                    0.6431372549019608]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[
                    0.9372549019607843, 0.6470588235294118, 
                    0.6431372549019608]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> 1, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Dashing[{Small, Small}], 
                    RGBColor[
                    0.6470588235294118, 0.5686274509803921, 
                    0.611764705882353]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Dashing[{Small, Small}], 
                    RGBColor[
                    0.6470588235294118, 0.5686274509803921, 
                    0.611764705882353]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> 1, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[
                    0.6745098039215687, 0.07450980392156863, 
                    0.043137254901960784`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[
                    0.6745098039215687, 0.07450980392156863, 
                    0.043137254901960784`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> 1, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Dashing[{Small, Small}], 
                    RGBColor[
                    0.2823529411764706, 0.21176470588235294`, 
                    0.27450980392156865`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Dashing[{Small, Small}], 
                    RGBColor[
                    0.2823529411764706, 0.21176470588235294`, 
                    0.27450980392156865`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> 1, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[
                    0.8627450980392157, 0.5215686274509804, 
                    0.34509803921568627`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[
                    0.8627450980392157, 0.5215686274509804, 
                    0.34509803921568627`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> 1, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Dashing[{Small, Small}], 
                    RGBColor[
                    0.09411764705882353, 0.08235294117647059, 
                    0.2901960784313726]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Dashing[{Small, Small}], 
                    RGBColor[
                    0.09411764705882353, 0.08235294117647059, 
                    0.2901960784313726]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> 1, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.9686274509803922, 0.6039215686274509, 0.]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[
                    0.9686274509803922, 0.6039215686274509, 0.]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> 1, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
          Alignment -> Left, AppearanceElements -> None, 
          ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"],
          LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
        Background -> Automatic, StripOnInput -> False]& ), Editable -> True, 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{"RGBColor", "[", 
                   
                   RowBox[{
                    "0.9372549019607843`", ",", "0.6470588235294118`", ",", 
                    "0.6431372549019608`"}], "]"}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.6470588235294118`", ",", "0.5686274509803921`", ",", 
                    "0.611764705882353`"}], "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{"RGBColor", "[", 
                   
                   RowBox[{
                    "0.6745098039215687`", ",", "0.07450980392156863`", ",", 
                    "0.043137254901960784`"}], "]"}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2823529411764706`", ",", "0.21176470588235294`", ",", 
                    "0.27450980392156865`"}], "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{"RGBColor", "[", 
                   
                   RowBox[{
                    "0.8627450980392157`", ",", "0.5215686274509804`", ",", 
                    "0.34509803921568627`"}], "]"}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.09411764705882353`", ",", "0.08235294117647059`", ",", 
                    "0.2901960784313726`"}], "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{"RGBColor", "[", 
                   
                   RowBox[{
                    "0.9686274509803922`", ",", "0.6039215686274509`", ",", 
                    "0.`"}], "]"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
               ",", #7}], "}"}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"n=\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{}, {}, {
        RGBColor[0.9372549019607843, 0.6470588235294118, 0.6431372549019608], 
        
        LineBox[CompressedData["
1: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
         "]], 
        LineBox[CompressedData["
1:eJwVlWc81Y0DxQmRzBLZOxIqUZKcX4NEySgJCUXa2qFSRHpklFJE1rVlhMfm
sTKyMy7JXiEuLi4u99//1XnzPefN+XzOkba/ZeqwjomJSYyZien/ypjidjhn
mIXIo54i/lOaRE3mhaMZr7Jw1yo6PTRMk9CuVC5X6MtCWsrd2Q3qmkR6+9Kh
z3uz8WKsd395wz4ieCkIvoPZ+DWiy/aIex9xCdVaDgdz8CT5a/C2FA2CbPw+
72dQDkgJ3bU8lhqEob29pul4DnrFfvuCU4NQ86Jr4EMuBqS23xa5rU4wanft
Fp7Jw/Nrp2QszfcQd7pX0wKO5aP6x75IKYE9xMifWtX1n/PxUj75ot8PNaKO
z0F5zqAAXtKmIqJn1YhQ8xCFelIhWNj4dFxv7SZ4nBzjjqwUooYzrq5Xczfx
3GWPfL5JEXQrVUyfsewmnMLqZeLXihDWOvTtWNguQmOAWeK5RQl80q9qlWbv
JFTzz87sSiyBeuqh+/K2O4ltb79U9C2VILJdMlmVayexMSpFI/Lkf8iSbjdl
OKkSdGOLbsbUf9i4VZHVRl2FoGmzfDsrVIp1BZsnk8aVCapialoaSlH78vJb
vWhlYpKJ1fNCYCnmXWmqeluUiV/padtLdpeBvy85/vGGHURXmOVmIcsyyOew
cJvVKBHtPmyrNz3KEPU1l1vzHyWiwdaqSeJHGTqVSps28SoRxXzsD5/eK8c/
bE57LOW2ExHONhUHcyoQ/M1qSf+RAhFmvSH1fW8FhHukJvT0FIiP+lkf/rBX
oqo+fceqgAIRKMV5LdyiEi5RZHuPrG3Es6Zs/tWlSnC0OGe8WJEn7HZxXyjU
rkKI76SmU5wcYSOWqy/gUIU0zh3XDz6VIyw5Lqpd96tCM/3pxHtzOcK0L5dN
rKcKOQ1Rnt845IjDgZdS3Nyr8ZlBr+i/I0vIUgqWtMpqUHZOTpbPWoZ4XH/k
BfVPDY5Z1DjpasoQ7UnfeVKFayGYLOg0KSBD/OPwU1b6di2qra2GvRulCUrX
8kl2qe9Y5LNTyDouTRRX7o/+8aQOA19UKwyNpYitMaXKfol1MD7SpJCpJkXc
eXY8R6+tDuFfU/fc2iJFyB84V5enXA+iYuNQcY4k8Tr90ULEz3rkBgqYzJEl
CMtPOQbX9zfCsL+Sb3qvOJH1CG3yDo3QvS6RLMgmTvCYV13oDWzEO+7NKyU/
xIhSvo57pmON8P3yISbgjhghcMTtVJhhE7wuezdMZosSbrmhLh7LTfANn9/C
bSpCHI/prDeyaIFjx6cEkTYhguKV6lh5owXbr7EajKULER+dPBkHPFtw+KWo
P6ufEDGmorJ7e2oLQi3z5uT0hAif3GfvWFh/oDki4PfvAkGiul7BKjftB259
Ntucm7WFOEa7PybN3gazo3dFKts2E1NdBs8/irXhq8acclHeZiK4SFKEV60N
sVdci8bDNxMjHjWGdOs2HGINWR103Ex4c4untX9tQ5rg5TWdlU3EN5mK+742
7XgdbKcrobKJ0D25iWU+uwOyaUG3pb/yEf52G2aWajpw/sr3K4bhfAT5PlPv
2q8O0BxlaoN9+Iirn6fyOdaT8Wi3+pvAC3/56do7YuZkPC3g5+fg/cu/8Rw4
skBG1jZx9TejPMTVdmrp271dYOv3/PM2lovIHJ9I+2DQBWXC++5+Ty6CvjYQ
HmbThQ75xz832XER/grNLnHeXVhtsf9qLf6Xf/Rld357F7r+NXc49HEjQRdx
jOp/8BOLypVNS8GcRMCFjme7crpRpZeVn5nNQXhPamOkrhun5yNFPgRzEE9d
olc/DXQjWW70bOJDDuJm0A1Xdp5fWP+P4LyFFgdhVMVyr+fSL5yMVCnqKmUn
eHbuuvx6Uw/e0AIbRDvXE/5rPifHbvTiUEzqxvPb2Ahv36mNnz17MV1T0PiI
i414uvV0rVlIL2TbGtzyZlmJm2qSx0oqesH3Qvx5QgkroZBpKfWduw87btht
3WvFSrCPUoSjL/VhpGriKPkjC1FlJM5tvKkf1UqssuHK6wgB1X7BO2L9CDA0
UTbZuo6w5Y6VeretH+fblzdJsq4jlr8rq5O1+pGUbNPB3s1MKB/XtrK92A8l
lexRDj9mIvCIVaJzVj92W7/2jZ9jIiw1Q3TfmA+A1fvlrkwSA3FC509l2g7g
dOai+joPBuYWpM61XR3AC/6i9Y8vMPA6O+G6sPsA5OtVtk6LMFCilhsUFf/X
P8rQqAtag5xKR38GbQAmtfqzKn6r+CO95WlL6CDCFm4ZrAtfgaZb1O1S0iBU
6m/0N7qvwKNVxSE9dRBmD8d6S+xXIPhS74R/2SB0mLUt1m9fgc7kQxGD8UHw
yxxUUsxZRsC/Xf+W7h/C2JtDsx86l7DbMHI6nTwEC6fDsnQNGh6TlAcjBoaw
SX0mslSMhm+rue3+k0MITbfSIrHQYJneXHSdaRhTtT6K/zUvwmMLy2tFxWEs
P3YnG91axI9eB8XIh8OwtPnhEp+2gPv3dtgFCI7AcW6t2fjoPAQ5pwvNpUfQ
/SzDIkR5HrkRX7dKKI+AxtS4gSEwD3rt/qaUQyN4yJdjKD1ChYe0Pmqvj8Az
0JhR+IoK/4ZL4mzlIziYEfF4Z/sc4hQ/d7reGoVt3kINw2MW+sV2GoddR3HJ
zY5MujmL32bybzZ4jYLeN+dtbzkLZfcU/Y+hozj+KP2Qgtosvrbl52RXjiI8
1JrUMjCDYo+O9xTRMWw7Inb/vf4MOrr5TB2rx3Dv6E2vRTkKDHwdyPdaxqB4
V80iUoCCwv35Np7dY/DT87K0YqUgMvjitUjKGOw7HHfwVk/DyfjfF11bf+OT
XgD7Df1pLJdb5Rhd+Q3312+Eck5NQSw5Tmwf5zjiC+IWLj2chP+5lWhdgXGY
LdKsZiwnwcRhvP20xDiWri5sCNeZxNClJY3bauNofrWYZLJ+El8kTpxKthxH
kfAQbceHCei8nXkumTwOxYWDUl7F47B10R5lPzGB7DppapvMbyhdqm6bMp+A
nI2R6Cz7b8wZna5os5uAj9G6WZU/Y/CWux4V83ACjhGdXKy5Y0hp/GSFmAl8
0nYIkz81hiX5lcYHyxOgRqwuiHqO4m1LXu5wwiR6DUyYGplGYF2kG1+XOQn3
4mp68O9hyCc0v88snsRE4hSLa8swcp/8vvO8dRLvyW+TAknD6FEUVhFn+oM5
8rkv9OPDUHJ/FHX67B+YmUkXfQ0ZQvmOff+Us01Be+CNT57hIGx2no6Z4Z0C
10lXOZrmIGhqtwslRabQTsqeMNg2CGWt5Ck31SkwcWd/VmYexDt9STP1s1Og
zgjx9uQMwNGBXSw2YQoO9rGaw4oD4Ijo+OJtOA2doduGE1v7ER1N/ZZ1Zhq5
B+kSLzj6oR3H3zdwYRpXldocVWl9cP5iuAn3phHGac+S09GHzoKSB4th09ju
W3M0+EMfksjxcJqahujDzz1uIn3YtqFwjKRPQUoqo6zEogezVapXo09SgDvx
Ru+0e1DsHTURYUrBslzqlJdUD8xZX06FWlPQ+PzIeMnYL3gxTKiBzhRcIf08
4ev6C0Pzo4zHHykQCfoufymmG9EDm4XOjFFwina1TX/DT9yM8v5o+ocC9aEn
w56ULmjZLgkbz1KQSuI5Qu7oQsuvHjFDOgVSFkMP6uK6wNyZKHOIbwbM9jL5
vbpdsG2EqormDNxtPvSE+HRCvPCaLpvPDCyfjb4gSZIhILy8fNNvBjvznUNX
2cngeuCTTn47Aw2HP2HOlA7Qd8aKpoTP4G131J+Y0g50xfTMmGbO/O37nZO2
QweCfU0+R/bMIOvik2CRjHbwWO1bPKAxi5faa5RSyzasz61MidWahYe+faWk
XhtWBU7b8xKzENLZTg3a3YbJBuf6AYNZvHDNXCzmaEPt4aSYV7azSMxKLRLL
bcVLJXHjDt9Z3LWuHOkTaQXT8rrEOwOziJ0/L9M73QLbwc4599FZ2Fq39HH2
tuC/unQdv8lZGDRpOh9raMGzCJvW+IVZ9NxLy51NaQHjaD6jm3MO3M4pVN5r
LVgLuG1+bM8cqs1cn50ZbwZdvo9F7MUcPonfOP6O2gRr3hyj7a/moLOeTTN3
uAmFNL+Qvf5zeHOzonW8vQmPvx/YafJxDgP8Vzvd8pqw4vzB0jtlDndqRS0M
3ZuwXGCUQWmdg9ugTMpb7iYsmhTZVMpTMbDdxD/LqQEenWm/dHZQoRWj+/rA
iQbw2EVb5+6iYkOZW1LfzgZsc35pmXyACr9D6oUvFutx2t/E/I0JFdGJszd2
+dQjvXb45PknVAi4X7OhpdbhyhGeg/OtVEyX7HRz4P8Oai1T4c0uKtR2lrM5
02rxzHROa6yXij2SCjHvemvx0Y6s+XOcCiGPgc87UmvxzT1avZRpHjx3s8/7
naiFTOFeZb+/u87PZua73r8GP9UviMq/mMdggJT9RtlqOC5p8Hq9mscYfZD3
JXc1KEVcLMP+81DKjPDeSqsC67H8cVLIPC7Lrt54XF8F1XNb8uXS5hE3HeCp
61KFZ0++W8h1zaNA7bl0des3bPu2L1h21wKGezf6T4dWwvksH79M9wIeJPIk
SV4oh33CzlD5/gUwF5zldD9VjjNLRrLbRxaw93R93STKofXJT2MXZQE7rhQc
nJMqB1svp6UO6yKEpd7sTxosQ6gjW4yl8t+fO3BBLOtaGSruL6sHPV7E46QT
De1epRB+N2TBKk5DaXMFF0tJCTQ9JQXvydBQ67LuMDupBOZ3LH8MKtBAiQoq
kH9VgrfGTSfL1WjQKtLizDArARd34WEPfRo886PXrf0uxppXkDLTPRp6N3Dt
OSdajKGHh5notTRsMRJJPBdYiFSryPi5R0vIGei8z12cB/UO2eX1T5eQxFJS
q5OUhwLT+BMinksQTPhFeh6ch+rjqTOE3xIqwvJiDtzKw+C+wgP+UUtwqXk/
+VQ6D1sFyI2KtUtgNZ6e2PMqFx51vLTzostgnG01HL6Ug7MH3fWri5bhTZRM
bTDIRvf8CG9Z2TIqkjncbmllwz7VqKOgahlbNAL2DShl47qkhGNa8zJesD/m
nd6YDQ/mIs/g4WXoHi/uIzVkIbVyufgS9wrWUgrtHphngdXogQbz+RX0sHnu
sLmViQybGzJa9BUYjF9ObC7PgH02RTySmY59NckjW/7NgADXPeH17HS8D+S4
5piQgQd5rnwt/HSwzf8QUvbLgJaAz9oVBTpumwil6J/NQFlNdFeIKR09y0I6
hX/S0apOfruUQIdR8xPSAdl00DiPsOSdWcUB97vdztZfsGmK512Z5Soijtva
Dh77gh3NXXJ1F1YR9vxskOOeL7D5cEev98oq1r90qfnM+QXlstGv2J6ugjfc
ubE1LwX+2sx8pnGrSDqUo2UgmgL5myViEwurWKfCdWb+dxJMmw/sFf+4hjOX
VZ8YZyaA88DG0sLwNVwv4xZ6HZmAUlKXoXXMGkSvZx4h+yVg1yMXu0+pa8h9
ZbY52ikBPJI5r4Ur1yC5eax0SSIBNdfVBrfMruHbdbJesn88CI7tgTwnGIji
H29MdIkD7TZNJNWEgXSmacFOpzik/ayKPXmWgbVnzcxCFnGQSHMseG3PgLF4
zKvivXGgnyGNcLowMBPC1ZJPjUVOjORB9jgG9l5cpFvdjcVN7umquGQGTnob
D968GIttD4tN9TIYEKnQ8w8wi8U7g/NOXoUMdOvq0pf2xOLOTGgQy4+/ecOn
ym/Pk6BkdVUihsyAbCrFYmaYhP6K/YmHexj4clrk+NN2Eow/kouf/2ZA4TQX
2385JHCsSzguPc0A9evSv/cSSCi59rD1PyoDkj/zAvaGkPCgTe+C7TIDR5g8
PNj+IUEVguMMBgMSwu89+l1J+B/Lms3H
         "]], 
        LineBox[{{-0.0006046420497074637, -30.27283026550012}, \
{-0.0005969239093718594, 24.931855828330868`}}]}, {
        RGBColor[0.6470588235294118, 0.5686274509803921, 0.611764705882353], 
        Dashing[{Small, Small}], 
        LineBox[CompressedData["
1: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
zAlVu/HM19M0JD+31W+ztiD/A/xVm6w=
         "]], 
        LineBox[CompressedData["
1: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
         "]], 
        LineBox[CompressedData["
1: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
5YUuTr/5UPwPOgpDlw==
         "]], 
        LineBox[{{-0.000603230902103301, -30.27283026550012}, \
{-0.0005980854780921399, 24.931855828330868`}}]}, {
        RGBColor[
        0.6745098039215687, 0.07450980392156863, 0.043137254901960784`], 
        LineBox[CompressedData["
1:eJwVVnc0FvzjVUmobA3Fi6wim6KMpDKSUiRtJPFGVMiuKEUZ4Yu8EpWZzIzK
/ZDdY6/I3lkZDx6P9ev31z33nHvuuf/ce66Qub3RjfUMDAx86xgY/h+lNbaN
rq2tYSX8P6cwU3fYL+7xW6SvQWLwzdNET3ekZ8mJzc6twXX17uPZd+6QlzAw
Hxpbg6z9tRj5GXcc4PRpp7Su4eyJRqWrgR7Q7J+uivy0hqmt8U+Lmzxh9LQ6
ReHqGgJ+qxZJlnvj1ZFfuvvN1pDWY5jJ3uWNpqWRYTHjNaib/vzKO+cNkzuM
Inz6a4gfvbjot+chLl44FM1w4K/f2wvCXI8ewlIyKaCabQ0zpdIMvccewbnW
5/bNwlUMR1c0cY8+RsCYUys1bxVdgvEODMw+iNt068ijrFXwJ4vwCoj5gKJh
wPtf4irmo6YrJ8x9IJzO+60hZBVC1suPRrp8UBP0YYv6zVV8bziyLarHF2JG
FSk8HKuwCYkO99vqh8N2BbxxrKuQKX4voCfvhzPPU71kNq5Czb62XOe8H9yL
g87q0VeQn3ZIfu2tHxrkLyx5DazAnJrle0n1GTy4R/XG8lYgVrer7rDzczQ1
bR4tur4CS63Sqi6RF3homVOYcmkFhbpOt0QNX0CaeuVV2PkVqCbR4tIevIAf
d+bhWwYrsDOdS3he+wJqRqaBHCoryJ1UvnPf8yU+1L5TvMqxgsO+lwzcfwfC
pUrNa7lwGUvP9Pta3IIhajZ8dih/Gasuj10jwoLR8DtIoi57GVV3D8g//hQM
KZaB+vjkZTwNDNrR3B+M3hPPRfTDl7EncP6p46kQ6JW2VEbeXsY92Yu1jZKv
wE/seQ7sXkbgyh4/PZYwULiU7qluX8ZE8zbxPRJhcL1Bb1TjWsZMN1Oa1Ikw
tLD6vtJmXsavUO7CRt8wBBlHcRlRl1BxVoPNbWM4NoyVcNymLCHyScSrB2z/
w29evq3x7kuw9jx/5pNuJCKsu//94LyEr3VJ4qftI3H8yztKkuMSlq5EXNsf
Fom4azIB6dZLiPL2D4vpjcSlFO3NheeWwGbs5njTIwq1mvYsbVJLmPomGzJF
XiPHtmQjeycdakExknOuMTgoaCf3oZUO8RWey72pMSho2n5ZrYEOhzBXD9Hu
GBA122zbcjqKIqZ25mm/QRU7l0VFBh1fhk2dt7DGoifrKnn4hA76lIW+TF8s
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
gdjwW5rsOjKKHP+M0GyX9SRzn59NX/8I+LxTyfYtTOSf+mv5km0jWG/9M4m+
l4kEOKsw368ZwbdeV9HFE0zkRsno+035Iyh/3tuq48NEdlwx6JV6OYLYWGt1
hVUm4hHMZep8cATHuDWcFRc2ER1a9LEtL4ah4laoM7LCQrpLMwSVlYdge6iU
eekyG3E/u6h9UGoIK/d1Eo97s5EdvZq3VIWHkN4lrpkcx0ZOL9dmqLMNwWnQ
73L+MBsh8pNaJ4YG4RWVc2/BkZ3Evtl3wzR8EJzky1n6cQ5i/iA+yXV+AN0S
r4I32HKSQakweXzuh92rENOhVm6yz/P95EhKPy48SNnZOMFN7Gpzkrne9mPA
NZNWs4GH0BxahK38+8E3dE6FKsNDWHO3c2+91o+JrcbTc348RPZI1KzZ394K
SN581qPGS9yM32TPX+wDr9+9zOysbYTTM0lZel0vqGXD+yMad5InnyUqOBZ6
UG5WZMo5vpPQJxMuzI73gC21WzeakY/0Xf3gnvezB9vub6cOK/GRzCPxxVrp
PWCRvZ9zIZKPGG3879T5qz2wPPq4qdhiFxHfKVTN4NYNyqKh67tN/ITj+T9T
pVbdcG8REY8Q5ic0Oj+3/9+dyqXelI9T4ycVHXwXePd1I8t2/W76XX5iHcsz
uLetC4NJ624U9vKTZHHmFaMDXSDNMSolRQJESvmP1PvZDlw9NGEepydIrKS9
vPI7O2BkIypMMxMkb8TYG6rLO+Am0SN11VaQcG2XcZ5/3QHn9XEt1wMEycKC
XdEJ7Q60eza6qtcKkuL8SePR0F/YN9gi7mUqREzVJj1llNtx2LH4XairMAlR
8qw/KtiORS/DUacXwuTHfjYRU9Z2aEmGWjnEChN1AelK7642dOp470gvEyZ7
1m5zNzxpw6ojj/Qlnj1kkkwk3Gv9iVCbron07D3ksfZEXb5LKzqu3i3832ZR
Uqwzbqho0QrrQZa8TCFRwmAwVpNm0Ipfufe8/xwQJe7Gvynxwq2Y/09MoM5S
lDhZDVa8oLTggbvSCRUiSqz9Osl1wRYMemkEs3mKkQ8BHRodrC0I3rL23jVc
jAwE/So0mWvGVu6MavZPYuR6ZNtX/apm3DkRfzO3R4yYJTfnKd1rhtH3+s+s
x8XJSUp1OktFEy4nrIRp7pQgz+soMj6ZTSgOOersrShBKpp+pK1GN8H3Ynnu
jKEEOdZZmTrr0ATZz/+sc3gqQdQnSxM7dzXhqA/L2jBNgshyFMZm2DfiR68O
zWJoL+E9lxZ0YXsDeJ8Yy9+eliSZYv4FxzY0wOuna44IlxQ5vXhzQO5PPeqb
Oi8JKkiR5zFCB1nL63Er5XPn8H0psjoS2l3gVA/misLVhlUpMuThJr27pQ6t
c+PJG/6RJo9Pm5oyF9dBgD1tg4u2NBHco/SI+rEOQQtP847YSBOzislmim8d
JhIi1Ns/S5MaLnMPD6U6PHeZMdQ+J0PsDIMjvu2thU2lfdDr07Ikkao3Hrau
FqNfBoeNrGRJXySjpl1bDabzRZ9pussSkwHnYYFnNfDpZ9hRnChLNB5cUfYe
qUauGLuDM6Mc4YiXbNJKoIDRnI7H5XJET2dQfJcXBXW/X7Zz9MoRn4kYt1kT
CqRNL+oO0OUI7QDXnndMFNzgeT1rLiNPeik0h41WP1DcfDC777U8yZwvZa8Q
qcL2R/ILAj4K5GVyXLH6YiXyT7m91nmvQGyveN3Pqa4E8c7/3V2mQETKDv6K
c6rE9PVPttc2K5LwsJQPHhUViDl7rGQ0UpE46vpdoEZXQE5uF+/3QkViuGK5
xdahAnQav+/uAUXCfEPA0ZSvApW8mrWXZZWIq2KwmsK/5WCW8Oy2rVUiJiO3
p5I0y5GgFOQRQ1MiCtF68YK85XikFO5lI6xMxjcwsrAVluH6E8XgDmdlcqXR
qWmEvQx3zrRwBu07QLQcL9nGZJUg6UWEVmPmQSIgpiLA61cCt4hvS67DB8lS
G2+9/6US8CiubFvPr0Kyj9QqP9hYgpVTAudLn6sQMU6t9efOf0fRjhqnHw6q
ZH2pQE6V5HcIy1s93JGmSrpdlm4eYfiOXKVwRZcxVRLRk10tnVSMz4WZX1/c
OkRY08UjWZaKsM8o/Rr17mEyZMF40ru2CBGpppvy8g+T79t7V+fji7A9h8u1
gUGNuHtFWQ6cLIL5LkkjxVdqxOXDefmiEYKINH3Fn8fUyf8BEXvnBA==
         "]], 
        LineBox[CompressedData["
1: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
         "]], 
        LineBox[{{-0.0006025254979090059, -30.27283026550012}, \
{-0.000598666429899338, 24.931855828330868`}}]}, {
        RGBColor[
        0.2823529411764706, 0.21176470588235294`, 0.27450980392156865`], 
        Dashing[{Small, Small}], 
        LineBox[CompressedData["
1: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
0gbEJ5Lahe5VJKSXHNDp22tI/A/oQyN9
         "]], 
        LineBox[CompressedData["
1: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
         "]], 
        LineBox[CompressedData["
1:eJwVlGk01A8bhskWFSUtipSlItmyS/evRSRKiEKyKyHZFZKthawR9S9rIaKS
LJEU2VPWsZeQkAyDMTPM6/30nPuc677P8+naZXPV0H4VCwvLDlYWlv/fX6q3
2nyz65F6LGRb1JQqITb9flH9Uz3WfvhaaNmuSvg3Hw2l/K3HLb91khYvVInO
F428+YINqDwU7TwSpErcs+8V23WtAS0HNnjFyKoS0z00fa6djSiuSGJhiVch
PtSopbcFNCGpMCVT0U2Z2JpRJX0/pwnZ2jGm9frKhHvQieLjHU0IkhI6XrNP
mZDQON9UKt2MZHuHoIkxJSLyle98Sm8zDCiRlz46KhFmj4t1ndVaML8cvSDm
rUi89UWHhH0LqgWfc9ifVyR4TWovDsa04K+RpxHloCJRtb7L03CsBQqs8TFU
dkVC4OiN0/+d/IZqRdtDXkkHiBslj/yCad8wp3/c4nCTAnEio7v51LlWSF34
qqVvJU9Mh+U71Li04iR7bGTuSXki6VIIUyOkFS/eunWoqMgTY/v3y0vmt2Lo
skpPF688cack6AEbexv2fsnWEf8oR9Q17zEvKWiD6x9uDWcpOUKb6jW2i6sD
SsnxM5qKMsRUj+6tJKEOtHZ3vjcTkCESK0S28Sl04PNNDrNCyn5iNLj+JMOi
A5XuCWs3vdtPhK8TLuh804FH5MLXYRr7iS+i1V4Rlp148uSMQpCBNKGlz882
V9SFcrr8jxtPpYgoa27yYn0XPtnoK4WFSxEkL5bB5f4uBFlEPHrtKkU4PZ0q
W81JwmcTcLljhf/X4C5kQkL6sY2N4UOSBCk2ZOjoPAnnvpMH8mUkCadOSlWc
cg8Ggur3ZPftIQrHJwoe6vbgLWdyqWPdHoKxPPTkP8seePa3zuHtHiJqz3e/
5+E96H0nZKkWucL7vpQv6+zBK/HhPB3NFX6bQ9pP717kHMlLScvYTURf7AqS
K+5Dm/GbrRk3JYjwyYMYbeqDSWK3Q5izBBHol770eKgPO4rWHvI/L0G4xrtc
5+LtR06GQsLzAxLEqVo2zwG7fmyS4nL5PSZO8MrKOUbyD8Axv3T/mIk4EbV8
R3/MZRAeVa64DjGi9pTwOgP+n9hMyXl/Rm0X8XfXpsDWR79wJXeuYDxnO+Hl
uc86evModv7No3NnbyK6+tYbOtSNYXVXluGTh3yEboQ9ybN1DDIb41zHXPmI
crUyy5C+MWx4MeKmd5yPSE20vZI6PQbK+c6nF+d4iUsG70J7tv5BQwNHd5Ex
L0H7bF586vIfJBQVXtHYuo4Qyn0upMIzjpYPS20ehTxE1Hl6upbAOGi8WsUb
o3gIltUGksY7xnHGq5/72yUeYthuUemawjgqXurbPd3BQ7zcoXc612wc/3HK
Fj2I4CYOxZFvieSO4+xo8MElp9WEld/B31x6E7iwi2fInOAkpOzqOqZMJnBZ
wCdseDsnMXvKuLrDegJaQhpNsQscRLi4c1qGzwRKE04nmxVwEHktj82RMYEl
zSqXrJ0cxKIEvcWbNgEuMx3tQzzsRFxraclI9iRyjI871i2yEhYVWllNhZMI
8fgcwtHDSkhkf08o/DCJ1DWnaZfKWImSgD/ut9onUZGqxJ1xg5UY2Cu4X5jl
L/5x5wkOM1kIqZu+acamf6Hyp/DpYz4W4vM+lXufOaYgeGzePf0hA5ayxhlk
vink6fkfPmLPAFXhWrnItinskQg9Kn6AAWn13KkbMlNwPOqbmN9CxwMdESNF
0ykcuduu2bOGDgd7LqFn2VPYqcy84heziNUpXS/DT/6DpG9lIH/DPNLTKV/e
nv2H9tzTbLUp8zj4fMOPoYv/cHt39sYyr3m4vTzJD89/+PIpTs1cdB7d7yu9
F/77By0FP8mwwDm8IGXh0tQ/GKmO2hoeoWA3d/lYps40ZGI3zEfPkzFTK+OU
rj+NfaLjh13byfgQnjaRYjgNZ1nH9SFvyDBhvz31yGIavhdcnU9fJSOMeYYS
4zaNet/8OJeJaQzP/Wb6J02jVpqeIN77D+lDG7ecHZtGuWnOLV65SbimhScZ
/p1Gx9efjBTqBNStFgUNZqaR5NHLH1s1gdb+AaGTjGmknJPUizGeAGt3jujh
9St/aaYlzAeOw6oFMvtVyegu99vIHB6DcPkVLY47ZOzpD/4yODMCAUEazfU+
GVU/PbQaPo1grfedV6Q4MkZe67gKxI+AIftse94TMnhYXXxrFEfQkzFANiwk
Iyg+Mv6e/zASI848TR0gY3ff7SJR4V+IGhs04hkmw+jznFD1zBDCtFy5Pf+Q
scMhXr68bgiezHue2hQyagcdpfO9hmDoUa07xT2DL0elWe+1/QSvucqChtIM
NBj+W7Oe/gBnSU3eM/UZxO+LLL3m9wNLAsY2fMQMyLZ95+8Z/8DkV7fmId0Z
yEj9vJ6x5gcajrzIuGs1g5hOK4Fm2gBuSwkbdEXMoEy3JMqnvw8stFU57kMz
0I4fX6XG0w2rX92zN3/PwNv5a9T2DhI+Nr06dH9yBiFnHqg7pZIQlGLZnjU/
s+ID2ykdVRKYx8qYfTyz2Kuh+nPeuQvL0ddMtA/Mosg5ucTtTwcs/XTSjFVn
8XZLVEl5WQc+2IhMWmvOoi7S5MDlyA4EKjXf8teehWy+wLcfch1Y6tn78rX5
LE50TJxTCWwHQ+IHm1DoLGZKruqMS7bBgq/4lOTdWYg155+YZGlDOfV+snLU
LEJ0JdYeI7XCv1FD9kzSLPZp9R+fud0KuttDs/C8WVh9CR9VmfgO2vtTr6fb
Z+H1mtO9/+M3LJypsKyRoCCFb7P2gE4zgrsL+g/to2B9qefxSvZm8FqnW5TI
UdBO536rWdWE3W63zXI1KAgw9QhZd7AJxlFnTGLPULBjMFi4XbURrxpG9C8E
UGBVfsV2QL8eBw1JTZ3BFFR/NBGk89ejtrvhpMEdCm4a1y2kkuowMFZw4mg8
BSWxdq4h9nVYy3VdSzKHAlVVh+DgsFpcPsqrOddOgXD2lSSn/hpQGljKXXso
2Cr2Zjn6RQ2CDGfVxwYp+GBqGCPtW4Mka5Jq7zgFLk+0V9UK1ODLzXTFKpY5
qG2jy9gZVUO0XFn6vvQcvAU+9luOfEKv4sXtEqFz+OUZmlx89iMcFpX4wu7O
wayT5W603EdMV6xlG4maQ/unh08r1nwEu3bZeGbyHB7uSzZVCK+EzPlNZeIF
c2B1ee187coHBAU0nhPvmcMpubjJCaNy8BxJ1wsdnIOd0Vvdgo3lSOD0I4aH
5zAp4DLA1f4eL6J37838NweR+jZdD5P3aEu7tSDGMb/iGSMTXpsy7P6ikigm
N48WuXdXVeJL8Ooe770QpXnc31x9tNC8BOqnRwJ+qc9jrWiP2CvxEpwmxdln
aK14TPOExd6SYviO/1UUM59H1QbFiJnhd2jkzWwTDZ/HrfQ2tjnjIriZrt8g
2jePJdumzZdvv4FNtuwjiZ8reyIk52KrNzi7eEpMcnQeJw9Zxp5XfwP1x/eV
5Kbn4dFMXE6ceg2OQR6zQ+wLiEjamzZg9hqPHDgyzKQX8IRR6bH+yCtEFotL
W8ovoIyf76/Ozle4ufpYkbXyAobUR3seLBXA7kVw7SViATIn9Dj1/AogO8Wc
8DZeQJaJQKKFTz6qvWiK8f4LyCXFl9Mj8/Dui+CHxFsLuCpjRWacyUPOFjXt
R+ELyPvTeDFgSx6iSn3Op8Ws7JtVRSxk5OL8EiWgIHMBqj2aAoWfXmAq9N+X
xqYFPL1zdYvl5hwIPhg+xy5MxaWgvuuv+J5DNURks6coFUTEgO7AwDOYuJu1
/dpDxZ61at4B+c8QZ/BN/7MCFXbz/s/XnH6GtevKjwTrUNH8y8lVNyETy2Hx
0iyeVIw+W/XsmlIGhLy+/rnqR8WufNc0jTUZ0LDjzhoMpGKWESXn+DMdvkdu
7qq8S4Vm6H/2g1HpIC87bQ5MoWJhu5yGxlQahn2OsDAaqKCvSmEOVqRilWNA
xZVvVPCL6GeaJadip0nJ9d4OKvQlXE9IeqXigqLMXNkPKjouHPOu3J+KzmnB
cb95Kk43aHd5aKWg/jK5bWHXIt4kBkaEKD9Bvnlq1qzvIoojv9xJDEmGYpcY
jTNwEW8fdN65ZJCM94ZZettCFsHmF6iZJZyMuhP5ZOL+Im6PH2N3LE3CL5Vy
jai0RYQ/vq3ROfcQWwVILXsbFkGM3c/JvZWIp9HmogdbFqHKFlHQZ5wIiTWD
nqfbF2FeY3vWeW8iFFaNCnoPLELJNQKZ3xKgPz1r+3lmER3m5tJWEgkIbuKj
XthOQ5zsnIL5YDxW68TrXttJQ2OSie7WknhEf978JFSChkS6QcOe2Hj8VyZ8
JFeWhlavE/Iax+JRnL0vknqUBreGbLmd+XGYDNXeGe9MQ5k7Z4FeTCxMNW/q
1FXQ8JEzS/LBxmj0zY3yffpEg2FmxC8jUhRs8k91va+lofOEDSPiSRScRXY4
FHynISV5QcdaMgrBrBUhiSM0HNH1eR96/D7ya2gf7NbRwWsb5dudEAHFQJtw
S346Dhx3uJBrHYFS5Qb9c1voOO50PmZ0fwSqs5L7Tu6i41Ssi21C7T1031Wl
KSjRsV/YqKKceRfsp7yVWC/Q0bNAMvANvoN7nAMMmvVKvyxb77rxHfBValVT
HOhIyHX0Je2+g21ym4zG3Ojgej9w9nnTbcjyv3VrCaVDu7GJ8BC6veI1cu6T
PDqUEx8OyTaF4bWli6g6gw7faO5pT8cQ2BRNC6eyMiDSVcP2iAiBwFpPQU4u
BtqLA634t4XAu/T6+tYNDLDY27PRmoOhLnBn+fKelaxvURSjFoxP9ek9yYYM
BO6kBkDkFjx27u5kmjKwlK1nfGwpCOI+Od/tLzAw1yt6NbY3COHir+rkLzFw
k1E4xpochJM3K97VBzDwQH/vDaktQWhXJMUtZjMgEPknZzcRiLAI86iL+Qxk
1W3Les4eCOWhgbs1hQw4tYZJZ9YHICl6JCj2AwPhLkJXN54NwIXxGVfJdgZ0
ZaLeZ17zx2jKupPnmSv8w8pvOR+vg8pzlK307BKWU39YehT4gH+K98EnsyVI
Km0QqAz1wb7vPeJNF5eQTz8YfsHMB5YP3Y8PXl6C4WeTxWhOH3wWS7/LEbiE
sAG97yU23og6yLre8PkSTEuF7kdKeiFbpDnVPHcJzw6PHi5m80LVqmR5+1dL
8JY6XCg14AlKnZyRb9kS/NlK/P7Ee8LsrFXi069LSL0c8uTdKk9IuFYKTcwv
weTjWq+Nf91x6EzESwp9CWwirn3hje44p2h6aJllGc+Eu46qv3DHPdrUxQ1r
liGu+W7NxUvumA7fkaEisgy+kbp7cb+voTwlQDJUexlmaxTXK5HdYPhdQ1k4
aRlj6xpdvCxcwaOxpqr8yTLK2VR3XNnliqrMnpMWGcsostQP6Rt1gZyvn/Xj
/GWwkxa3y3i4gFekOFKwZhlqgnfHXGOdUe+s8GvTzDLoe01Yg385IaiT1bVo
YRl9X4/VvStwgirxnWq8tAzr34E7Tf2d8HyjG++D1Uz85p5t6tzshNCyl2r8
Ikw88ui+XWJwGcRqyRhePSbuP/amossR1GvUbflnmHhtoZ/9KccRBb21z/RN
mSBCFunp/o7YUeDwPtKGib0vSOf8xBzBOJs5yuPHxLUbDZ0OXg4ozhDR5HrO
BJuN6MFHkvZwXfev9nnuyr6d4sNHrPbY7fPB8PhrJlqI9vuT3XZ4oHvhUlg5
E+WPD9wOjrCDO/lRPFsbc8XT3Qm2M7aQMnfakUFiYtFa/2V/ky1+VqvlHBlg
YrJelpGRZQuDJNKHW39W8umLufyWtli9KvvErn9M9O4jV5eq2aLyik/7RwoT
ieaed15ssoV3x/GLVjQmWDfKmwyTbSCDzeNMJhNZJQPRDl9t8D+HROKu
         "]], 
        LineBox[{{-0.0006021022551765806, -30.27283026550012}, \
{-0.0005990150007688474, 24.931855828330868`}}]}, {
        RGBColor[
        0.8627450980392157, 0.5215686274509804, 0.34509803921568627`], 
        LineBox[CompressedData["
1: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
         "]], 
        LineBox[CompressedData["
1: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
xx5T/A83QPU4
         "]], 
        LineBox[{{-0.0006018200933551705, -30.27283026550012}, \
{-0.000599247381348726, 24.931855828330868`}}]}, {
        RGBColor[
        0.09411764705882353, 0.08235294117647059, 0.2901960784313726], 
        Dashing[{Small, Small}], 
        LineBox[CompressedData["
1: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
         "]], 
        LineBox[CompressedData["
1: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
         "]], 
        LineBox[CompressedData["
1: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
         "]], 
        LineBox[{{-0.0006016185491970203, -30.27283026550012}, \
{-0.0005994133674772108, 24.931855828330868`}}]}, {
        RGBColor[0.9686274509803922, 0.6039215686274509, 0.], 
        LineBox[CompressedData["
1:eJwVlnc81Y8bxWUVlUSk0jcjGdmbMqNCKJuySxoqNKloFyURWaFkZCQpCTkf
KSQk2dlbMu51r3uvce/P76/n9bzO8zrP+ev9OuJeZ22OsbOxsZmtYGP7/1Q0
EP7LYrHg92d4xoNYh7MMyfuMeRbo5aG56bz8eFuosmOWykKqk9CKaA1+qMpY
eo1MsJBd6f76z0N+aK2/3VnXxsIBCxF9S6P1MBwk1cbns0B6rjHMXimAG89Z
vtHZLCjBUjiXKoAvjmtXPkpnYU9Z5cKwjCBM6mT2hCay8IBV+VHgiSDMPriX
+txjIbdkFynUdwNs7tXnqLmz4BIdQzfXEEa00R8zBRcWZBhrptr8hdG8MDa6
w54FM5efoYL5wnA4x7l9swULvHznfybv3IjDzruS2LRYyC+yrDBSEMHRna8f
1vOxoM184JNntxnpw0Vy1Tws1J/8xCv/fDNGUr7WEJwseGfuqLw2shknNvRx
vp9nYkWfyLNXwVtwZkn4WsIIE60bDDL2vxXFpZ+3/Y6XM5FGcwmyNN2GhxMX
2yjFTNSWOXkkpm3Dy5UnjG4WMvGXDWzhK8RQZ2Ap9DyLicVCpYxGLzFIvBX6
3BTFxP6020xCXhwNkRlr9I8z4fMnh0e4TwJDuXEXf3gyYVzEEZuySRKMmrA+
pyPL/2MORw7YSmL7irPvAw8xYZJ6Ki+5VhJB/lpHXu9a1sf2PNas2I4dNjU5
G/iZ8No2mL+rZQd2nykResnLRHC/id6zLdI4FJYbosTFxG5xKqXNSxpXv0Ta
ms8vwXGJX1OIIo0mVeeFkKElfFN+VNQmLotrgn/NJ4qXULvXge6btxNRSl3v
Lxcu4cQpzulUDnlkWTT8x/1mCTo6lFKKizyabr0ji6UtwfXeoAlrjQJkKEEJ
Do+WUHPtlsS6EEU0N6/+W+G5hGci1umeP5Vx4+iH8pwjS3hxTtr6B5sKFClu
0TGOS7CSqTvdoKqC+4Lvdp+wXELfd3JvVpwK9GycHvPrLEF/aFJ29JQqMn6+
UnfnX0J7rl7VUVV12Lpb8ZitXs6X+VvY44w62KZp3arcS5D0MYzYmKMOFz6L
e9yLi3g3ppf3dYcG1lmSOvJGFyEyrfbaVVoTl2v1QhbLF0FmSha2WWtDymXU
duTTIraumMz4EaeNpvFImcb3i3C0/1SRMaANeZ6hX2nZixhwMg3574oO+veF
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
xzRUmciWXrVko9WDrfZcPUFdyoS85rR8+mwXgsV5Kk+lqBA+iiEhn7q7lvlw
Ols+T4VI2bGuqb66C2nZ01FspSqEwEalS3OJXdik06s90KpC0GhnKvaZdMEq
Ny0/ap0q8eXTlP3fp39Q+rm6pv22KuGkN3VdSbMTwVSyw/NQNSJK4/qvPWKd
2Fh35ZPiEzXihwLfdqdlbr0wU2nsfKFG6P+n+D20pwOj08eMbleqEZIsP8Gm
ux24Wnvm0vZV6sQUMZl5vq0dDf1fAnpj1YlbJpONny634a3Ut6AXdRrEl/3/
rNW926D54fSxH30aBJvlRMMby2WuDisOb6JqEFftx+vSJNrAIfbHfMd/msRF
n+GaR3WtyGv2i1oVoEn43u8mPMVaEff2+TFHcS0i42GXQRdvKxgRmX4sLS1i
KPJPuQO1BUTlrMdvKy3CM76jzKK2BR42FltXXNMiXLJbijXOt6CTL+DvzT9a
xIG6+rc8Nc0wU7vVlfxCmwhrrFO6/a4ZB1TCXPaXahM1zT/eMJOawcfyFZBu
0SZMu7/nzvo3o/zKRPtdHh1Cf+pbVveWZjxPfs0cOK9DKPOXpxac/Q3jpUz/
AgddQsjuTaTzxiZwal66fuXAbuLdjvASU44mrBd4/pDn9G7iIOP4kMr0LwzZ
zG7tC99NhCWLa/NW/4Jk5NyDo3W7CebY096Si7/wsLzzw/BBPeKeiObXrX8b
EffGQr3dVJ/4HyHfe0A=
         "]], 
        LineBox[CompressedData["
1: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
         "]], 
        LineBox[{{-0.0006014673910784076, -30.27283026550012}, \
{-0.0005995378570735743, 24.931855828330868`}}]}}, AspectRatio -> 
      NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True, 
      AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, ImageSize -> Medium, 
      Method -> {}, PlotLabel -> 
      FormBox["\"Even and uneven functions bigV\"", TraditionalForm], 
      PlotRange -> {{-2, 2}, {-30.27283026550012, 24.931855828330868`}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {
        Scaled[0.02], 
        Scaled[0.02]}],
     TemplateBox[{"0", "1", "2", "3", "4", "5", "6"}, "LineLegend", 
      DisplayFunction -> (StyleBox[
        StyleBox[
         PaneBox[
          TagBox[
           GridBox[{{
              StyleBox[
               TagBox[
                FormBox["\"n=\"", TraditionalForm], TraditionalForm, Editable -> 
                True], {FontFamily -> "Times"}, Background -> Automatic, 
               StripOnInput -> False]}, {
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[
                    0.9372549019607843, 0.6470588235294118, 
                    0.6431372549019608]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[
                    0.9372549019607843, 0.6470588235294118, 
                    0.6431372549019608]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> 1, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Dashing[{Small, Small}], 
                    RGBColor[
                    0.6470588235294118, 0.5686274509803921, 
                    0.611764705882353]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Dashing[{Small, Small}], 
                    RGBColor[
                    0.6470588235294118, 0.5686274509803921, 
                    0.611764705882353]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> 1, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[
                    0.6745098039215687, 0.07450980392156863, 
                    0.043137254901960784`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[
                    0.6745098039215687, 0.07450980392156863, 
                    0.043137254901960784`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> 1, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Dashing[{Small, Small}], 
                    RGBColor[
                    0.2823529411764706, 0.21176470588235294`, 
                    0.27450980392156865`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Dashing[{Small, Small}], 
                    RGBColor[
                    0.2823529411764706, 0.21176470588235294`, 
                    0.27450980392156865`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> 1, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[
                    0.8627450980392157, 0.5215686274509804, 
                    0.34509803921568627`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[
                    0.8627450980392157, 0.5215686274509804, 
                    0.34509803921568627`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> 1, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Dashing[{Small, Small}], 
                    RGBColor[
                    0.09411764705882353, 0.08235294117647059, 
                    0.2901960784313726]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Dashing[{Small, Small}], 
                    RGBColor[
                    0.09411764705882353, 0.08235294117647059, 
                    0.2901960784313726]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> 1, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.9686274509803922, 0.6039215686274509, 0.]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[
                    0.9686274509803922, 0.6039215686274509, 0.]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> 1, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
          Alignment -> Left, AppearanceElements -> None, 
          ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"],
          LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
        Background -> Automatic, StripOnInput -> False]& ), Editable -> True, 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{"RGBColor", "[", 
                   
                   RowBox[{
                    "0.9372549019607843`", ",", "0.6470588235294118`", ",", 
                    "0.6431372549019608`"}], "]"}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.6470588235294118`", ",", "0.5686274509803921`", ",", 
                    "0.611764705882353`"}], "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{"RGBColor", "[", 
                   
                   RowBox[{
                    "0.6745098039215687`", ",", "0.07450980392156863`", ",", 
                    "0.043137254901960784`"}], "]"}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2823529411764706`", ",", "0.21176470588235294`", ",", 
                    "0.27450980392156865`"}], "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{"RGBColor", "[", 
                   
                   RowBox[{
                    "0.8627450980392157`", ",", "0.5215686274509804`", ",", 
                    "0.34509803921568627`"}], "]"}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.09411764705882353`", ",", "0.08235294117647059`", ",", 
                    "0.2901960784313726`"}], "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{"RGBColor", "[", 
                   
                   RowBox[{
                    "0.9686274509803922`", ",", "0.6039215686274509`", ",", 
                    "0.`"}], "]"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
               ",", #7}], "}"}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"n=\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{{}, {}, {
         RGBColor[0.9372549019607843, 0.6470588235294118, 0.6431372549019608], 
         LineBox[CompressedData["
1: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
          "]], 
         LineBox[CompressedData["
1:eJwV1Xs4FNgbB3CV67isRLslRCGVmn4VEb42he2XQkIXKSldVNikkkhKbDuE
JPeW7eI2ZMZEbrksRhm5plAUlSJixgwzc3b2j/O8z+e/c97zvN9X1+us89G5
UlJSFyXnv2oms/bh+yEX6ElpGgsIQddEeIYq3x0frDds4Uk8vsvwx9mAY9Ae
poa/lzg43pZ9aoMfuorc9lVKLL5yMSVjbSCczT+yYyQOO5nn277yEqxLDTtc
JJ7n+s5SziAUAZSo88oS1y6NikxTDceWnIgnpWKCiEQ9P1NaBJ4U593cK7Gt
Urn7K8VIOPQ/EnwTEciF7/n1VFQUQoJNZM9J3Dg9ZiQjdwvVv6+gjwkJok/f
VMuIoOGcjQ/3gMQPJmJDllyNhcv0eE/lLIGPz8pjJeI4dPDtwz1mCOz1gvZd
s0zAGeVQ+2QBwYq+2p2Ol+9gMJpTxOYTjDh7mI4I7kKYH/y77DQBWzlnFWvT
PbR8GmmZzyPIbeTpRAQlo+9BSrsql8DXKlZem5sKITrefflB4CDoFY6sTwel
YvHX2gmCNQyjCVZABpp4Og9vjxPwEwa+reBnQl29xUx+jKCUEtxZE5iFnCyq
gtdngkxjjXa6XjY0NvHnPB0muOFIb03lZCM0OiWBfCRwSfzQfN7oAZRvpd85
MiD5H90dNSv7HqFvG8UvtIege+tw1c/Rj5Gh6Z7p1U1Q6RNWIW2aA0OTmijT
ToI/8hlP+2NzMWmYd6+klcDATIset7UANiZOVEoDgdIBVl7oRAEWmq3PDa4j
mLzilOObTkeXdJzMu+cEhwZrnJddLsSzEsqZ4HLJ+1ZMO4g6i+Cp1vVIsYig
qdhza1EUA64nv/Nodwks6lfXGr5ngL/kxFLdBILCLsGv6SZM5LNfRP8dS5Ao
iMcfH5i4dGG31fUoAm80mh+1ZCHFWm0k8xIBYVPXLZooha3Bfe6ufQQBvSJ6
jF0ZXuq+z1FwJRgeZa+RTS/Dk71xS0qcCF6oHl09uf0ZWtzi3T7ZEyS73jN8
mV2Oy+bKunkmBBsH52hfda/CRxMf3j8/Se5f5jZBfVyF+HXblOQVJf2Iy697
L6iCvKa0hpUsgeL9vI2ZDtVYPnpbJ0oohtDRvZeMVcM6xp+kfBajr5BuVLWu
Bhra6s7llWJk+B2ss2TV4biYn6B/RIzUAwoFd97VoePKVJ+GhxhJ9oy7o3L1
qPZ9ayZ0FSN2KeVUmns9nL5JOeduFyOslTlfJKjHdIW3ZsI6MQ5TlT3LLRpA
Mc7gJYlEWDb+TGBe0wTVhj6DUpoIl1/aREyNNiG5MPn4xxsidOU0qxQsYqOx
n02TCRUh+ujbZbr+bDCY7s+Nzoow/mbGQW5pM4x0bHbN7hShst7sr/aQFxg/
8yedoyTCvhTWdl8zDlaoF+/KvirEb1k9L3e6t+H0Bo6/3e5ZbHNQm8dldmOg
/PTrsQo+Yjy7w6isXgSutGj3X81Dw04tZUe1AVgpTi7Y4D2JUV2NK23JH7Bg
vXdy28g4As+tOhyzcBhnafeyvu4fRXevqvOxxs8QFd9PfTTnCw5dtPgkt+Mr
ojS9grT8h1C7yjS6VmYMdZGt+UGLB2GgUP45234cBRayXyIH+6FVfmqbzM0J
ePOMS4rPvIHUzNzHAYM/oLOM9rV/bxemnSoO1utPoWen64U9+u0I76H3Wa2a
QqCHvfHdX9qhcvivA0+pU6A822wwqNgOA7/Ifbmbp5A0wWmK/9EGF5qT622n
KTwpVFt6tLoNhewhB4+QKVA7b7qVebThhI2KJbdjCpH6y7XnZrzC2w2emvoR
XLDoEdJ55q04Jtj40/UoLrZ+cYq1orZivEJp3hCNC+trw7TX+q2Qtisbyb7H
xd7Btha9+a1Ys1ejbDmdC55Xzw2dVg7CQprdl7/holbBrPDPNRwY/GOauIzK
A9WlEhTeS/i5qc7X6+UhNXFuuWN+MxYlfHSX1uLjVpoPQ/FbAwr2Zz6cvCDA
EdOUTQ0hdXCzDLVvrJiBMSc95ST7OYoOntYzF86Co6YVdkWtCnyKzbzSPSLU
DQsTTo+UwfnVZhOtJDEq2xSrr6exQNms+Lw8TYyaGab95xgWnme/+f+BLDEi
FRb87BLOAvXCxcMpBWLE2cUdt/NhQUWHdWtRvRgesxmLUtex0OT7vw8aP8Qw
RkL6dEMJrOWNYlV2SHJDfz3dbpYJvj9/cYFkjrXWlmbWjzFBf9vwt4MbQY2s
gtSOQSa06cee3fIiSNt9bsy/iQnhnuxhykWCM4mZr3WTmGBl6VjKPSDIMAz0
VjJlSnL+e8ODXIIWdRMrlVVMGARVOttKcoqS2qL7iw4TCds9jl+X5Jj6uPmY
jRwTARPJ8fPaCTqHpCdnuhlYuf+kdtZrAs7QkQCLFwwM1Jk93tJPUHTzWvP1
agYck15XXv1CQJd1nVz7mAH5uY9+0/1OwE22LIlNY6DqVFBH9RTBQYtdmwW3
GTjfaet5SLKHim2LLp+4wcAaLBwh/+3RN7RzA5cY+BdqCubK
          "]]}, {
         RGBColor[0.6470588235294118, 0.5686274509803921, 0.611764705882353], 
         
         Dashing[{Small, Small}], 
         LineBox[CompressedData["
1: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
          "]], 
         LineBox[CompressedData["
1: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
/8Bk+NRH/A9j9bW8
          "]]}, {
         RGBColor[
         0.6745098039215687, 0.07450980392156863, 0.043137254901960784`], 
         LineBox[CompressedData["
1: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
          "]], 
         LineBox[CompressedData["
1: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
N4PvO7yqLix0QM74n/xdqTMIe76WMRbaAU/3H0a7umZQzhC4E1HfDqkq5TcS
CgwUxB2qDtdtQ5ofv5+3EgNJOvppDofaoHJuxH1IhQH5ODV9Y9E2nOt4bR17
kgF1Z5aHE60VD6h/FSVMGfBMTqB/e9OKH/xxLeLPGGhSVNtsMfIbdy4Lrhfv
YSAsrJjGfN2Cawny4ZIDDPQG77ce8WjBpTk9CRkSA/wW/bQh+xaoRLxUUphi
wCNPWGKTVgt4+vhM1Lhnod7T/ODiYjPCbXhiTWRnce5sz1PRm82ouDevGOI2
CwmurVoRBk3IrtpS9ObJLDSp133Tjzfhy6YjWuHPZnHWadvxDoUmBOa5GH98
NYthU4keQ4EmGC8R7qlxs/CrXTi36WcjJnwmq37Uz2KDpkPKu7ON2BI6bMS9
g4mn23ZcC05owGFv0Y3O4kxIlGdf3vWiAYZOJi1Du5moHtWR7rJtwOvzjbrl
B5jgUndtT97dgLXrCk54aTMx49XZTUv4ieWnIbIczkxoWFltbEyvx7DLCY7F
OiboL7hX8fTUYYWte6FdIxMVpMG/mcV1EDPMfdTdykSNy0i6d2wdzBXlZvL7
mTjTP23kbleHtqkt1IcMJuqcrKv/LNai9gatZXbnHJjnNvkclqxFimn0Z/qD
OfD4GFv6+FdDsV1ifuXjOfjmkG48cK7Gd4PPOlu958Cru07Ux7waNadTaOov
59CmkH9gUL6a3RcFRwM/zqHSUcQtu7UKm4U7fknXzSFHxD0tUbIKXvUCTPNt
89CK8aqSbavAKu2QM45i83j5hLeJWlqBoPKNkT6S8xj+Ti0vTK7A+/wdJxLl
5yFjG8kf87QCOQl7A5ga8+x/16YJy0MVGPfREguxn8fbjvjipIhyXD7moV1T
OI87y6WOA85l6JkhCZSVzaO/PcTK4XoZrqXotX+vnkfFwEnedQZlsBcVsUlt
moczZ6+wh3wZvDgLvd+MzMPx0ImrimOlSKmcL7JatwA//T3Wv61Lwa13X4nT
fAG9AyqpTrYl8FvZuzhvuYBNWhclhY1KIFB8soKwWYDScpdspXYJtir8c4Fy
ZwFHTXTSLu0pgbxQ5p1fPgsQqr39zrynGCZttMTIpAXoeXw0tKUVIf3KLXGV
xQUkRzT2q+wvxLWsqR3RnIv4UalX2bWhEMJrnbes5F1E3p6urnBGAe7nPRJs
Xr+I4wdkVrkWFEBF+MXyjd2LOPrJ2j3ndAHKamO63hks4sCcezfnze/4rdjx
ei5hEfp839XHS/Lw1N800CJlEQY9nU16n/NwaLDXtzJjEbFDYwY/X+YhLGjE
M7hoEe5CEp92mObBnDrtIPN7ESaVTLFVs7kgRa07a8xaBL2WbDR6MBdMPg2u
vEtLqA6+Kr+mNBtCE/yhZSZLqO2XKpRLysbepq5d9RZLWLlZ28r2bTauvHU6
1XdjCSeSe+M2OWSjXCLGl+fxEt7DwNNxezYCVTkFDT4tgXKPenfWLQuSDsXb
xxhLoOXYBOXoZEJN3z+ZWFjCs1rrJxdVMmGkeFltmWMZeyUEqFzSmfCbn7BY
v2YZ38ZLGt9xZWLqmUissugyOvtbmqK+Z6Agyl3GR2sZ3ljZwSWfAYOmo4d2
hC1jzKav9Iv4N/AdXVNaELmMW1XKq4MEv6E0ruusWewyHJmqd14sp0PhwUPL
iJRlfHhScSynKx38ojkBWyqX4ZOgq74iNB219geG/pleRuk93YAjfOlQXyXz
il+HBRkZSblX3GlgOjK3puiz8BPOtuGjqUjtro7XvcxC5+hTceW6VIik2nwP
uMYC46wyd4d/KhYvxZH4HrKQkP+GK0MwFTmxosd4P7GQFnGfM1EsBQ7rJqs/
JbIQJXJc8RhXCqRcigxOpbNwc6fb+8mRZISeMf/3aQELA4n77mUmJsOJFh7C
1cLCHxEemfzDydhjelMktoOFCsdg8untyRioOPLlRC8Lw04CaUxWEs6HdRQ9
GWXhm9ST+m/VSVi1IuH0zkkWVqzIai9MTEKxncvvEoKFv04mpuSgJNxvPWVx
dZ4FmrPnQXnnJMhhI5XFYuEh5zXV/4yS8D9qgusK
          "]]}, {
         RGBColor[
         0.2823529411764706, 0.21176470588235294`, 0.27450980392156865`], 
         Dashing[{Small, Small}], 
         LineBox[CompressedData["
1:eJxlV3k4FN739qFFErImkiSVRLYkIVJKKW2SSFQUoUWUJZJkzRKKhOxkV0LM
S5Ft7GPfs88wZJmxxXd+f//+us/73OXce85533PuLjPbS3eZmZiYXv3HxPR/
o7Q6P3ltbQ1TljeMzOtiYbu422txaQ2f7hwdO/InFlm5shKz82uYtS+sFqPF
Qm6frtkIZQ2/ai02q4rEQWmrRyexbQ2pTaPVb23jcHzwb3V45hq2CYmc+skf
j0tvar/Im6wh7OMdfp1nCXin0XXmoOEaXO8OhWsFJIC0PDYqcXUN2VGsHoaJ
CdB/uE58+9k1cHzYub2DlIAb11UimZTWYCV8SnmPfCLuHEjxq+VYg8+DSU3B
+UQ41HtYWxBWcfZDAtUxIBl+FPu2ufxVfHZUb7BMS0bsxvsa7rmr4Oc/HuxW
lQyiui7fp+RVTJyr8BdZlwKxLL7ipuBV3BF+qSfplIK6wER2NYtVxF7jd8x+
mAqJS5VfeLlWMUibk+ZxSsMxm0K+WLZVvPaOXZX6lIaLPmmuMutXEZ/gwWSH
NDj/DLyss/QPMvLXIn3WpaNJ7vqy69A/mJhvujwQmA4XHrIOJf8fvngsT9nk
ZIBE2kwuNf0H3hMurs/8s/DyzjfCF6N/WE7LENOKyYL03M13odf+QfrgvnN7
c7PgxZNz7L7uP8Q/ichU6MiC6iWDAC7lf0hosJK1lchGYn28ggnXP/yoYXNw
Lc/Gs2pV1xXCCg6RVKYX+HOxx3D08kjBCswWO5znpXLRNB64r+HrCqY1bZq2
nMiF1KahxrjUFZx5JWkdbJuLAW0f8bNhKxheKnSeqsqFTnlrVbj1CqIfC3pv
9/iKHSW2vErCK3APZ1E8y5kHIrei3VGBFahK/GL33ZcHx7tLzarcK6hed8GW
rJGHVrbX77RYV6AjIOLI+jQPgVcjuC/NLeN0u5fS7+48sFDKuKyJyyglp/lY
53zHON/2LXHOy3izSEeMQwE+3Ot7kOiwjMzDf7ZKhBbg1I94YsrjZfzlX3Fv
yClA7C0Zv6x7y7ip6eARSi2A0RetzYQry2ip/GM8bFGI+uO2mzqkljFQtX+t
wvQHvlmVrefsWUI9K9GL2a4YR0RtZBPbliDlGw2X8GIUkgSMVZuW8LxA6JoU
ilGiavXVqmIJ/AX2leKbCajm5L5dmb2EqUvSaT4JBPTnmpS89FwCp8xPK6sh
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

          "]], 
         LineBox[CompressedData["
1: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
          "]]}, {
         RGBColor[
         0.8627450980392157, 0.5215686274509804, 0.34509803921568627`], 
         LineBox[CompressedData["
1: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
PhUD3jbcO0Sn4cI/wBpSQutV0pWSZf5pDCkOseyroOKeGq/pGOc0mM35rQ2q
qeCPo9L/ZpuGzNprJstaKsYYWiIrGKfxpl8+TbWeigSTRMXM9SlwmfBdIDdS
8YjwZiSCPIUIETPPhy1UCB667e49MQWX88V2CW1UkBzOHHftn8Inm/tN2TSu
SG1lrrZqn8KuhyxvPndQYSM6Yn6HOIXbG4tmol20nv9cxHS1lDa/ZcA4rJsK
8oRvwrncKQSmHLz2h8Yp2SpWaieTpzDd8fxAdy8Vz6OUpziiprCsbhKR0EfF
uU1HPm0NmkJLT3XTpX4qVu4sCS18mcJWGUmvWJouzG+oH3o3hT1/y6raaPoV
R9yTZscpyO7gvVdP0/L2rqwlNlNQlwrQ8qZp+ibdtBSzKWht2+bGRdPlQqJa
oXemMJYyPviU9rx3H5jmPW9MYbONjpk/LY/y34GvjlemwDnDsPkNLS+jYv4Z
iwtTuGqrlHiW9j414T5tuhJT+LKDWSe3k8ZBaxbPVE5NIS9san0TbT009C9x
SPJM4dgfzpC9tPXalXMol49jCluW7YXmW6loZCfrsu+cAn2I9c8gGpf5WBOX
N22m5dU+zclM2499As4yfaRJhIgl1lytoeKP+63uuuFJfHbrY+WkcVvgkJBz
YeckZqoqtLLKqOAM6SUEVk6Cxy59TKmQit7lbCOPwkn8yja4JptLRbj2FzqH
9En06K12rmdQcZRV/uLN0EmQNF779CdQ8Vlk4KXF10nEmOgm+UZTQbnmluHq
MYnDn01rd4RTQfQu5/tpS8sTU/BW5hsVkun375SZTSJij6v+wifa/Zu3+nXc
noTyJ6Mk6/dU2LNf2bZVZRLd/os3kl7Q8ohPXOA8PwnJrI3Fx7ZUXL758bmY
6CRW/ytNnbGg4rBv3bjhoUk4UnQOnTegonKfFjFnZgJxFr0Ci2dpXCs1z1A/
PIGVnbeaiTQODdL5JjvcMQEhTw9hM34qngS0J7OWT+B6a8DqXzYq9h808H4Y
MAFOy2vHecZpHHn4nvYhhQlsb3i0O/3DMlplt3wRlZwASj5LjNA4U84wpkrl
1ATWG4+29lsvgz1s7Kz93gl0HblNFtNeRiG35aG68XHsu5N0VZ1rGSx8z/pf
+YyjxWT76cwoCp4rchzwfT+Oc6RzW0K/UTB4L/d6otM4sgxCh7TfUpATTS39
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
66EydWiTtrEbLHj/P/0/+hjOJQ==
          "]], 
         LineBox[CompressedData["
1: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
QQwHiJubm2A/pjpvetEP/wNZdACv
          "]]}, {
         RGBColor[
         0.09411764705882353, 0.08235294117647059, 0.2901960784313726], 
         Dashing[{Small, Small}], 
         LineBox[CompressedData["
1:eJxdV3c4Ft77liQiZIskSZKyIpKSSJEdkVBGy4eiIRFSSVFGlL1XlL3He9sk
e2Zv2Xu+eP18//39da77Os+5r+dcz7mf5z5HTB5rmZOTkZGN7yIj+996+iLr
xPb2NvYovBdR9XbH4/WjbuvEbYjZn3gylu2OlHRR/sXlbYTMGuij1x1iAqom
o5PbQJh33pFTHjh74F1nTfs2rjbK9pXWeEBuaL46IHkb53mvqXewfYHWh9pE
ceNtnNCVXeJ/4oWvl7qunbq1DfWUyJjvH7zQsjH2j19nG0dF6IRPhXlB9wkF
30GVbSh08VRU1nnBQF8mmOzsNvQK0neXCHvD7OQPj1q6bQR06UhSrHvDtv6d
5X0CCSFq1Q3RCV/hMfmifSmHhLmxoITg318RuffhJZd0EjxvWYhXj31FzUVV
lpB4El7FvhqtPO4L3hSWwiYfEkaLFen0431R5xVLe+E+CYdESxZPZ/iBX6sq
kZmBhPZWYkPe+nect8pjidxHwvWnE7fO8/hD89NPJ+E9JLyMGunapeQPhxIv
bWXiFvY93q6+5eePJjH9DafhLWSStddrSQTgNdOE8mTOFhRvcr1tcglESwvN
RPHdLTBMNPXv1gvBG7NMQuLtLfDu+1I8+C4Ep5eMvvrd3MKMo/cAbVoI3JjS
zj9U3YLgGV8yxf2hkNXS82SQ3sIf/9ou7cpQxNZHnzFm2MIahcSlM8fC8bJa
1mmTsAmdcK0AxaoIHLv1T3s0dxOLsYrCq0MRaBr3EmjI2MTe/rzl9u0ICFEP
N0YlbEL6uryVgFQkBpQ+8al828Sw3lY8XWIklMvbfgdYbiIxOFLzYmAUDhU9
Zj7LtYnxqv+y6sJjUMMo8ewc2yaun9E6ZVUSg1fmxGZZxk38vF+VeGU4Bm37
3n9VoNpEUVaLYbRALLx0Ahm1ljYwzfeWlTsjFrsnyxgsazbg+rbyycO2OIyz
HNwf5bCBffr0dU4qCfB/0PdfrO0Gupv9JNifJ+BKfnTND5sN7C0yFlwLTUDk
HWGPlAcb4Kc9XeW1mIDbiQo0hBsbOGh1zkQ8PBH1co+pO4Q2wJ19rShz7y9k
WpTtoe8hIuDh69hG6hRI8ViJxrYTMRnQd7nxWAryWtgMZZuI2DKwa9wjn4Ii
WYsMi0oieHjXzejtU1BNz2halUqE9nNusZTZFPSnGxe9cSWiStjT/ONQKkwe
UE+xvyHi339cz2l2p2GEK50txZ4INfqwl7950zDxnvJx7xMiVFmkz2+YpGH5
5q9DMgZEnKE7xnB5NA37NomvloSJGIjetdi4lo7PKdGx7oJEuEqKBapyZYDB
XK2J9xgRRgXMgvvlMsBSF3FC8yARHvOdfLfcMsATfvXvLwoiNk2H4s9xZUJC
4ZvE/Y51BGU0f/fRzMIdD9G5Dpd1WGQzhWAlB68yfFxrX6/DI73BvYEnF37d
i1zFL9dxXOud5imVXFQLZV2Lt1pH/u3d/jXhuRCvPRf14tY6fGI1y1PV80BJ
p6DLJLaOPMau8O8F+fjpqVtwfWANB1Je6h1oJ6AiO1tLrnsNZ512SZbSAAN9
7OPi7WvYfYQY1SIHsIp0sXDWruEHvdAS+0/AqcH48XjOGpL4WhxDLhdB68BD
XlevNfCFcxbKCxRjzcfeDRfXkG8/L3PhYCn+cRVPXDm3Bl55qdH9F0rRFkup
WndmDRx/FTn5TEqRnud9oOfEGoQOXdbkTyyF1WBcIJFpDU9v82t7y5VhSLTl
p8TYKoRFXu53titHUz4HfeHgKp5c+fZ6I6IcRYrG1go9q3jdufd7RXU5QvUn
JLSbVrHcu0dE7VAF9N6Q4UnBKuQUvnKcqahAXYNQY6LXKiY8uVj/Ha9CwS0b
cXH3VXSFf4mM06lC4nC2X977Vbxb0FgpflsFtzX5W79frUKHlTaMcqAKl3n0
h0bNVnHl9GrPYNhv5Dx+v3xEehUeFwty3gj/QRRdL4f/wAocV8LozYLq4GNw
ca909wr2U9m6JLTUwSU+fKmjbQV7T+ydN6Srh4m8aT1nzQr0Vz+X0L2tB++L
sXdhWSvIr/6T0ybVgMiehdlY9xX0Khu2KYo1Ivzn3opMiRV8rPRkOq3dDK/1
B+m6IiuIDCdTNrVthvOV6vBVwRVIXpio7gpqxp1+D3tpnhXManoZ+o804zAz
o2jhvhX40lklqzi0INSeK7isb/l/7/XwRlYrgpVFbZo/LqPykVDkB7O/4KNR
rm54t4zuUHOHyS9/kfjHhLfOaRmfi1oX/HL/Iu+6b1PV82Usmi8dLqLvQIfa
qhjh7jJezNLef4oOsGoXLsZLL+MXh5xftFAXPA2uPXccXwJZ3XHaELlesHKZ
1NoPL2GPy5MDb571IrT71TG7viWMlYdGZMX3IsnwZ+vT1iVo2dfHsDH2ocaY
XvJh8RKeHXw6lzvWByqz1hXtgCUUFtA+Hmjqh8t/d1+euLaEu5J5oo9SBtH7
xSg47/ISImU+ypk0DeJcqkGRyoUlZH5pkfNcGsTCsg6VlfgSplIqfNykh3DX
Sdk/7dASTNjZfm2UD0HORzxHZmERbUVBMetjwyBl71lTDVrEL33LqOKb/2C/
O8HWZnoBSkf1Hge2TcEqwIjyztgCnnofe5dPPg0TYSY/1aEFNLebtVIKT0PZ
wCFNoGMBRo+T93C6TYM9XW26t2wBj7j094men0GGyaKJSvDCjtBE71cmzmKm
+Lwan8oCxJI8jvRozeOucz1fW/w8iIQAM3ObJeh2hF3oiZrHPbJGVjX3JSiL
PdEbDp3H1ZYkfanoJZwZZvBY8J1HnnpMLn3bEqiuai3SvZnH6ZjRlIKduiTR
txYr6c8jOeCAbwTZCjZCO41yqecR5P6PbsRtFXOrCS+LKObBRc3RRR6ximEN
e5/K7TmkfpumP5C7ijpyrorW5TnsqoyW39zRaeQ9w1MLA3N4zf7DZVNpDVdP
928I5s1B/IfhTTbydfgVjvgHP5qDvNYTnxMmO33yZaDjWfM52PXfF+15SYSA
uLpZk/EcTlTd6DX3JCIvPkeYSmcOgkzSswv5RPR+da94enEObbNFtUOMGzj+
SHRJmXkOdW12d+9kb2COb7RjhG4OenbH+7eqN5DbFwhn6jnwU9eWmfRu4HsC
Favl1iy+/iX7z4liE/3OSZcVmmbxRUryyLTqJmxOEUMX7GchyldYNtKyCYoo
00cC1rNgoD2g5j+8iW/stRJG92Yh1fb93Z6lTeTvDq/5rTGLKPI6iv2MW6Do
VCSGH5sF4/cptgLlLXxTTy5vOziLk+EBpcJ6WxAoZ/emZZiFsfeghZ75FlRT
Jo+/JM7gULYuZYXjTryrt456/QyGVlTlyJJ24jeJPO/LZnDuolMIde4W8qzN
pvJyZ5B1/9twSekW+m6ffcsfPYOqjsRu+b9bsGkKV7sdMAOzUW0LqsGdfK7u
O+jzZQangzTD7Cd3+MR7UrZezsBTk7H1wdYOX/wVB3GrHb6MhtqBHd90nTtF
6aHpzvnFZX1KOhKsqd/2tqjOgDJB4KLGIRIonKZ+7Ls8g8bGEwnP+Ej4tqTz
XE5qBhJe3jXyJ0nI6xOg/ck7A/qrei6dZ0lwOL/rVyD7DH5eHJ+UlyVBNqBD
9SPdDMJNp+qM5EkgLafO2FLM4HnQy55TSiQUaX3yvEechpGYc02yCgkuySYi
OnPTkBps1x5WJ0GBVqbx8ug0XsfKnv6jTQLlQyYbse5pyOgac5jdJKGyfJLx
SNM0dlMMtCbdIsGNtyydvmoav3lNjycakqDsFHyDVDiNaSu3Fr07JNB2P1ue
Sp/Gx8CN2GwTEuqkVL91/ZgGWcEzi0ozErz8jp2tDpvGHkfC/Id7JGgubLXn
+E0jnCGfdn3HlzKqt72Mc59GYccDn4MPSWhJTOL49mYaNiOjBlM7+BvVh7x3
ttP4j9lO0eoRCTfNjQ2eWk7DnsrjdPgOZi85u3nXdBoKdTnrb3ZwJzdDiIb+
NJIvV3kw7eBg+zHZi+rTeHYuq+HGDp/R36LeU4rTUNPNSFV8QAKPRIATl8w0
LsYKHR7dyW/A25qHRnQasWulNJLmJETOXCte559G6LiBpYQpCWYqvCZjXNMw
TGSWHd65P388kbydcRr73dRs5Y1IGKNojiqnmob2oURODQMSEu4mKmSQplCq
QXdqvx4JFoS3I5FLU5DdCk21u0HCjO2Z4879U+BilZC9e52ElBbaKqudPpgp
2XGne6ee1qIjDwxrpmAe/k9k72USlib8Es7lTCE7/7b4f1IkZClZqZxImsLa
H+vgWLEd3x59ZYotegrv6FUOewuRsGG4emrZcwqkoOu7bQ+TUJBXXzf0fgr2
JXsybdhJcGSLf9xkPwXLurAjhw+QQN6ol5p8fwqdK22zn3aRQKWQd+bRxSnc
8HR+ktG7hepwn1Y9iSkYckwvyLRuwWPr0Qulk1NonFnY9+LPFuizOXP42KaQ
VyXMtzt7C6yCr2X6ZibxNTkIHz9t4a+rTnft8CSORuuGJO3oNWDo1OuCzkmU
yzxIdrPZAldILyGgYhIReuGrhvpbOMogJ38jdBJ61+Pu+x/dwheRgVePvk7i
U2BFwQXmnX+Bhku6s9skAsaeH/em2EKNdxnfL5tJEO90h5/f6TfPmK7tpVSa
hJMFbTjCNlHBqlWTPTuBjGDXKNod3y5ydpGibngCiZNZiyWLGwi86Ss73DGB
euPd5iJ9G3js35bEUDaBm/YlreKZG2A/aOD90H8CvAFMPxYNN/DokJku56UJ
FJHOWjNHEdEiu8dTVHICtWe1c8M/EXHBKLZS6eQEhg4tNs9bE8EUNib1jGUC
hrvmTo9eJKKAx5KzdnwcPrpLHqI7PpaO70W/o884nm15Xzi+0+/TBN0eDQ6N
Ye1hSb3umVUcbryTe7JjDHX1v6iGWXd8k6001fO6MTTTOM3rrK/AvGwiZm/u
GITMrryaLFwBu5HqgNCXMXSwCLWtKK7gtTejnq3UGFZOVd+5qbWMq2vBirSf
/6Hatfuksski+spTeSQlR+ElNxGjxzwLB+11BSmhUayZq7AGd8+AfUDu4Tne
URh9NZAhj5mBxmZ96gW6UVz1IG+VlpxBkdiMvNLoCCRUqsctbu3oPEzQXO/b
COQnyPY5JkzCxC7qx6uVYSysRSyXW46BRDlZ6zA1jEPBQsLJMmMI9BVbcBwc
BoPgh2911GNoSi4+97ZuGGJvhrxTY//h8mjfH/fYYeSmvGBiGhoFnzbXTLDu
MJxmr6x73xvBiJCfGLKGoHJUeLdZ4CAEHWNmxhKHYKItRXbgv0FY1WcmMEYM
obbY89reC4NYs27jvec+hESJe/INgwPYl83GtP/Ozj4DS06b8ABELgUu3qIe
An+d5hu35D4890lIfkcaxPk6babDt/uQN5RnkbQ4CELLYu816j5cdu0a2tU7
iOWHP/sMzHuh+4erJT5tEFHiU7lWfD2w1wnLWDEYRHPqofqThE4UxSY/4dEc
BPvKZZPlp52g2LHyylcG4U7ToKgh2Ikvgf3RISKDUFQtLM7x70B43xE/hT2D
aCyZF1Fx+IuKh9HPfZIGQPnoM9cRozYccPwheXrXAGQ/OtPd+dgE1yyBKobV
fhz044tRvtEE4kyc/uJUP6bfXmiOPdyEQeNYh5y//aDffLcrLbsRaZeiSuRT
+qF5fG/BnukGaO0JUbtp3A+p0kzVO3/rUCHL1S+t04/ZDNO9s/Z1OPciyJpL
pR8l9Z5PNHjqwPsvwHdAsh/9fVeIrha1WKz61mlB1w/KB31XomlqcJzjSC2Z
fR/I/DeuxFn/BsOnw3Pl9/pAoxPr2X3kN9aIh5jctfownEqb09RUharug/os
gn144Hbz4JZkFR6EM4+c6OgF20SbkCBVJRKOU21pne3FpUO91cM1ZRCSnBWK
WexGeZX+UmN7Ee6ddnLK7emG/v6Wa5wBRQjjp2+qrexGyiHJTU6DIjCyCduu
BHXDofjSc/sSYHXVqlhJoRsjzwYuZE4WoiR3RmfCtwuvjL8wvXLMw2aqYzzJ
sQv31ph+RbHmQSKBboPxYRc6Gxen6FJyER94OlxGtgu2GnXmYaM5+GxvNeEx
0omTPdrzBibZ0JOdcRSW7AT3d7rUce8M+Eg4Nl7m6YTO0ihh/HwG/pyi49Pb
1wnyqzKFZOPpuMB9+rdzbwcWefZeeqiQjqPblkxNrh2wLIzb27M3DTNF03HP
2v8iNkCkUdYxGcdzXxPdiv+i51nrYywl4U7qftWQxL9gDLz+/LBlEpojTi2U
O/2FdlFz7n3TX8hxsTzPJvAXxPrsCj/zRLxVmG7IfdmO12PmsqYFcSi5OqV+
xrQdOut9c0EacSBTnaxLUm1H5gb7D4PRWDjojNdE8baDgvJPozFrLF7cG6n6
XNMGuY+DbPvcopHxaFiJKrsNeXGv2qkForFgNVThEtEGpe81AU9+R+Gx7UCZ
7Ys26OSyR5oyRO3UuafoLk8baujNvJ8lRSDWo/ti9742fM8ap7qkH4Fhry6C
7nIrrAW7+HT3ROBuQEeBSnXrztz6/l3lbjhuJbTmSDxrhdeM6vSGeiiu19Sm
UFe1YJOqZ7ulMwCfGmqE36W1oNyqq+ikbgCqWv4kkYJbAGY/3uhmfyj2/P65
aN0CNQn96L6W77gwUx7fw9kC7fwvz2pn/eCwUHZcj7IFR39ZZzjY+yFvpTS2
aa4ZmWuHAw9S++HsdnF0ZXkzZuvE/lAL+kKEgRCe+rgZEkHCGbQuPrBiLjws
dKsZERauuR+4fPCTvSA0VqEZGhfWvxbneOPEkbzgII5myPP8rbm14gVesSz/
96VNKKuwkN9H4wmWG0le+mxN0FigGe/r+Yg0fvc8xd1NSAsjn4xU/wiN9fvD
orONcNeK7e0odcOn0CNS+yobYSvufOxt+geQxnz78l404qF3XsdQ0nsE5VtT
x5k0gldczPee+HtIfVET/6rWiH/ytw5z572DjTjVBwv+RqQs+Jrsr3uL0df2
p7naGrBuOWnHRe+Ctxp6elQlDbA+7H7oefQb8ByVcFn61YDPhm2llTJvcKtq
prXmfQOaZcIXLjxxRh2jyevXEg3AvdWRe32vYaXu7V94oh5dSdWieP8S8UvK
U3676qGd4EBze9wWgwEUclYddejO+eFxUMMWusO2/7g/1uHMETuVGv4XuGhn
JOk8Vgu+ELHx7NWneMXN/kmvqBY0ecaarE+fIqO0sUfEvxaZGU200vM2EKBT
fD+gVAsC92XmsGVrMESdbJGPq8HrF257Cg89gfLVkeOcTjWQORXwg+P2Y7yb
DrVf1K2BREC28rc3Vlg7y3g0mrIG1tYfWVs7/8NAzZr1nnt/kJd1o+tc2UNw
2aSV98j+QRBb0rYP9UPosv3HkcXyB77t5FOC2g9Qfbev6F55NQT1v0bXL9xD
2ko5fRVfNc4/opSdvWuGLwmRJRfWf+OQZif3f3mmsDByep5Z+xvuUv/dl2Uz
BV+FVFfki9/4zT+/7tpzF9/8EmNfV1UhVENnvuWMMWyuuekvBVfB08Wx0o7f
COpbZrQW1lW4dOca1+vDhqAy57bRO1gFd+dXzhTHDfDqjLes+H+VCFd8n7n2
4SZ0xyznfshVIlerSOJJii7Eg5WjeFgqkWW39Ii7TwdTuymo6QgVIPXcGvVV
u4Gq7P78dz4VGCgMfsDhqY0Yi0KrjXsVWDjEyKraqgWj5hctY/QVELPwHLpo
o4lzH7Q/GA+XQzYpTAJVGmCTETnXllOOIWM6Fis+DTREjoeV3i3Hmt0jo6JW
Vcjb3LYITS9DA1uqacrda+Dml+ZmcStDfoV1xzGDq9joYGl0v72DQ3V9Txgq
IeNSvaTdnjKEJU10UbxShNdy4vhsRynozncefeqrAMsfbsH3kkrh6hJ2NCTr
MvgPyJPfuFkKS7obZgYH5EFezp1ZfbIUvEe49D9fu4S+lxv3L5GV4kFo0MMs
Nzn492fUnv5Rgh9pjifMJS9gX8rxAOqNYkh43ikqY5PGqCnFdef6Yoxqfeb8
NX0WpWwDpJWoYtwjFDMX10nCwSnQbPh6MYZ0To4JpJ6Bnrgtm8GRYrBnPDjS
lyoOiX/a1Y3LRdA7yJn8vkAMM2r7RRBaBFe+30J2MyKoJp8YlHhahL7O4Hdn
WEQQl1Xh91OpCGaHh+ftPp5G0XmyVfEBQEZFikbh1UnEdI18Hn9HgDphg4uG
nR+dDqxhIeIEKGT+lGxb5QMdt1KK5mAhlK6aMToPHcWLO/FNuRcLIaXQmLDS
fQQJuzqGLGcKsCuKmEgzwYPeSOrlIyEFsEmWnvbcxYMrI4/YPhHz0cwtJcUe
woVXrkECF37kY0ua/002JSeSjtdIL9zMR6VcN72vCwfYHp26fSszD6IXmUs9
klhxncbIks4sD5bD7b3PDVng/POLYwljHuw3xDkkuZgxNjMbLvgkF42vdw1v
VhwAlxdPWi93LlZijwROpTJAQ1Sz1Kc2B9+Yqa/R6NAj52naCFEwB12zsca6
72kwxTy0ktSRDZKNhrZtCTV4spioTN2ykXwjP47ISoWPa88E/4xkQZTywZoj
+R4QAmJknHyzwCDp3Jb3fTcWzrVdF7+chVTBsF91cuS49frs46DwTHyzNRiy
/LZN+ML9wFldPRPvjCiXpnS2CCXw995NykD9oOv+KskNgiA5Md3CIANTbPM8
hbqrBKMowfLD+zJgzdF4k+rrMsFHwaCtOScdw/FReQcmFwkVI+7/PtxPB1em
D8nDcIFAdC1Yk2FNh+U51ztS43OE0wLT1HNlabj+9eViDscsweT3Ic7op2lQ
oC8R8P8yRfhD4yRL25gK0595tSxr/whkv5LVipxSwf4fq7zJ2AjhjFq/8bPT
qTCxpmKJ2BoiPJhlsBboSYEgM0XSX4lBQrDXJZdu9xTE99jWHvHsJzSI2nz1
OpeCrDdECzX6XgJVrOK1j03JOBHAkKgs00X4K0j1Rf9zEtw0y13iJNsIcpYP
U4onfqFQmP1R9HYzIT65uunE1V8wuh2yq3qlkcCwcHLZO+YntN7cTjjL0UCw
O/OZjUj+E948wcx6VTWEwRcz0iZ3EvGu81khVcJvgnKu+u3qwgS8FRALsW2q
IKRtpDiKcSag4HmfXev5MsLBC4wRgS9/gLLbRNJjuJjg4vy0lLwtHnZpL2Ze
fQJhsqRl5JF4PFhIr7+4ZOYTbuyRpGr2ioOvTNrLa/I5hAKl74IyM7Egb/eS
0jyRSeD7tHY9SiUWdmp55M6maQSPGv3HND9i0DDSvSnTkkxYosv3fkoZA2ul
A9wxlokEQ02ujC7TaPjSrp27/CGOMLW4LP28LAo34hquMfJHExy+1YPuWBSY
pKqir52MINBK/1CMfx8JwdtOrUycIYTgLpc/l0YjwGs0H8Li5k8Qcryt2XUl
AsKzxkZCn30J+TyS7c/iwsFm81ibktOboFxKb0hHFQ6yNqW6sisehIw/TeXq
jaEg3j+ZRyv2gdDC4Nro4hOCj4bXtx72uRAWdaR7MrWD0dTYyOX9xJHAGDQ1
NsYcBG26q5fq1F8SxPrDljjbAqCR3rPqKvmUoHlMm0z9uz8slyt1OCmsCE8e
UdK66H2H1tuusKpj9wleyblsmRzf8MRUQVQw4C4heem/o2OdvrgSKftFSPcW
oU6aR5gz+Csa7ZbSfxpoE2Ycm8+pGfqg7DZx6+6QCmF/meuVN9zeIN2/IvI2
4jJBj/FZ9AN4Iu5zf1Tr+DnC9+DO/LpLnzEhYOegPSRKaOO/1Hym7BN8mgIc
Rqb5CcypcROBV9ww7R4TRs3HRdCWoSPf9fs9BMtfEAbvMBB8yp9x3Fd5i2PO
x97PdewiNKh3idTWOmNRefHd+6H5Qu6Mt173wh2QOlVlnrWvvzBoZwaJxdiC
qvEXd09iVSF7z6EZ0g8bpCwf4CCTTSo8OdQq/c3QAhxF3LqzwR8L+WmffD99
/y6COT7tUdDQKXRuEWjhLFXFxh/DN68dFgv+P/4/m9E6/w==
          "]], 
         LineBox[CompressedData["
1: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
ha8hAvaJzc1N0F71FFV6+xr/Ay/qea0=
          "]]}, {
         RGBColor[0.9686274509803922, 0.6039215686274509, 0.], 
         LineBox[CompressedData["
1:eJxlV3c8lf/7PiQZJR+UioQGqQghmioNs4SQtBWVJEX2SCkjIzOhjKzsPZ7r
yAjZMyF7ZBx7HRzf8/v798/zfl2v9/26rvt+3vf1fu5H6M5TzfuMJBJJiP74
v1X81NaRtbU1/PBK071FdsDTpd1uS9Q1nDRIPsM77YCUdMl9M3NrGKv1JP/H
5QgpUbU7g6NraKMxHw8/5wi5/17/qWpdw6Y3pLWfCY443TdVGZy8hpzo1x+C
nZ2g+bY6QfrmGkJ3fTr6TcsFfortlw7pr4G7ry/O/rkLmpaHh/Zpr2H1cyqj
h68LdMyY9uxQWYN032Ym5XoXXNc7FkqSW8NcNinK8Mpr3DsQ51HNsQa5nb/Z
Lhq4wrL29ZMHBA3tj95YyEW8hcfoy9bZHBpGLexyuive4usGY0XndBoY3F2M
/sy8RdUptS2fY2nImhP/WnTRDcIpWwobfGng2rVR23zeDTXeMRtPPqDh8YCi
78Lt9+hPDHr56zYNrYbKrkve77FU/r5b14CGn81iO66R32MPw9OM51dokFNt
kBAVdIf1MzmDuGM0OEw8CJTrd8c+zfIEHk4aZGtG3hXae+K4ad6Wr2w0NPwc
X25N98SV94kOEutp0Jj8uKD/zxO2P7yvKlNXIffp0IYwbS80SOktO/SvwmXx
nY6k9AfYcY8oj+as4pPIgdlEJ280NbGPFN1eBdex+HMXHHzhdC+TSDBYBQPz
78n14b4QnzX087+2ioBE7e0k+MKNO+24sdoqTh2aJ8eu+eKEpu4HTvlVSJUQ
tb9d/BBTG3XkJucqEkyFnYWDPuLqTXXWS+yr4OSJ8mzM/wjSxEKnFPMq3l54
uLW86yP0OVTeMq+s4EuKT5mdqD82q021fR9agafS0LRYoT+sKk84rBArCPyy
QmWbDcBe/aGrg7kraG3c2ivLH4iGf96idRkrIP/RNk0+F4iDrP31kfErUPKP
HXMLCETPhfd7VAJWoOrXzjJxIgjKpS0VwU9WsLNIyXNbaDB2kp/yyPGvYI+Q
M1dGSCiquGQsFHhX4Bh6NBxVobC+T208wbUCD3NHM7G1ULSwufqdY1lB1JTQ
mOD9z/DWDuHSnF0G85LLTIxMGNaNlnA+qVrGQJDf4cp/4Ug78d7M7OcyAjrz
HvH8F4Fb3hp1z38sozGGsf3VoQgUyPz5YJ2zjNiL6ZXDRhF46TjB4Ra1DM4X
rZp3OyLwb8uOTZG2yxAczNKVbPiCoIddj2MslxEW3vVlceoLzudHVcWZL8Pm
d77p6n9f8fWWhEfKw2V46en7FGl+hUHCOXZCaxnqlU4iZ1q/ovb0U9a2g8vw
fdwQHzwWicxHJes3d1LRy+P8xE01BkcFTSVjWqno1Hz20cEqBnlNvDdONFCx
oUfPuykqBuQTjzIe/aTiWZWXwSdaDCo3c90tT6XCeNqdPSPrG7rTb5Kd3lBx
zC87pEU+Dnceso5tc6IiOlxZiftxHAb403lTbKh4IGLEUhAWhxFX5qd/zajY
v94kQ3t9POaufd957DoVbVul9pe2xoNthWo9K0HFWvL+J1a+ifBMiYpxF6Mi
+bfV+YlfieC8r94gvJeKh3fYC3rXf8eWmi/7r+yg4jLrwsxZm+8QjLj4+zsT
FYGfasw3P06CzLkAmQdtS5j4zH7cWDoFtzwkJ9ucl1Abtn6Gci8N1hm+b6rt
lvB41PEfv1sa/Dtm+IusltBwaNsmv4Q0VB7MuhRruoR5q5mL+jNpkK5WiHyp
v4SUkN4/99+kg5njnA631BJO/svmJeVnQFA2eoz50BKeVGjarPRm4JghswtV
ZAlh1JibKuyZMEsqT+7ZuYR1r8Se9Rlkok1djTWFdQlnnHWsOZmykPhBp0C1
ZxFU6kElhrvZKMvO1jzdsYh5oxP7bL2z0dO17Z906yLWcddoaxPZ2Hq4fQtf
9SIcOgWq9vLlwKHu5tN/OYv4LN4brd2WA83/jIXfeC8ifzL/RMLDPCz62rjh
1CLCtbsfGrYVYoi/aOS8wiI0/pt+dGY7gZYYZrWaI4uo+HJAMFuPQHqez3+d
+xfBwpb8+1oHAdPebyFUbjr/2eGmT8NAn2RToszwAnY4nGeR3FyEhvztmwt7
F3DIk02CKl0EstLNZ+c6F6CW+6Fpq14RwvRGZK42LEBe/fkntagi6DqRYFaw
gKHq8adlJ3+gpu5gfYL3AowNJy77vy5Ggb65tLT7AqTe3MqdSSpGQn+2f57r
Au7wrdxIayuG2+IZ/QrrBcTOPS27ergEZwX1+gbvLUDv5PDtU70lyHnqOick
v4Ar/VNsznpliOT4uz2oZx5MTWc8roVWwPf6qQ3yHfP4KEfpdmisgHNsxGxb
yzwGH3fGCLNX4s6Zu7V8VfM4Kx4a2W5TCeGXw6/Ds+bR89zN5+jdX/jaOT0R
4z4P98Mf8jyVq+ErptV54c08hMgFqh3vquFsmVk57DiPBzY9AVkV1bjzn1W0
2Mt5KN6V6OdSqYGQ0qp+0q15zDvZ4b1WLSISN5Rlyszj5x47fnJRHbyXHqbr
HJ7Hr8EmB/bBOjier4xYEJsH+7agizFs9bjV7WEjLziPTq6j7lVa9djFwyVZ
yDaP3Vop78bH6hFmwx9a0jWHiLlv+O9QI0KVJc0b381B5Vned8+pZuxhV66s
ez0H++sF5JadLUj4dUe4xmEOhPI9D0vlFuSpfmwofzEH0/+0P/+IaqH364IU
cXsOPq+EB71utGLr1cKZWPk5GH4ZZXLp/o0P1y+9sP83C12qhRhVogNb+e9U
2/TPgjtt454bDzsQ1mG991XXLCqFGL+JfelA0o3E5ufNsyje8CR8A08nqm5u
ljUumkXestXXNlonWO41z18NnkVdilqs4b8uOD++bbX/0iwGnAp2DLH14q+X
YWje2Vm8mRYoV5HshULqdbLKyVlsbIzVXrrWi+k5bRZT6Vks87GcPRzTi9sO
ykFpO2fBue6t05bzfTjtK51zbHoG7bwzm6l+/aBlr19U+zSDlIfykfnGQ9D/
w8jf5T+DoZGEwozgIWStrJ0y857BdEG/wmrFEEwVqW99XWdQfIk13PbAMDor
KbytT2dwkltGQXZ6GAWdrXK3zs1AxE5E4aPXCGzWxVuaj0+ja+8A9SwjBabB
hsy3hqdxb8xpSuooBXckuP3V+qbxfr3y8bumFChft00TbZuGr5OwzZt2Cral
q4//LZnGkZa9r6tzJpBxZ+aOSug0vNgebHDEJChFx9X3qExDtq8reMunadx2
rN3TEjuFhlrQKr3nodMWfrIzcgq75m75BqbMQ1nKTLc/bApqWZLLD+rmcaSf
02P64xT414fo/Me5AJaLmjMcTlOIUJ6kmH1YQNLm5qILelM4fFdMJ9VzEcth
fwxzWaeQYnbNRNSZismFeCsy0xRctA3YGiOo6L9s4/tzbRK/9EOv3QcVNYz8
Zc1zk3i5/fTo8RUqvhrdODTdM4kP5eFHP1ks46J497JY3iRoMZlN+2+uwL9w
ICjUZBJSLIO263hoMLQKsZe7P4nQxfUBkKBBVFrjXsPNSfT8ZH0gq0JDXmyO
BIv2JKLFGwPUnWj46+de9vzUJJRLjosxjtDwTf10IofCJBybcpcfr1uDGeuc
T9yRScRbWz5+y78GRgfDG137JyE2M5ZbqrYGERPJWWWeSbwxfaF9JnENk3sG
2wY4JnF5b6cRU/EacrtC4Mg6CXfuDJNHbWsIjGfZ+mR1AnxX+Hx8GEnkbsek
s+caJsD2cv8M20ES2Xyed7P1zwl8Mr20gSJDIjM9dvqTXDCBOIGkgLBTJPL+
a1rP+L5N4Oh1vsr7mvT4Q9SwaZsJZPJGm9i+oMdH3jURfTYB5K2TzrcjkQO2
VcsYGk3AKqdu5ocriZy/LqKq4vIEcnj3XzrgTyKrv2INWlOaQLTTubb3ofR8
KOZ3ZY5NYF/dJr3USDrfHyVqxN4JXBSiHbuSSufTSC5t2TEBt7ZTKRXZJLJo
6TafjZwTaHnnLLuBIJHVUkZFrKgU2PNvyK+toPPt1Z75PkFBxtPyHr1aer6f
CKKvn4K+LdGPvjXR+d74aGvUUkCc+cPn/pfOt0IVdC2hQHtbjYtgH4mc9+ze
WF4uBftrDzZYDpHIqkPV2ZNJFHSPMaR4j5LIXQZyLvuiKEjenVdhMkHnb4hQ
NwimINpDvHb9DD3/i2w7fL0o+OiU/Pz2PF2v8PnATxcK2Hk2m9ot0fWkO1NW
rSi4uyvBSm+Frhd73laa7iu3mZdX5mh0PYGUC8Z3KdALYMq7zMBA/uu3nTtc
l4LYYE/LR+sYyM9YXf42qVHwz2VZU2k9A5nJYSyO7SwFvhUT2/4yM5ADZrVf
nKb71l37V7AMCwNZ1ASnXx6ioDosM06FlYGc1yW6MVGYgrJLkYKCbAxk2+MM
30O2UeAcv7A1gY5PBLepveOgoJzjQ9YKHdPmUimWTBRsICaHeNgZyGTN9x+M
qOPYVOcfMEPfd06+c1h7chyLimMpQXR8buOx+rOD4/DP1RNlomNmY25zqY5x
GM6fmJKh6/8sHeUSahhH8sQsozg9PzfhkvTN5eNA+O9rY/T8lR1CtWiF4+iy
PjNuRq9vY4fF3Fg6Pd7XozifXn/NUbWA9rhx7LvP9beK/n68/ffKVYaPo0dH
8mzUGol8ZXq1Ncd/HLO/L64orpLIXBotVt/cx9Eqn7clhkoiNyUkbQ9wGoev
0HBY3QL9fFje5r22HAdfrkx80SyJfO3+zevPn4yD0W692qspEvmPAOfny3rj
4EBs4fEREjnUZvjEKY1xRH8VL704SCIb/ib/PaQ0DuvmgFa+XhK5x+eZILvk
OBTUNqTytpHIXymXipb2jUNqx72K0/T+u6cifGeYfxzyLEofJOn9OczUGFnK
Mo5DdxUGTUpIZIrlERHH7jFYXapJP5NIIqc0bSw3bRlDvl7q1uRoEvmZ5MDD
G1VjmFmQmu8PI5FnR/zjFXLGwBRlfCHJm0RevrFwaO7DGIpXs7zwjEQuyKut
6XMdQ8dO9V2OxiSyPW/s0wabMcyKVsdtvE0iM9brpiY/GMP57HQ+dw0SmeVc
3hGTU2N435HKJCpGIldG+Dbryozhsodxv6YgieyxavLywoExnPvL80d1K4m8
OZsvZw/vGAJ5jcjJDCTyVjG7Y12UUVxSrVyxod9PuzlPn9EKG4X27cy06nEa
vA73WJv4jWLrBacrVxpoWLzsnO7oNorXWxL0LLJoqPIp2fPdfBT/DmkeDrOj
wYL70gbmC6Og2aR7xm6goWyrZlX2xAhCX1hpdNH/60x23tPhUxxB+WWKxNsu
KtLE3Ex6+4ZhtY3zACP7PHbV38o90DaMePbWjev65+BhKc/yomYYMkxOPYyF
c7hfMhK9IXcYOoEHZJmezmGboVrPQa9hCN409hJvnIWdD5eu5dFhiAVrXBT4
PIOLi6FKGz2HwMuZVfzm5BQyw1581HYegmOiT8/L7VMQVlLvC7Mcwv6N9aau
s5NY9llzlLwzhJCMjT9ICZNIOnCnQEduCCm2tn9ctk+C56aI9JeeQSRav1AI
pPuqqzRVUFZ2ENXXW3Nlf/6D7dWlc0cPDiJzq7bSRfd/2NZz2lhBeBB2z7mm
4jX+4fJKbepJjkHwCxfb36fXSZainLkwOIDst+ZK+ZNDiAgXu68bMICIIwVG
8hKDuPMqMs56vh9D7lrkveO9oDGPVtuO9eNIXb7reH4vQj5KTdv39qPw7srB
Te69aEguUnCp6Yfv21BWLbFenB3s+uUe0w9OwZB02uMe7LnKTwnV6UeSwIJ9
BmM3Bg76SyGrD6oUh7lNnX8gZh9NGU7oAymlRfTruz8wrc2M5/rSh6Gn2ucX
Zf9g8VmLsJF7H4w3f5Qc8msDWzYv96ZbfVB0PuCWq/MbhxVDZvRZ+7C7pdjY
fK0ZL3zjk1/TeqEzmLRYlN2MvL68R0kzvQji04woNWvG2TftfQx/e7Eof9pw
oL8JOr/4m2LTevHj6estj5obYaMdnjF/vReMD7+tJrbUgxyTbCZ4hc5Xu2t3
WXA9mBZxUPl8L7540rhdbtTDK6Q76vNhOv+mGs5++rwb0SXkf259L4by9mrs
YahDmXHUC9+kHqxt5LmnFV0F9vwMyYLIHvTc5tmzcrIKlzeWjg8E9UCbJe9z
edsvtCUN3Jd36cFMI/dYGdcvjM3s0+m+1oPCwSg5Pt8K/GcfJyvO0IO7fvqh
MiVleJMlWs650I1Mcjyl2KIMVMo3vZmxbvSevV0tta8MvTdjbHN+d8N2qVg4
wb0UaYqRP86kdCN51Jyl+VYJNNd/Vr92sxsdETI6blI/UHaCv1teuxuvf+w8
oD5ZBIWXn57xq3TDfPjJ399JRRAeCv7YI9sN/U7mvbLiRZgpD/jziKMbRls3
mfbIkCGyXaiaZNMFB7YdbTy1BeB8v2uy1KgLwgNBJsm3C7BI3cntrtmFsE6R
p+Fz+Sjv2KG3RawLlYtbFZ8L5eNhBM/A/ra/6CprnPN1y0W8CMuqptxfkLVj
3m3wzYJvELPgtt1/Qdpb2+h2NAvWrOvPdnL8xWsf/0MS3ZlQHmV492CwE+69
lz26pDIxmrTMY+vfCVePd1cdBtJxUHbiYPRMB5Rz3N+r2qXCSNzBIbezAwKq
28YrxVMRvm9zQ/XPDjwTMzJ70pMCLl4Jy/lPHVCNuBL5n3IKFhZMiy6c6wC7
UcbJhctJODxJ4zYQp+9XSzg7lH6HybCXkdm2Duz8yvCC//h3dPxOYg8ea4e8
g4OnjUQifuRStEc+tuNhguWF3eLxWEm1j6XZt6NTw+ZRdFocZOI5lrmM25H3
YbqKXT4OsSHiEcdOtOPB6tvlJyqx8LQxHfEY+IMsk5wvQ64x0D1BsZeg+0Tr
gzhfs2okfGXs688K/sH10grnpbGv+HWIY48u2x8IWac7xHt9xUkB8QrHv22Y
Xtkw97nlC3avPeFueNMGkzgh51NWETBYWL0/aNaGixUn5o7viUDAhGcOVb8N
4sa7VU5FhoOl+/uN3RJt4L9ypmPd7TBQyOPfLFp/wzJtsOPZyieI5NpR3Yp+
Y13K7o+Fxp9wK3WT2ueE39BpmWt83xaCxi+HpksdfiNk1H3nW3IwcpyfHOcV
/Q3SkxdzvAmBcDk3Xpdr1QqDix7XTUb98OPimMaRu634QNvtN2DvB5LaaE2S
Wiu03gVbqvP4wVb7X1WkcCs2MPBerT7ni5dGA+WeVS1gKwzKQ743Mkz6L7Bk
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
AqWeZmn9P/w/z1X1CQ==
          "]], 
         LineBox[CompressedData["
1:eJwVV3c0Fu4Xf61Ikfo2RWQVCcke7+dNqBQh2SQrlZaUbFkZGUkSiZCRHWWT
vQrZWdnJ3pv35/fP85x77jmfe89zn/u593Pc+IG6GSWBQODaPv5/t826RjKt
aEM/wMX72uB7mZmrJ+YeWJmD4sn3xz3OUzL2rxVr74o8hCGPhnaZ/HHZLSfb
8EjBJ9jJ6vpcPEBB1uVOsmUznx16R6W6wjhMZKk0/8jS8jgjJMqRlkvCXraM
3ftFBJMr/juXcMEjKFDWPYTjobi/O+53jTQJbHyUVdxdoP1r1wvIdlHvNOrO
kKV1vX7urrc3Nv17bfNffJetXp7ipaF9iSuqOU5GQz9kfe557Yt098e3C4yD
L//rkI2bDXRkeR4IpbjnOlqKg7KeyT2P/hW/AlZ8m+ybJmVv3eIz/7YVBOKT
jRu1ZkuyFzlsdN1kgzF1O+XnPVMC8WRPmYqqwxvUcAud0LSmJe4MZTrPmh8C
wxPd17IeMRHH1A3Ex1bfQuN48J97nw4Saxk+n8qWeAeqRFWziLRjxKTqJTZ3
mzBwRyTI9DpwEV+6nd+v9i0cS/UpzrvIfERLYiDdscX3COlri7kRdIaovNq9
MXb2A4ZfCn+VjxQjCmTxzmZbRcLqvXgebYsM0Us836pUOwpdL2eszwnLEVeC
+ydOrkSBN3vwz8sKRaLFHO2tgLcf0St+kzZK/gqx46pA/6JYNJL0A4Ip7qgR
L6Zo6Om3RcNJJ6CBT+U6MZfevrX0SQwOynrGXBnWIUadPtCcxhELp/HyT05V
N4ieqmmN7xtiIblQZ6BpaEK89/hSvbfDJyhnHqurf3KLqBEyWPeUNw7UG3aa
L2BJlM51rDFpi0Mnk1St47+HRI7uQ1WqbvHw92aQneeyJu4kZ5TLCiVgsZFp
XbjPhjhz/EopX08CJEh1PwP4HIjt8iPFh3wSIeTo/1bHx4VYdMulkFr8M1Qa
mbW1td2IsT7M+bODnyGcnrSw29uT6JuSldMbmISV02dtd57wIVo1qnyrk01G
lijHl0xZf6L2/GhmzlgyypSLVuItXxFx0C3j09sUPP3Mu9uTKpjII8maFiSf
iuj76lYeYyHE3frZyc6zqRga+FUizhtGnHdS+2z5IQ30OWeysqoiiJONi83J
3OkIKsg7ovo3img0UKrO6ZAOLu9x+VDOGGLLfMCvd03pKBHt0gmL+ES8QGOg
ysSbAcddvbf9dBOIeQf5GjydM3DF+63p+o0kosDJZeXN1gy0/SRal2emEqMl
y3885v+CcXkn0b0CGcQDl19dHnP9AmfZDPY2wUyil75hrdHvL9AU32pKNv5K
3Lh36lK7YCayzDZVztdmEx84r1Qpe2bCStU+3P5OHnEgsEKxvDsT8x/+xt67
UEisybwhn+GdhZHfTxrth0qIMhX8ZSf6siD93xueB/llxPS21XMfxL7CM/z0
fqa8CiLnaOX3/X5f0aE4uUkeqCKGrL6G7+BX+FabSVJI1hLpd90sopD6Bo+8
9KMrRT+IjiwCss8Cv6GPUnf3hE0D0RTVUmay2ehvVFFrqGoidqi+ye16nY2s
9cbkILsW4mVjYwn1sWw0bfwojVBuIxY9FsyuJuXg92CzcotcB1HYY0MUb3Mg
8VdtWUC/k/gppCbr62QOVDpWp/PDu4mHE0LO8svnwqHsmk8k1R8iuVbozJHZ
XHCOdnJk8w0Qrbo30wIu5OHJwQX2XdGDxJHJWoEdH/KgcoZ58oLwMFGH/DbF
YSEPfJb5GfndI8QfTGb880r5iMtQDiyJHiWSOISTbn/Mhxrl3qUSjzFi5lky
b99yPlbMBmeFX0wQwzTfnfgZW7DNf10vS5/MEBktzOPOrxdAUdK24UfCLPG5
7VnuPLVCMA+N7zk/NUe0eP+TI36rECVuhoJrmYvErpSwj6zXi/Cs4brkPrFl
okrxLfbgpCJkUIwuyNevEEUHKI491y5Ga+kZLmqFDaJAntasUGIxYuyL1b5T
bxF5glLK+1aL4a+V8+96F5m462OyaJTyd+ia3N9lMkoBOj8ttpUn3xH84PeT
qhVKUNtS7lT98B1RvldWPQ9SY0NVu5s89R1p0jwWAg47sCJDVal1qAR9d197
n6qgxcLJ1LQ0lGD5UPz1VNadmCBQu90ILMElGh/LcPIujE6kWmbnlMDbNFZf
2ocBQx06mnv6SyDVtWjxg2cPetLTeIvPlCIgca+8wJW96Hyv+98h3VI8uxO2
R1d8H9q8aDbvu5Ziaf4TRTv/f6g30ms81lyK7oQZJTGJA6i9siPv6Xop7Oy6
QtpVDqJSIiOmnrMMCRGetBcfHUIRE62Nk3UZ7hjL2Ah2HUHeRoZR2/syNCv8
vWvLeRTfRvWVBCrKsJZ02lPClgWp37+w9h4ox8vjFjy/VdgQ+dCwXDa7HNed
9nysaefAe/2dqW/+lKPC/Oi7MzmcCL2Y9XaStgLPb6aESX/kQiA7/d0I7Qqc
OPufnII/D17u/qqx6FIBF8GMF41BJ+C1coOonFgBDXkFjgMfT8Kl8evezdUK
fFm9s3e+iw8OBUbrGhyVaC027eLayY9nCbuGk5UqkfRJd5Z07jQeutzM0Q+v
hLDsopV9syBuCjHcKJCpwkVS1+i7cmEYsuRc3G9WhaEYBq7HvmehS2cibOlX
Bbr/vjCx6IhAvS+HhqW3CtomB2rCd4pB5YfJ9OMd1TDzlTdrmRCDUg7j7zqB
apzvvqUb1S4OuUDTZHvnarx6z9b9vVwSRIc9Ic3x1XD95CrtXCUFKYs851ON
1TispxAV2yQNYRLTtS72Gsjf0omioiKCcyZ/Vaq0BusVJr4it8/B4ed594XJ
Gky3MBo5s8qh7XMdY+qRWtyTFw9tbpeDj1kX5/FHtfB7zuMoe0MeQ3ImqZ3v
a+HRfrUrnl8BsuzjEsHVtWAwkaCpIChipnNNmZa9Dq4TzwxqCy9s5+/a8f1y
HWw6b1Ezxl9E7Bt6Ezubbb/t0L38t5egpcr8bLK+DnP6j87uD7yMogrJ6GbH
H7jIn2koOnAVh2NK+P0Sf6A7qsmExVMVVi6XshVbf2BRJDg9kk0N3NI6P3L5
f0KyheFFmJE6XqY/W4rs+gm/slwnb9brGPEjPNehrcdc6dpIwe/rIN312vXf
2XqcS1hkMgzXxDx3KLunTz0WxNsKbgtqQzc8W8lSsgGZ7P6tCh/0kPUMrdxm
DTC2sZ1z9dYHo2bVjT+BDXCz4LGXsTdACVO7tfpoAzrOvtiXbXUD+8/bX31/
uRGjsbZTi503UXKmeL/tzUbEee4fCrY0xn12qs7rNo2w1JKU3U1pgupNH9M9
MY1ozc7napcwhX1OmK3rWiPiDTOMRTvMcTK+l3iD6RdEX31rm/C5hZY3HNQy
PL9w5niFwSk5Cwg8/uy/qPYL3JlXrMKLbmPgdF6MReIvhGwUn5iYtUQAy5aF
QvEv8IeUEp3q7kFml5wAR+svtFcFX9P/fB8hozU5XYQmlJbQLAjLPMSlmN8/
VbSbEEOryXaN3wozHqnmFfeasKQrL62TYoVQCzeytFsT7NPEabTOPMbo6dNn
eFObYGLX8+CRnDW8clyCqaibkTdDHPvi8xRC4ddP2x1pxod45cc7uG3Q4chX
OSPQjGEj/wuVpTY4eb5luUenGcYp9n3VdLao/nlCLyetGYrJIWlvv9vjYfrG
vEBFMw4y+9PRP3PA4de/Xn7qbEaiTdnJO2cdYaFtXxRE04LiiR5niW9OoBus
P35PrwWilGvum0suuLDyZPQ4bSuunA7oYQt3x1Sn0vNQllbI3mUL8mb2QEgh
G/Me4VZUyjzOc3nvgRHXmssb+q14JiDKfS7BE54MrGltX1ohI8vpJtrnBYGZ
2QvK1a2w5glmFX3ijbamyr6ynlbcG1McPszgA57Qh/sy6NogoN1dkqfgi0qO
8ie+hm144+Vomtblh/s07xgprdtwZ+STxCFvfxwcvRf/zLsNzxM1hEolA2Ce
cui3WVYbdKXNqr3VA7FD4q4Mib4dwdrEDfemV1BQ3ke1+LUdA81Soot8b+B/
c+fsak07JE+sWq+GvEHHE8KfrZ52UCgVZFZSh+DOh6k8uh0d8EACf8twCPyn
a61YNDsg7j0sYl4UinaqUqPjdzrgcC1CyEDyHdgP56rwOHUghEogXuXbO2SS
4vmE4jrAm+/VK/UtDB2v3AbOL3UgbYqveKb+PY7H2TVepP8NJz/3R491I3An
71GR8rHfiPyg1cc9GoGNgRthWoq/8XxPY54ofSSOi8io3w35jZIBs0+DWVG4
07ZQEiTWCenXhyp9VGKQOTae9lapE3sCyGfs42OwsTUQ8d6wE2+1TJOLKGLh
f+KXbZxnJ2w7v35TyYtF5rOUM3ltnaBmW9WjlonDBrP5x/6nXXBmtrt11yMR
CoIGASM+XZhN2htsv5gI//MajuMfunCEnK/EceszjlvK6SxWdkHpgKaRwtUk
KBYe27vzUDdqT0VoGZ9NQcCNdheh7G5MfjSO84lPh+eEDEZ+dONKkOvVq/Pp
cLKN3gwf6EZYhiu1ECkD91/fs6Nl7IHFFpetek8GVKqorHtNe1Cd4SVgw50J
RkGhWy/39SJ5MO+p0MxX7Ch4wy13shfhL9s1FK5+w9bF9cFl2V5o7JULSE77
hinjSiOT27144Ctk72KdjfoQfV2p771IY9hki2XMhf+Wl/LovT/o6PsSxuJV
AE/fqV0f3P4guFbv8b6tAjgd1qi99u4P+k9/yAt5Uoj7wmwXisv/oNYs4rru
7SKcyNRlr2PoQ4vcZ79jwt9B+3fmSLRpH8xzz9U5Xi+FWwrnqsODPvAGnHbo
iSgF+bFmh5ZdH55usa5y/S3FMqEghCGwD+P6PVWPHcrwl/nFf7b5feAILRK9
8qUcVSqsDKr7+sH5Riel5koV9gv0H7Ri6UelbLFr5YcqGDF8Yg/m6UeH/9Xz
SbNVWKvjF+mQ6sefjqCUs2HV4L8ko2dk0g+il7aB1VINAs/rJT7M6kecUulp
qZ7tucDBlhlU1I+DjzIU/Ig/wUs5WJBV3Y9NdRGm4aifKP1+p3Glux+6Dx9O
JVrUY1HWbtmFZgAsZSaeBpSN0JV4p/BKcwC33VZ2K+T8Qtwhg6uZRgNgPjOq
6jz7C/NL7DqtdwZQy8DOpnSqCS+/JlgecR4AaamuPjiqCcXCOa8/xg8gs5r2
4cGgZnCdbu/PWBlATJ+jqeerVkweP+DUFDaIsXetPNG0nZCw//ioJHYQQaYk
wpp6J1xbTpulpw7i4ZCS3sKHThx8oXjFv3QQxoaFI00SXSBO2DArjQ3C5Qh7
l6J1NwK+dX4rkRyC2syL1/b0f3DmctR0escQ7r5SV7bUG4BDLP9g5MAQGDla
SlJ8B1C5mdPmPzEEEYvvDIoFA9BN/1VoSRhG98UeGftjg3A9QPXy5MlhaN36
VLk8MojmP2Yno2yGIXfZOuC01zCeWJ+6GXBwBK7roYrW9P9wkH66QPP4CC76
XHQ0UvqHnMgvh4/xj4A57mhmks8/bNRKNiafG0FyZFyZ/u4xuB6/iFrLEQgo
0X88tH8c/vWmrDRlI3CjN/e8LDKJuJMffts9+It4l8G1Fx0zaO9mUjevHkXv
k2O/F+MWoeRr1mHdNIpCo6WhV3WLKJDMM3TrHkW03Xrq6ZlFRIWY3I2aGcW/
6aM2RpJLsFD95t55+B/UhO2PhtQtYa1ML1vl9j8MN9b2XptaBktSHIs4/Rg+
6IxZSnOvwV9nPVph/xhaSi/6ZFxYA4FOlVfj2BiclzQFqe6sYch0VfSR8Bge
n/94QiR1DSnHrlxN0h0D8yCn+meRdRCDZp+zJY1hJks3pEliA+kkRTqBr2M4
E8rJdk97AxzTYf4yxWPIfqP4oMFmAzuuyIfrNI9B0brYceTrBhpo3ma9Xh/D
JeGK0zKCmzCylflLe2UcOxqjQp8d2AKfaXXrlOY45rlcwi6f3cK8ikZ5681x
MJVM76xU3YInl+XHGJtxvCY3PEry2UJyQ7geYsbR+QP/mNa28DTvhBJP6jg+
NUlXLu8nA58yJRhyx7d5P23aTpCMJru6A13145j0aB9UNSFjlXu94enaON7H
7rM5VElGKdOLIgOaCdjzk74X9JDxcn1fijzTBOaPbVxaWCCD/Refzz6eCbj3
exXS7yWQFB105VPVJlCdrufrIk0gMd0aEX6jP4EvnnTPXyoQSL/VrI473JpA
Cess0eAqgWR5wmfrkuMEZDj/47hsTCAFNeXmDCdM4JEdZdxlDwJJv1Ah/kfm
BILca/8+9COQuBN+vcksmoDs+Q1zrTcEUo7jP6vnLRN47EwOM48lkFwtnty0
+DMBT7Ost/5JBNLlaxSqV8cm4JiZevPpFwKp9+SR06yESUw1vjzoXkwgJfz3
6Sj1rknsv/nqVmIFgfRoS4h+/MAkjHcIqPvVEUjULRf/5pyaRNdNpfGANgKp
vqilNVJsEmsJUmypXQTS20Sjcs9zk7hmmrHs3Ucg8Tk/+6ihNQnvYtaftv8I
pIXb1IHSxpMgGcY/8JskkAo1Ap047k3CN2iUwnCWQPIEy72dz7bxZXqMxhcI
JFW+BL0Z10m4vgm/J7pCIDEfEFFq95uEyV9NBpl1AmmQXCxRFDqJjNKbvORN
Ail57PKJTzGTsI4XTHMiUJCetrYfeJk6CfMTmoF5lBQk0ncT6se5kzjo7Ff6
hZqCtDNpek6nfBKP49JxawcFqemNfT+pYRKhHQU0HbQUpPcutI0nOie353Hj
QZqdFCTzu6+LGIcnwcvIZzu1bQtpsqUsTk9ihY9bPJiegrRGSgrvXpvEQI/E
jaVtu+yUuE8ZzRQ4mRaoDuyiIBkKasTM7plCu3np94Vt/4rwowI25ikY+K1V
v9u2g8T8W5W5piBhpiZKvW3zSyVN2QtMgT3V97jIdrxK2WrazxJTENttl8xL
R0EyOjfM3iE3BfncheWh7fzX5CmldihPgW6g7aQ5DQUp+CLbNRGtKeikr5qn
UFGQBK7IWBrfnIIglWBPHgUFqfqqjkfg3SmUtUrn+pMJJONrTz8UPZlCgWbT
Kd7t99zUfJ094TyFqHRfC581AilUN72R2WcK/9z7P31ZJpCEDX/+uxg8hQ7m
E6zR2/UyN6Nl+ZQwhaH5weT27foSbnOJNn+ZglcoQfHYGIEUZnlOhaJwCvrs
F5lPj2z/n8f2Lga/ppDjE/A6todAsrAJfefbNQV4/6xn+E0gUdp//ZI7PAX1
kahHpBYCSdx1eujA2hQOEebEqGoJpCaP3Vvnqaexd/cp6uDy7f7x5j1kxTiN
n1b6/tNFBFJUoMmleo5psHwYvESXSSDRRbaneF6exrTGndnaUAIpOnqhMuv6
NFLc2XkLXhFIMnF7+wZuTKNon72kvQ+B9DDl8j5YT6PVfSvM1H67X/OLny6/
n4bW2ZaGGV0Cybq4O4A7fju+sQ2/gTqBxFi2mnAtYxqTMroU4ZcIJLnas11p
FdPotY+j8RMnkD53xMNiahodqp73tLf5QaG7XDtkZRpMGYJPDGkJpJnpGQlj
ihkI0qcRrNfI8JlnUA/cNYPOXwaufxvJKFq74D7BNgPCobJjlHZk8OwsGI29
OIPvMel+W4VbmKsSuBOtPIMhnYbK/E9bKPL8OB6pPoPnvB0uEn5b0KR+MRWm
PwOTvXM91npb8CCrLQQ+nMF8Qo3g4cVNDC3+JTuEzmCmi0qS8tgmogf+O3R9
dAanXR95nVRZB2vBXQUar1lInbL72Wm8jP1H1tbu+81i73nVcUHSMnY/9Urv
CJrF9aYGHw/WZWwIfjqaHDGLx6/SFcU6ltAZ0zurnjkLhmaNzGrlJYT4qn2I
6p3FjrfN6Y5Si2DUE1+WFp1DUMGdHz/Z5rEjpyL5k9Qchgc+R3ZtzWFzv4bx
HtIcsixCByl75zBR//DngNIcqsVnpyPfz6FW7nOMt9EcVKyGSjiOzuEFH6tq
u+8cdnpsDn1lnQVhjTLRamAOhWdOvnppMwWjwd/zzn/nEDa4X9rr3BS+/0gn
+k3MwbMpKa581xRcIg1b4pfmkLL1c4vwcRJk+TxyN/08KDnlXgXUT2Ar4JHm
hbPz4Eso4pYQG8cGdx8Vi/s8FGTX1b5KjEJ/T7YKr/c8XEhTb7h3jaJgxe+d
mP88Xmvxve/s+QuHOmlBtdB5aJR0lu5z/4v1h291PZPnYRn2vT63eQRr+SoZ
My3zmK4PuNrgPIxltULDCu4FdC22CXHRb+8rv9N6iKcWUHlehq67fwCMN6P1
c4QWsCE5efZP7gB4Hr7QTZLe9ivPGVRu720a/mqar9QW4HXqesCexn6k1w4r
GzguoNggQEcxoQ8y6h0/2lwXoMa4wuXv3oeq37WXVb0WsLzblZXlZh96R9Mu
nX+9gEDpU6d3Hu3Dblo7Bd7EBTjV+HlLc/3B7fOMsostC8j8/Ppf4ZEeLNQS
Cu53LkCxfd+Zgs5uuKjPS43+WYC13Noe6ffdCL3ZIdE1toD+Sl6vbPZuVDpH
i5QQFqGRtbT0RrALHAVi/H78izhQ4+EsY/obXSI3jnK7LyLgXX53LWcbzFdF
93h4L6KeW4aKtNCKmcLdVMP+i4gVyHY4UtEK6gt5Y7HvFnEwLjdo6VYrBHQO
5HGlLYJL3yZA4UsLXBzrtLk6FxFOU9YZpt0MernoK+5/FmGa0apCIdiMNzts
SUNDi1jnoaYqoWnG5wCek7HTiygSMnG6lNWE5o/PlzlpllBAQylgeaAJPJXi
IZxCSzDIcrll/rcR6T6MPm6iSxBrSDyxr6wRUleHHQellhCe8O3n7shGXO0I
MotRWIIloUVtQqsRz8YmRTj1ltAlzyvgGdaAOsbYZg7PJRxjoy8J8v2Jh1pM
ezm6l/CnnjnLsqUGxgmCYdz9S2A2yk8ci6rB9VUVTt6RJQja5jk23auBVLif
qNDMEpr2yD3tpqsBzR96XSL1MrQv9Y6Xnq9GmDlNjC7/8jY/6T04+aMSL7O5
+A3PLIOV84rB0IdKONPJf70ptoxbTlffbz6qhOln1yqL7T5XlFo7rHCkEoJT
5PGnGssQ+8sa959lBcqfrIm8dlgGxX2bw0wc5fhWeaQo5Pky+m60sl5eK0Pi
IckLYZ7LiD2cJN7RVAb/XBudj4HL4FdvohlxL4PO5oJjWuwyPl/S7C6cKMWU
+3Rl3Y9lqKvEjDfWluBI8JA2NesKNkaZipOeFUPCje2gNccKCsX0yo+JFUPT
Srd58MQKkmzcdXgWihCk2qhcJryCOWav6clHRdjNUCDnenEF7OqLflLWhdjy
eM1PsF4B/5W+hvSgfLA8qf/3wHYFLyZF41q08yFtujP+j9MKyo5my9qy5eOZ
nPPxYu8VhCU2HyGl5mF2685Bp8gVMFK9Wo79lYshGznCRu0KUHp6tk0gB5S3
HAvvNq7g0l+Xm64b2WDXzLHral2BrOgprYjabBiICCzm9a3AwF+3jdUiG20z
R8Zsl7bxlzwKTid8Q83t2ebl46uQ7+E89FX6K1L1ouLnn63ipOqTZIHPXyDS
zrm2w2kV9x3W6H09vyBfPf4Ks9u237TyupDJF1RfSp0l+a1iSWTHuWusXzAo
XiDt/3EVPM8kU/4FZ+Dw/o6Gk7WreLv3KXV7YDo+BOhxyDSsor/Bodr+UTq4
d/2xvtqyilURratG6ukQphw58rR3FaYPvnqM7E+H8sy8SdncKnJ7LSYzJNPg
+mPPisHRNbhl3VGoeZACuouvlR6xr4GSsUQ/UCIFAWUHI9y3dUbND7/NSooU
vM9jlUsSXENM2d4Tzm+SkZ1w6uXK+TVcP8EaTlGahAn3C+yvLdfw9RmPs7fA
Z2jJOl+sLlzDWmd7cOfVeHQvjuwpLd3GO8mVW8odD+NUlfb8qjU4nz9Ksbke
B0u2Y+Zpv9awa31JwywxDq4UhW4hw2vo0TtZO0cbh9SKtSJThnUwpEgYPm6O
hYiTsafhvnWYZkrTnUmNRa5YrbL2oXUMy6d2iHnHojz+Xffl4+twpngcfpgU
i9/eEmvCouug3J+cyZURA2qVp6IUBuvwTN1lPxgZDZ8dvRtrN9cRyjjj2ucU
jT3FCuUL5usQvmi6xGIYDWahA9dGH65j+YHyEXXWaAjuy3rY4L6NP1ysH/nh
I3TbZpMiktdRWxeTo5MchQzDexxSG+sIP3R+69xABIy/zrBGUWyA512HTH9i
BPbvtj6yg3YDkSQvuoVHEXiaa8fUtHcDk8rXrz2kioDUfq+t2yc2tufKbZ+E
U+9RWhPd+U59AzI7XTQUAsPwmJ2njay1AWWdXvMkwzBw2ST+MjPYwO2GCJGn
p8O29VV69RmLDewtSQkR+/EOl50Lv9U4boDke2NWifEdWkQ6glYTNkCxfPTo
7ti38PDV87+RuoF+3i1pvWdvITbQ612RuQE+twB5SuW3CA0YdnlVtIEzrsEH
ry+HwGBs7j5vywbEKY/fXL0agpFIhss65A24/95PFcn0Biv056lyr2/iAlUJ
ubQ2CPumGINLdTdxSug7C2VSEE796uT6cWMTmtWdBfa+QTB8a6X45/YmrF7/
+caiHIQyzmhvGqdNzHmnM+9sfgV/GQom9bhN5JxLn+D7Fwju+8Us40ubSLRb
3vHUxh9ENd+UhfVNbK7fnlmU94e2iBZxi7AF4Ve5pF/7/OGzNnVj765tXemi
qfw2zQ8znsdixNm28LxyZkx58iUKIh153S9sYUbj2ePGZ75Q/yUtxhq6hS9b
Gfq1dV6gl95VUhCxBYWmid66D14oie28rB+zBY3l1QgeKy8IPbO9GZ66hQE7
9vahI15gZMt+eaRiC5Spn7Ie3HuBGkvhwQNzW7Bk+WzHzuUJlzaK+1+Xt6BD
NVFyY8MDEqRfKxqbWwisYD442eKBuP8eMgbTkWGZ+O3qtKcH3PNSJPexkfHG
sU7OZcodJDreQMYrZATsCohRqnPDyqMV5lQ1Muz2/+RhT3BDWlfVJ2UtMng9
yVRSHm44lmae/9KYjL80mv4SJDdsXI8dobclY1dcoI1ariuyY9hkaePIeC7W
Q7LPfo77DNNVcUlkqKe8S7oe+hw8NkXqihlkSDnvoLG0fY5gJQMLjwIyvJ88
eKUk8xxWs2GvqZrJMA2+l1RS7gI+vTvHYjrIsJ9pO3Y/3gX95ZKJcr1k+CZ9
zVb3cYFqaEfR83/be7MDlXepqgvoKBMuHZ8mg3YroOuKiAuK79q0fN/W6X/n
q14wHHbB01bFG0bbe/bovdtSdCvOEMDBMTJ5W+f7f9E2+u6M/wFn3+Kx
          
          "]]}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}}}, AspectRatio -> 
      NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True, 
      AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, ImageSize -> Medium, 
      Method -> {}, PlotLabel -> 
      FormBox["\"Even and uneven functions vEff\"", TraditionalForm], 
      PlotRange -> {{-2, 2}, {-2.130410968813297, 2.1304111775262}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {
        Scaled[0.02], 
        Scaled[0.02]}],
     TemplateBox[{"0", "1", "2", "3", "4", "5", "6"}, "LineLegend", 
      DisplayFunction -> (StyleBox[
        StyleBox[
         PaneBox[
          TagBox[
           GridBox[{{
              StyleBox[
               TagBox[
                FormBox["\"n=\"", TraditionalForm], TraditionalForm, Editable -> 
                True], {FontFamily -> "Times"}, Background -> Automatic, 
               StripOnInput -> False]}, {
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[
                    0.9372549019607843, 0.6470588235294118, 
                    0.6431372549019608]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[
                    0.9372549019607843, 0.6470588235294118, 
                    0.6431372549019608]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> 1, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Dashing[{Small, Small}], 
                    RGBColor[
                    0.6470588235294118, 0.5686274509803921, 
                    0.611764705882353]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Dashing[{Small, Small}], 
                    RGBColor[
                    0.6470588235294118, 0.5686274509803921, 
                    0.611764705882353]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> 1, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[
                    0.6745098039215687, 0.07450980392156863, 
                    0.043137254901960784`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[
                    0.6745098039215687, 0.07450980392156863, 
                    0.043137254901960784`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> 1, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Dashing[{Small, Small}], 
                    RGBColor[
                    0.2823529411764706, 0.21176470588235294`, 
                    0.27450980392156865`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Dashing[{Small, Small}], 
                    RGBColor[
                    0.2823529411764706, 0.21176470588235294`, 
                    0.27450980392156865`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> 1, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[
                    0.8627450980392157, 0.5215686274509804, 
                    0.34509803921568627`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[
                    0.8627450980392157, 0.5215686274509804, 
                    0.34509803921568627`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> 1, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Dashing[{Small, Small}], 
                    RGBColor[
                    0.09411764705882353, 0.08235294117647059, 
                    0.2901960784313726]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Dashing[{Small, Small}], 
                    RGBColor[
                    0.09411764705882353, 0.08235294117647059, 
                    0.2901960784313726]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> 1, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.9686274509803922, 0.6039215686274509, 0.]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[
                    0.9686274509803922, 0.6039215686274509, 0.]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> 1, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
          Alignment -> Left, AppearanceElements -> None, 
          ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"],
          LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
        Background -> Automatic, StripOnInput -> False]& ), Editable -> True, 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{"RGBColor", "[", 
                   
                   RowBox[{
                    "0.9372549019607843`", ",", "0.6470588235294118`", ",", 
                    "0.6431372549019608`"}], "]"}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.6470588235294118`", ",", "0.5686274509803921`", ",", 
                    "0.611764705882353`"}], "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{"RGBColor", "[", 
                   
                   RowBox[{
                    "0.6745098039215687`", ",", "0.07450980392156863`", ",", 
                    "0.043137254901960784`"}], "]"}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2823529411764706`", ",", "0.21176470588235294`", ",", 
                    "0.27450980392156865`"}], "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{"RGBColor", "[", 
                   
                   RowBox[{
                    "0.8627450980392157`", ",", "0.5215686274509804`", ",", 
                    "0.34509803921568627`"}], "]"}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.09411764705882353`", ",", "0.08235294117647059`", ",", 
                    "0.2901960784313726`"}], "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{"RGBColor", "[", 
                   
                   RowBox[{
                    "0.9686274509803922`", ",", "0.6039215686274509`", ",", 
                    "0.`"}], "]"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
               ",", #7}], "}"}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"n=\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], "}"}]], "Output",\

 CellChangeTimes->{
  3.609227422169242*^9, 3.609227507472005*^9, {3.6092275377747602`*^9, 
   3.609227559579589*^9}, {3.609227807615513*^9, 3.6092278371736813`*^9}, 
   3.6094829440252533`*^9, {3.60948601864968*^9, 3.609486028568152*^9}, 
   3.609486069696102*^9, 3.609491943274571*^9, 3.609492790961113*^9, 
   3.609492858610567*^9, 3.609495476746091*^9, 3.6094955166365*^9, 
   3.6094957899948797`*^9, 3.609824501347597*^9, 3.615540524802122*^9}]
}, Open  ]],

Cell["\<\
Oh je: Bei n=0 sind nicht mal links- und rechtsseitige Werte f\[UDoubleDot]r \
z\[Rule]0 die gleichen! Das bedeutet, dass unser ganzer Ansatz hier \
ziemlicher Humbug ist.\
\>", "Text",
 CellChangeTimes->{{3.6094978009993143`*^9, 3.6094978342440968`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
1. Polstellen extrahieren (Rekapituliert)\
\>", "Section",
 CellChangeTimes->{{3.6092245297075167`*^9, 3.6092245407054234`*^9}}],

Cell["\<\
Nutze Reduce, da besser. Code kopiert aus \[OpenCurlyDoubleQuote]Symmetrie f\
\[UDoubleDot]r Bardeen.nb\[CloseCurlyDoubleQuote]. Das hier ist lediglich ein \
Mix aus \[OpenCurlyDoubleQuote]Symmetrie f\[UDoubleDot]r Bardeen\
\[CloseCurlyDoubleQuote] (Reduce) und \[OpenCurlyDoubleQuote]Symmetrie f\
\[UDoubleDot]r Holo\[CloseCurlyDoubleQuote]. Nichts neues.\
\>", "Text",
 CellChangeTimes->{{3.60922455144836*^9, 3.609224561988768*^9}, {
  3.609225313740546*^9, 3.60922533023167*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ReduceToSolutions", "[", 
   RowBox[{"reduceResult_", ",", " ", "extractVariable_"}], "]"}], " ", ":=", 
  " ", 
  RowBox[{"Cases", "[", 
   RowBox[{"reduceResult", ",", 
    RowBox[{
     RowBox[{"Equal", "[", 
      RowBox[{"extractVariable", ",", " ", "value_"}], "]"}], "\[Rule]", " ", 
     "value"}], ",", " ", "100"}], "]"}]}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"polReduce", "[", 
   RowBox[{"n_", ",", " ", "hDzSide_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Reduce", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Denominator", "@", 
      RowBox[{"hDzSide", "[", 
       RowBox[{"z", ",", "n"}], "]"}]}], "\[Equal]", "0"}], ",", "z"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"polstellen", "[", 
   RowBox[{"n_", ",", "hDzSide_"}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"polReduce", "[", 
    RowBox[{"n", ",", "hDzSide"}], "]"}], "~", " ", "ReduceToSolutions", " ", 
   "~", " ", "z"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"poles", "[", "n_", "]"}], " ", ":=", " ", 
  RowBox[{"Join", "@@", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"polstellen", "[", 
        RowBox[{"n", ",", 
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "~", "Select", "~", 
       RowBox[{"#", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], " ", "&"}], ")"}], "/@", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"hDzPlus", "\[Rule]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Im", "[", "#", "]"}], "\[LessEqual]", " ", "0"}], " ", 
          "\[And]", 
          RowBox[{
           RowBox[{"Re", "[", "#", "]"}], " ", "\[GreaterEqual]", " ", 
           "0"}]}], "&"}], ")"}]}], ",", "\[IndentingNewLine]", " ", 
      RowBox[{"hDzMinus", "\[Rule]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Im", "[", "#", "]"}], " ", "\[LessEqual]", " ", "0"}], 
          " ", "\[And]", " ", 
          RowBox[{
           RowBox[{"Re", "[", "#", "]"}], " ", "\[LessEqual]", " ", "0"}]}], 
         "&"}], ")"}]}]}], "\[IndentingNewLine]", "}"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.609224382774663*^9, 3.609224408543653*^9}, {
  3.6092245685557547`*^9, 3.609224659739441*^9}, {3.6092251847403316`*^9, 
  3.609225184904121*^9}, {3.60922838394646*^9, 3.609228384510445*^9}}],

Cell["\<\
Pole mit der Hand \[OpenCurlyDoubleQuote]nachbauen\[CloseCurlyDoubleQuote]. \
Dazu verstehen wir die bei polReduce gel\[ODoubleDot]ste Gleichung mit der \
Hand nochmal, also (-1) = z^(2+n) hat die L\[ODoubleDot]sungen exp^(2\[Pi]i \
(1/2 + k)/(2+n)), k\[Element]\[CapitalNu].
Um aber nur die L\[ODoubleDot]sungen mit Re>0\[And]Im<0 zu bekommen, \
\[UDoubleDot]bersetzen wir diese Bedingung in die Winkel: e^(i\[Phi])=cos(\
\[Phi])+i sin(\[Phi]) und damit cos(\[Phi])>0\[And]sin(\[Phi])<0  \
\[LeftRightArrow]  3/2\[Pi] \[LessEqual] \[Phi] \[LessEqual] 2\[Pi]. Nun ist \
\[Phi]=2\[Pi]i(1/2 + k)/(2+n) und dies erkl\[ADoubleDot]rt kmin und kmax \
(Gleichung umgestellt nach k).\
\>", "Text",
 CellChangeTimes->{{3.609843303078478*^9, 3.609843457943471*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Mit", " ", "der", " ", "Hand", " ", "\"\<nachgebaute\>\"", " ", "Pole"}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"kmin", "[", "n_", "]"}], " ", "=", " ", 
     RowBox[{"Ceiling", "[", " ", 
      RowBox[{"1", "+", 
       RowBox[{
        RowBox[{"3", "/", "4"}], " ", "n"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"kmax", "[", "n_", "]"}], " ", "=", " ", 
     RowBox[{"Floor", "[", " ", 
      RowBox[{
       RowBox[{"3", "/", "2"}], " ", "+", " ", "n"}], " ", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Intervall", " ", 
     RowBox[{"war", ":", " ", 
      RowBox[{"{", 
       RowBox[{"k", ",", "0", ",", 
        RowBox[{"2", "+", "n"}]}], "}"}]}]}], "  ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"constructedPoles", "[", "n_", "]"}], " ", ":=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{"2", "Pi", " ", "I", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"1", "/", "2"}], " ", "+", " ", "k"}], ")"}], " ", "/", 
         " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", "n"}], ")"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", 
        RowBox[{"kmin", "[", "n", "]"}], ",", " ", 
        RowBox[{"kmax", "[", "n", "]"}]}], "}"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.609830479835176*^9, 3.6098304924247093`*^9}, 
   3.6098305552744913`*^9, 3.609830833292851*^9, {3.6098421576148148`*^9, 
   3.6098421909464817`*^9}, {3.609843141030138*^9, 3.609843158093082*^9}, {
   3.609843219270481*^9, 3.609843264029991*^9}, {3.6098438659678583`*^9, 
   3.609843873907493*^9}}],

Cell[TextData[{
 "Die an x=0 gespiegelten Pole erh\[ADoubleDot]lt man trivial durch ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["z", "0"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\[Rule] -",
 Cell[BoxData[
  FormBox[
   SubscriptBox["z", "0"], TraditionalForm]]],
 " in der aufzustellenden Summenformel."
}], "Text",
 CellChangeTimes->{{3.609843484943502*^9, 3.609843530657486*^9}}],

Cell[CellGroupData[{

Cell["1.1. Plot der Polstellen", "Subsection",
 CellChangeTimes->{{3.609225303380802*^9, 3.609225309792095*^9}}],

Cell["\<\
Das Polstellen-Plotten erfolgt lediglich zur Verifikation. 1:1 genommen von \
\[OpenCurlyDoubleQuote]Symmetrien f\[UDoubleDot]r \
Holo\[CloseCurlyDoubleQuote], Check des Plots gegen Calc12 (Seite 9). Passt \
alles.\
\>", "Text",
 CellChangeTimes->{{3.6092253335322237`*^9, 3.609225366958849*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Zeichne", " ", "die", " ", 
    RowBox[{"Polstellen", ".", "\[IndentingNewLine]", "Diese"}], " ", 
    RowBox[{"Funktion", "/", "Zelle"}], " ", "ist", " ", "aus", " ", 
    RowBox[{"Polstellen", ".", "nb"}], " ", "kopiert", " ", "und", " ", 
    "etwas", " ", 
    RowBox[{"modifiziert", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"circle", "[", "s_Circle", "]"}], ":=", 
    RowBox[{"s", "/.", 
     RowBox[{
      RowBox[{"Circle", "[", 
       RowBox[{"a_", ",", "r_", ",", 
        RowBox[{"{", 
         RowBox[{"start_", ",", "end_"}], "}"}]}], "]"}], "\[RuleDelayed]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"s", ",", 
           RowBox[{"Arrow", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"#", "-", 
               RowBox[{
                RowBox[{"r", "/", 
                 RowBox[{"10", "^", "2"}]}], " ", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"Sin", "@", "end"}]}], ",", 
                  RowBox[{"Cos", "@", "end"}]}], "}"}]}]}], ",", "#"}], "}"}],
             "]"}]}], "}"}], "&"}], "[", 
        RowBox[{"a", "+", 
         RowBox[{"r", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Cos", "@", "end"}], ",", 
            RowBox[{"Sin", "@", "end"}]}], "}"}]}]}], "]"}], ")"}]}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Daten", "[", "n_", "]"}], " ", ":=", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Re", "[", "#", "]"}], ",", " ", 
          RowBox[{"Im", "[", "#", "]"}]}], "}"}], " ", "&"}], " ", "/@", " ", 
       
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Solve", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"z", "^", 
             RowBox[{"(", 
              RowBox[{"2", "+", "n"}], ")"}]}], " ", "\[Equal]", " ", "1"}], 
           ",", "z"}], "]"}], " ", "/.", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"z", "\[Rule]", " ", "a_"}], "}"}], "\[Rule]", " ", "a"}],
           "}"}]}], ")"}]}], " ", ",", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"in", " ", 
        StyleBox["Blau",
         FontColor->RGBColor[0, 0, 1]]}], " ", "*)"}], "\[IndentingNewLine]", 
      
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Re", "[", "#", "]"}], ",", " ", 
          RowBox[{"Im", "[", "#", "]"}]}], "}"}], " ", "&"}], " ", "/@", " ", 
       
       RowBox[{"polstellen", "[", 
        RowBox[{"n", ",", " ", "hDzPlus"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Re", "[", "#", "]"}], ",", " ", 
          RowBox[{"Im", "[", "#", "]"}]}], "}"}], " ", "&"}], " ", "/@", " ", 
       
       RowBox[{"polstellen", "[", 
        RowBox[{"n", ",", " ", "hDzMinus"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Re", "[", "#", "]"}], ",", " ", 
          RowBox[{"Im", "[", "#", "]"}]}], "}"}], " ", "&"}], " ", "/@", " ", 
       
       RowBox[{"poles", "[", "n", "]"}]}], " ", 
      RowBox[{"(*", " ", 
       RowBox[{"in", " ", "Ringen"}], " ", "*)"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Re", "[", "#", "]"}], ",", " ", 
          RowBox[{"Im", "[", "#", "]"}]}], "}"}], " ", "&"}], " ", "/@", " ", 
       
       RowBox[{"constructedPoles", "[", "n", "]"}]}]}], "\[IndentingNewLine]",
      "}"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"MakePlot", "[", 
      RowBox[{"n_", ",", "\[IndentingNewLine]", 
       RowBox[{"label_:", "\"\<\!\(\*FormBox[
RowBox[{
StyleBox[\"z\",
FontColor->RGBColor[1, 0, 0]], 
StyleBox[\"*\",
FontColor->RGBColor[1, 0, 0]], 
StyleBox[
RowBox[{\"h\", \"(\", \"z\", \")\"}],
FontColor->RGBColor[1, 0, 0]], 
StyleBox[\" \",
FontColor->RGBColor[1, 0, 0]], 
StyleBox[\"left\",
FontColor->RGBColor[1, 0, 0]], 
StyleBox[\" \",
FontColor->RGBColor[1, 0, 0]], 
StyleBox[\"and\",
FontColor->RGBColor[1, 0, 0]], 
StyleBox[\" \",
FontColor->RGBColor[1, 0, 0]], 
StyleBox[\"right\",
FontColor->RGBColor[1, 0, 0]], 
StyleBox[\" \",
FontColor->RGBColor[1, 0, 0]], 
StyleBox[\"roots\",
FontColor->RGBColor[1, 0, 0]], \" \", \"vs\", \" \", 
StyleBox[\"unit\",
FontColor->RGBColor[0, 0, 1]], 
StyleBox[\" \",
FontColor->RGBColor[0, 0, 1]], 
StyleBox[\"roots\",
FontColor->RGBColor[0, 0, 1]]}],
TraditionalForm]\). \!\(\*
StyleBox[\"black\",
FontColor->GrayLevel[0]]\): Residual taken Points\>\""}]}], 
      "\[IndentingNewLine]", "]"}], " ", ":=", 
     RowBox[{"Show", "[", 
      RowBox[{
       RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Daten", "[", "n", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"AxesOrigin", "\[Rule]", " ", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"PlotRange", " ", "\[Rule]", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1.2"}], ",", "1.2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1.2"}], ",", "1.2"}], "}"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"AspectRatio", "\[Rule]", " ", "1"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Frame", " ", "\[Rule]", " ", "True"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Im", ",", "None"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Re", ",", "label"}], " ", "}"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotMarkers", " ", "\[Rule]", " ", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Graphics", "[", 
               RowBox[{"{", 
                RowBox[{"Blue", ",", " ", 
                 RowBox[{"Opacity", "[", "0.6", "]"}], ",", 
                 RowBox[{"Disk", "[", "]"}]}], "}"}], "]"}], ",", " ", 
              "0.1"}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Graphics", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Darker", "@", "Yellow"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Circle", "[", "]"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"Disk", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", "1", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "Pi"}], "/", "2"}], ",", 
                    RowBox[{"Pi", "/", "2"}]}], "}"}]}], "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Text", "[", 
                  RowBox[{
                   RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<R\>\"", ",", "\"\<Title\>\"", ",", "15", ",", "Bold",
                     ",", 
                    RowBox[{"Darker", "@", 
                    RowBox[{"Darker", "@", "Brown"}]}]}], "]"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"+", "0.5"}], ",", " ", "Center"}], "}"}]}], 
                  "]"}]}], "}"}]}], ",", "\[IndentingNewLine]", " ", "0.1"}], 
             "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Graphics", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Lighter", "@", "Magenta"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Circle", "[", "]"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"Disk", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", "1", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Pi", "/", "2"}], ",", 
                    RowBox[{
                    RowBox[{"3", "/", "2"}], "*", "Pi"}]}], "}"}]}], "]"}], 
                 ",", "\[IndentingNewLine]", 
                 RowBox[{"Text", "[", 
                  RowBox[{
                   RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<L\>\"", ",", "\"\<Title\>\"", ",", "15", ",", "Bold",
                     ",", 
                    RowBox[{"Darker", "[", "Magenta", "]"}]}], "]"}], ",", 
                   " ", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.5"}], ",", " ", "Center"}], "}"}]}], 
                  "]"}]}], "}"}]}], ",", "\[IndentingNewLine]", " ", "0.1"}], 
             "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Graphics", "[", 
               RowBox[{"{", 
                RowBox[{"Black", ",", 
                 RowBox[{"Thickness", "[", "0.15", "]"}], ",", 
                 RowBox[{"Circle", "[", "]"}]}], "}"}], "]"}], ",", "0.12"}], 
             "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Graphics", "[", 
               RowBox[{"{", 
                RowBox[{"Red", ",", 
                 RowBox[{"Thickness", "[", "0.15", "]"}], ",", 
                 RowBox[{"Circle", "[", "]"}]}], "}"}], "]"}], ",", "0.18"}], 
             "}"}]}], "\[IndentingNewLine]", "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Opacity", "[", "0.2", "]"}], ",", 
          RowBox[{"Circle", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", "1"}], "]"}]}], "}"}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Graphics", "@", 
        RowBox[{"circle", "[", 
         RowBox[{"Circle", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", "1", ",", 
           RowBox[{"{", 
            RowBox[{"0.1", ",", 
             RowBox[{
              RowBox[{"Pi", "/", 
               RowBox[{"(", 
                RowBox[{"2", "+", "n"}], ")"}]}], " ", "-", " ", "0.1"}]}], 
            " ", 
            RowBox[{"(*", " ", 
             RowBox[{"0.1", "=", 
              RowBox[{"our", " ", "cirlce", " ", "radius"}]}], " ", "*)"}], 
            "}"}]}], "]"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{"Show", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"MakePlot", "[", "n", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"StringForm", "[", 
              RowBox[{"\"\<n=``\>\"", ",", "n"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"Black", ",", " ", "20"}], "}"}]}], "]"}], ",", " ", 
           RowBox[{"Offset", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"120", ",", "130"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], "]"}], 
         RowBox[{"(*", 
          RowBox[{",", "\[IndentingNewLine]", 
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{
               RowBox[{"StringForm", "[", 
                RowBox[{"\"\<# Residuen=``\>\"", ",", 
                 RowBox[{
                  RowBox[{"ResidueList", "[", "n", "]"}], "//", "Length"}]}], 
                "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"Black", ",", " ", "20"}], "}"}]}], "]"}], ",", " ", 
             RowBox[{"Offset", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"+", "30"}], ",", 
                 RowBox[{"-", "30"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], "]"}]}], "*)"}], 
         "}"}], "\[IndentingNewLine]", "]"}]}], "]"}], "\[IndentingNewLine]", 
     ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "7", ",", "1"}], "}"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwdxU0oQwEAB/DZl4/lQBPqXbQM0bbDll2oVy5EY7GlFVrt4KPtsCRzm1Y+
M85ibaVt0pKVLWWaJSdJS1qz9vbV80IzcyDk/R1+/VqMFq2Jy+FwCBYuznre
zRRDJsLX/4surz6xomj4xRMSLc/C3rYY52NnlSIhzjCkmEykcYcgmcO3r8wz
9lW+feHf1eAPTg3mRQ3sxGaoDrv8kQYsVenacTgtl+G9uE2Op3UlNbbXPfbi
qMA/0s3eR32MYrrwNInl5LkJO2apED5JnV5gKmY+22XXuB5jeIW+OXSzVzcu
HOFvIlvAtDRL4zl58gUP7Q+XMe8iwvewq7xGIW4KqnrwuZDQ4/n6lAHbuwJT
+MC7ZcIr+sz/iZLNgssOqxWvOUNLeGaAWsZC/9g6vo/WbGOZteTG5laNB9+p
xwNY11xxjHccBLc2x5ASOsfDSk/nhjLPkA++fif+A9OgABU=
  "]],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`n$$], 0, 7, 1}}, Typeset`size$$ = {
    360., {159., 162.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`n$31012$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`n$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`n$$, $CellContext`n$31012$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[
        $CellContext`MakePlot[$CellContext`n$$], 
        Graphics[{
          Text[
           Style[
            StringForm["n=``", $CellContext`n$$], {Black, 20}], 
           Offset[{120, 130}, {0, 0}]]}]], 
      "Specifications" :> {{$CellContext`n$$, 0, 7, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{407., {202., 209.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.6092282629798717`*^9, 3.6094829445248127`*^9, 3.609491943591041*^9, 
   3.609495790148759*^9, 3.609824501783057*^9, {3.609830519141386*^9, 
   3.609830559869052*^9}, 3.609830836388791*^9, {3.609842161974207*^9, 
   3.609842173317561*^9}, 3.609843275211609*^9, 3.6098434659578123`*^9, 
   3.609843875479919*^9, 3.6155360990009537`*^9, 3.61554900630311*^9}]
}, Open  ]],

Cell["\<\
Die folgende Tabelle wurde schon oft geschrieben. Hier wird sie nochmal \
rekapituliert, um einen geschlossenen Ausdruck f\[UDoubleDot]r die Pole zu \
entwickeln.\
\>", "Text",
 CellChangeTimes->{{3.6098273455329657`*^9, 3.6098274071003733`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Join", " ", "@@", " ", 
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{"Blue", ",", " ", "Bold", ",", " ", "12"}], "}"}]}], 
          "]"}], "&"}], " ", "/@", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<n\>\"", ",", " ", "\"\<# unique poles\>\"", ",", " ", 
          "\"\<# poles\>\"", ",", "\"\<Unique Poles\>\"", ",", 
          "\"\<Constructed Poles\>\""}], "}"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "\[IndentingNewLine]", 
          RowBox[{"Length", "@", 
           RowBox[{"Union", "@", 
            RowBox[{"poles", "[", "n", "]"}]}]}], ",", "\[IndentingNewLine]", 
          
          RowBox[{"Length", "@", 
           RowBox[{"poles", "[", "n", "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Union", "@", 
              RowBox[{"poles", "[", "n", "]"}]}], " ", "//", "Arg"}], " ", "//",
             " ", "N"}], " ", "//", " ", "Sort"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"constructedPoles", "[", "n", "]"}], ",", " ", 
               RowBox[{"-", 
                RowBox[{"Conjugate", "@", 
                 RowBox[{"constructedPoles", "[", "n", "]"}]}]}]}], "]"}], 
             " ", "//", " ", "Arg"}], " ", "//", " ", "N"}], " ", "//", " ", 
           "Sort"}]}], "\[IndentingNewLine]", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "0", ",", "7"}], "}"}]}], "]"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Frame", " ", "\[Rule]", " ", "All"}], ",", " ", 
   RowBox[{"Alignment", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"Left", ",", "Left"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6098263698847322`*^9, 3.609826390861271*^9}, {
   3.6098272893831797`*^9, 3.609827341665114*^9}, {3.609830062285803*^9, 
   3.609830115679256*^9}, {3.609830320256852*^9, 3.609830332408399*^9}, {
   3.609830369234125*^9, 3.609830372969674*^9}, {3.609830423257127*^9, 
   3.6098304421455183`*^9}, {3.6098439490157623`*^9, 3.609843990100268*^9}, {
   3.609844034964472*^9, 3.609844039399418*^9}, {3.6098441103327217`*^9, 
   3.609844111670513*^9}, 3.609844166229035*^9, {3.6098442397272587`*^9, 
   3.6098442428948193`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"n\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontSize->12,
      FontWeight->Bold,
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["\<\"# unique poles\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontSize->12,
      FontWeight->Bold,
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["\<\"# poles\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontSize->12,
      FontWeight->Bold,
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["\<\"Unique Poles\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontSize->12,
      FontWeight->Bold,
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["\<\"Constructed Poles\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontSize->12,
      FontWeight->Bold,
      FontColor->RGBColor[0, 0, 1]]},
    {"0", "1", "2", 
     RowBox[{"{", 
      RowBox[{"-", "1.5707963267948966`"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.5707963267948966`"}], ",", 
       RowBox[{"-", "1.5707963267948966`"}]}], "}"}]},
    {"1", "2", "2", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2.0943951023931953`"}], ",", 
       RowBox[{"-", "1.0471975511965976`"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2.0943951023931953`"}], ",", 
       RowBox[{"-", "1.0471975511965976`"}]}], "}"}]},
    {"2", "2", "2", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2.356194490192345`"}], ",", 
       RowBox[{"-", "0.7853981633974483`"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2.356194490192345`"}], ",", 
       RowBox[{"-", "0.7853981633974483`"}]}], "}"}]},
    {"3", "2", "2", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2.5132741228718345`"}], ",", 
       RowBox[{"-", "0.6283185307179586`"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2.5132741228718345`"}], ",", 
       RowBox[{"-", "0.6283185307179586`"}]}], "}"}]},
    {"4", "3", "4", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2.6179938779914944`"}], ",", 
       RowBox[{"-", "1.5707963267948966`"}], ",", 
       RowBox[{"-", "0.5235987755982988`"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2.6179938779914944`"}], ",", 
       RowBox[{"-", "1.5707963267948966`"}], ",", 
       RowBox[{"-", "1.5707963267948966`"}], ",", 
       RowBox[{"-", "0.5235987755982988`"}]}], "}"}]},
    {"5", "4", "4", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2.6927937030769655`"}], ",", 
       RowBox[{"-", "1.7951958020513104`"}], ",", 
       RowBox[{"-", "1.3463968515384828`"}], ",", 
       RowBox[{"-", "0.4487989505128276`"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2.6927937030769655`"}], ",", 
       RowBox[{"-", "1.7951958020513104`"}], ",", 
       RowBox[{"-", "1.3463968515384828`"}], ",", 
       RowBox[{"-", "0.4487989505128276`"}]}], "}"}]},
    {"6", "4", "4", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2.748893571891069`"}], ",", 
       RowBox[{"-", "1.9634954084936207`"}], ",", 
       RowBox[{"-", "1.1780972450961724`"}], ",", 
       RowBox[{"-", "0.39269908169872414`"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2.748893571891069`"}], ",", 
       RowBox[{"-", "1.9634954084936207`"}], ",", 
       RowBox[{"-", "1.1780972450961724`"}], ",", 
       RowBox[{"-", "0.39269908169872414`"}]}], "}"}]},
    {"7", "4", "4", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2.792526803190927`"}], ",", 
       RowBox[{"-", "2.0943951023931953`"}], ",", 
       RowBox[{"-", "1.0471975511965976`"}], ",", 
       RowBox[{"-", "0.3490658503988659`"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2.792526803190927`"}], ",", 
       RowBox[{"-", "2.0943951023931953`"}], ",", 
       RowBox[{"-", "1.0471975511965976`"}], ",", 
       RowBox[{"-", "0.3490658503988659`"}]}], "}"}]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Left}}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.609826373481999*^9, 3.609826391453862*^9}, {
   3.609827290741434*^9, 3.6098273097300386`*^9}, 3.609827341901829*^9, {
   3.609830099350873*^9, 3.609830115982355*^9}, 3.609830339194474*^9, 
   3.609830373766797*^9, {3.6098304280133257`*^9, 3.609830442424417*^9}, {
   3.609843951656086*^9, 3.609843991192089*^9}, 3.609844039714517*^9, 
   3.60984411263548*^9, 3.609844167126178*^9, 3.609844243142604*^9, 
   3.6155361148689013`*^9, 3.615549008993469*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["2. Berechnung des Holographie-Integrals", "Section",
 CellChangeTimes->{{3.609225414216798*^9, 3.6092254187840853`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"IntegralResidueList", "[", "n_", "]"}], " ", ":=", " ", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", " ", "Pi", " ", "I"}], ")"}], " ", "*", " ", 
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], "  ", "*", " ", 
     RowBox[{"Residue", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Re", "@", "#"}], " ", "\[GreaterEqual]", " ", "0"}], ",",
            "hDzPlus", ",", "hDzMinus"}], "]"}], "[", 
         RowBox[{"z", ",", "n"}], "]"}], " ", "*", " ", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", "I"}], " ", "p", " ", "z"}], "]"}]}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"z", ",", "#"}], "}"}]}], "]"}]}], "&"}], " ", "/@", " ", 
   RowBox[{"poles", "[", "n", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6092254301927433`*^9, 3.609225469565383*^9}, {
  3.609228308160513*^9, 3.609228501989505*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"IntegralValue", "[", "n_", "]"}], " ", ":=", " ", 
  RowBox[{"Total", "@", 
   RowBox[{
   "IntegralResidueList", "[", "n", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AValue", "[", 
   RowBox[{"p_", ",", "n_"}], "]"}], " ", ":=", "  ", 
  RowBox[{
   RowBox[{"I", " ", "/", " ", "p"}], " ", "*", " ", 
   RowBox[{"IntegralValue", "[", "n", "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.609228483749609*^9, 3.609228485177711*^9}, {
  3.6092285379233418`*^9, 3.609228593593278*^9}, {3.609228877702898*^9, 
  3.609228878326253*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Join", " ", "@@", " ", 
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{"Blue", ",", " ", "Bold", ",", " ", "12"}], "}"}]}], 
          "]"}], "&"}], " ", "/@", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<n\>\"", ",", " ", "\"\<# poles\>\"", ",", 
          "\"\<Wert f\[UDoubleDot]r A(p)\>\""}], "}"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "\[IndentingNewLine]", 
          RowBox[{"Length", "@", 
           RowBox[{"poles", "[", "n", "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"AValue", "[", 
           RowBox[{"p", ",", "n"}], "]"}], " ", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"AValue", "[", 
            RowBox[{"p", ",", "n"}], "]"}], "//", "ComplexExpand"}]}], 
         "\[IndentingNewLine]", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "0", ",", "7"}], "}"}]}], "]"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Frame", " ", "\[Rule]", " ", "All"}], ",", " ", 
   RowBox[{"Alignment", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"Left", ",", "Left"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6092290939501457`*^9, 3.609229185509*^9}, {
  3.609229885364497*^9, 3.6092298903990393`*^9}, {3.609229940020246*^9, 
  3.609229940188836*^9}, {3.609826346918681*^9, 3.609826347325097*^9}, {
  3.615536125383301*^9, 3.615536132379088*^9}, {3.615536175504635*^9, 
  3.615536178141576*^9}, {3.615548991139958*^9, 3.6155490200235987`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"n\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontSize->12,
      FontWeight->Bold,
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["\<\"# poles\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontSize->12,
      FontWeight->Bold,
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["\<\"Wert f\[UDoubleDot]r A(p)\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontSize->12,
      FontWeight->Bold,
      FontColor->RGBColor[0, 0, 1]], ""},
    {"0", "2", 
     FractionBox[
      RowBox[{"2", " ", "\[ImaginaryI]", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "p"}]], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "p"}], ")"}], " ", "\[Pi]"}], "p"], 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", "p"}]], " ", "\[Pi]"}], "+", 
        FractionBox[
         RowBox[{"2", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", "p"}]], " ", "\[Pi]"}], "p"]}], ")"}]}]},
    {"1", "2", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           FractionBox["2", "3"]}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"-", "1"}], ")"}], 
             RowBox[{"5", "/", "6"}]], " ", "p"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"-", "1"}], ")"}], 
             RowBox[{"1", "/", "6"}]], "+", "p"}], ")"}], " ", "\[Pi]"}], "-", 
         RowBox[{
          FractionBox["2", "3"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"5", "/", "6"}]], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"-", "1"}], ")"}], 
              RowBox[{"1", "/", "6"}]]}], " ", "p"}]], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"-", "1"}], ")"}], 
              RowBox[{"1", "/", "6"}]], " ", "p"}]}], ")"}], " ", "\[Pi]"}]}],
         ")"}]}], "p"], 
     RowBox[{
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            SqrtBox["3"], " ", "p"}], "2"]}]], " ", "\[Pi]", " ", 
        RowBox[{"Cos", "[", 
         FractionBox["p", "2"], "]"}]}], 
       RowBox[{"3", " ", "p"}]], "+", 
      RowBox[{
       FractionBox["4", "3"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           SqrtBox["3"], " ", "p"}], "2"]}]], " ", "\[Pi]", " ", 
       RowBox[{"Sin", "[", 
        FractionBox["p", "2"], "]"}]}], "+", 
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            SqrtBox["3"], " ", "p"}], "2"]}]], " ", "\[Pi]", " ", 
        RowBox[{"Sin", "[", 
         FractionBox["p", "2"], "]"}]}], 
       RowBox[{
        SqrtBox["3"], " ", "p"}]]}]},
    {"2", "2", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], " ", "\[ImaginaryI]", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"-", "1"}], ")"}], 
              RowBox[{"1", "/", "4"}]]}], " ", "p"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"-", "1"}], ")"}], 
             RowBox[{"1", "/", "4"}]], "+", 
            RowBox[{"\[ImaginaryI]", " ", "p"}]}], ")"}], " ", "\[Pi]"}], "+", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"-", "1"}], ")"}], 
             RowBox[{"3", "/", "4"}]], " ", "p"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"-", "1"}], ")"}], 
             RowBox[{"3", "/", "4"}]], "+", 
            RowBox[{"\[ImaginaryI]", " ", "p"}]}], ")"}], " ", "\[Pi]"}]}], 
        ")"}]}], "p"], 
     RowBox[{
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox["p", 
           SqrtBox["2"]]}]], " ", "\[Pi]", " ", 
        RowBox[{"Cos", "[", 
         FractionBox["p", 
          SqrtBox["2"]], "]"}]}], 
       RowBox[{
        SqrtBox["2"], " ", "p"}]], "+", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         FractionBox["p", 
          SqrtBox["2"]]}]], " ", "\[Pi]", " ", 
       RowBox[{"Sin", "[", 
        FractionBox["p", 
         SqrtBox["2"]], "]"}]}], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox["p", 
           SqrtBox["2"]]}]], " ", "\[Pi]", " ", 
        RowBox[{"Sin", "[", 
         FractionBox["p", 
          SqrtBox["2"]], "]"}]}], 
       RowBox[{
        SqrtBox["2"], " ", "p"}]]}]},
    {"3", "2", 
     RowBox[{
      FractionBox["1", "p"], 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           FractionBox["2", "5"]}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"-", "1"}], ")"}], 
             RowBox[{"7", "/", "10"}]], " ", "p"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"-", "1"}], ")"}], 
             RowBox[{"3", "/", "10"}]], "+", "p"}], ")"}], " ", "\[Pi]"}], 
         "-", 
         RowBox[{
          FractionBox["2", "5"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"7", "/", "10"}]], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"-", "1"}], ")"}], 
              RowBox[{"3", "/", "10"}]]}], " ", "p"}]], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"-", "1"}], ")"}], 
              RowBox[{"3", "/", "10"}]], " ", "p"}]}], ")"}], " ", 
          "\[Pi]"}]}], ")"}]}]}], 
     RowBox[{
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            RowBox[{
             FractionBox["5", "8"], "-", 
             FractionBox[
              SqrtBox["5"], "8"]}]]}], " ", "p"}]], " ", "\[Pi]", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          FractionBox["1", "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "-", 
            SqrtBox["5"]}], ")"}], " ", "p"}], "]"}]}], 
       RowBox[{"10", " ", "p"}]], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            RowBox[{
             FractionBox["5", "8"], "-", 
             FractionBox[
              SqrtBox["5"], "8"]}]]}], " ", "p"}]], " ", "\[Pi]", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          FractionBox["1", "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "-", 
            SqrtBox["5"]}], ")"}], " ", "p"}], "]"}]}], 
       RowBox[{"2", " ", 
        SqrtBox["5"], " ", "p"}]], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            RowBox[{
             FractionBox["5", "8"], "-", 
             FractionBox[
              SqrtBox["5"], "8"]}]]}], " ", "p"}]], " ", "\[Pi]", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          FractionBox["1", "4"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SqrtBox["5"]}], ")"}], " ", "p"}], "]"}]}], 
       RowBox[{"10", " ", "p"}]], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            RowBox[{
             FractionBox["5", "8"], "-", 
             FractionBox[
              SqrtBox["5"], "8"]}]]}], " ", "p"}]], " ", "\[Pi]", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          FractionBox["1", "4"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SqrtBox["5"]}], ")"}], " ", "p"}], "]"}]}], 
       RowBox[{"2", " ", 
        SqrtBox["5"], " ", "p"}]], "-", 
      RowBox[{
       FractionBox["2", "5"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          SqrtBox[
           RowBox[{
            FractionBox["5", "8"], "-", 
            FractionBox[
             SqrtBox["5"], "8"]}]]}], " ", "p"}]], " ", "\[Pi]", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         FractionBox["1", "4"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "-", 
           SqrtBox["5"]}], ")"}], " ", "p"}], "]"}]}], "-", 
      FractionBox[
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{
          FractionBox["5", "8"], "-", 
          FractionBox[
           SqrtBox["5"], "8"]}]], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            RowBox[{
             FractionBox["5", "8"], "-", 
             FractionBox[
              SqrtBox["5"], "8"]}]]}], " ", "p"}]], " ", "\[Pi]", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          FractionBox["1", "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "-", 
            SqrtBox["5"]}], ")"}], " ", "p"}], "]"}]}], 
       RowBox[{"5", " ", "p"}]], "+", 
      RowBox[{
       FractionBox["2", "5"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          SqrtBox[
           RowBox[{
            FractionBox["5", "8"], "-", 
            FractionBox[
             SqrtBox["5"], "8"]}]]}], " ", "p"}]], " ", "\[Pi]", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         FractionBox["1", "4"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SqrtBox["5"]}], ")"}], " ", "p"}], "]"}]}], "+", 
      FractionBox[
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{
          FractionBox["5", "8"], "-", 
          FractionBox[
           SqrtBox["5"], "8"]}]], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            RowBox[{
             FractionBox["5", "8"], "-", 
             FractionBox[
              SqrtBox["5"], "8"]}]]}], " ", "p"}]], " ", "\[Pi]", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          FractionBox["1", "4"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SqrtBox["5"]}], ")"}], " ", "p"}], "]"}]}], 
       RowBox[{"5", " ", "p"}]], "+", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          FractionBox["2", "5"], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", 
             SqrtBox[
              RowBox[{
               FractionBox["5", "8"], "-", 
               FractionBox[
                SqrtBox["5"], "8"]}]]}], " ", "p"}]], " ", "\[Pi]", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            FractionBox["1", "4"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "-", 
              SqrtBox["5"]}], ")"}], " ", "p"}], "]"}]}], "+", 
         FractionBox[
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{
             FractionBox["5", "8"], "-", 
             FractionBox[
              SqrtBox["5"], "8"]}]], " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", 
              SqrtBox[
               RowBox[{
                FractionBox["5", "8"], "-", 
                FractionBox[
                 SqrtBox["5"], "8"]}]]}], " ", "p"}]], " ", "\[Pi]", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             FractionBox["1", "4"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "-", 
               SqrtBox["5"]}], ")"}], " ", "p"}], "]"}]}], 
          RowBox[{"5", " ", "p"}]], "-", 
         RowBox[{
          FractionBox["2", "5"], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", 
             SqrtBox[
              RowBox[{
               FractionBox["5", "8"], "-", 
               FractionBox[
                SqrtBox["5"], "8"]}]]}], " ", "p"}]], " ", "\[Pi]", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            FractionBox["1", "4"], " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SqrtBox["5"]}], ")"}], " ", "p"}], "]"}]}], "-", 
         FractionBox[
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{
             FractionBox["5", "8"], "-", 
             FractionBox[
              SqrtBox["5"], "8"]}]], " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", 
              SqrtBox[
               RowBox[{
                FractionBox["5", "8"], "-", 
                FractionBox[
                 SqrtBox["5"], "8"]}]]}], " ", "p"}]], " ", "\[Pi]", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             FractionBox["1", "4"], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SqrtBox["5"]}], ")"}], " ", "p"}], "]"}]}], 
          RowBox[{"5", " ", "p"}]], "+", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", 
              SqrtBox[
               RowBox[{
                FractionBox["5", "8"], "-", 
                FractionBox[
                 SqrtBox["5"], "8"]}]]}], " ", "p"}]], " ", "\[Pi]", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             FractionBox["1", "4"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "-", 
               SqrtBox["5"]}], ")"}], " ", "p"}], "]"}]}], 
          RowBox[{"10", " ", "p"}]], "+", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", 
              SqrtBox[
               RowBox[{
                FractionBox["5", "8"], "-", 
                FractionBox[
                 SqrtBox["5"], "8"]}]]}], " ", "p"}]], " ", "\[Pi]", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             FractionBox["1", "4"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "-", 
               SqrtBox["5"]}], ")"}], " ", "p"}], "]"}]}], 
          RowBox[{"2", " ", 
           SqrtBox["5"], " ", "p"}]], "+", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", 
              SqrtBox[
               RowBox[{
                FractionBox["5", "8"], "-", 
                FractionBox[
                 SqrtBox["5"], "8"]}]]}], " ", "p"}]], " ", "\[Pi]", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             FractionBox["1", "4"], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SqrtBox["5"]}], ")"}], " ", "p"}], "]"}]}], 
          RowBox[{"10", " ", "p"}]], "+", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", 
              SqrtBox[
               RowBox[{
                FractionBox["5", "8"], "-", 
                FractionBox[
                 SqrtBox["5"], "8"]}]]}], " ", "p"}]], " ", "\[Pi]", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             FractionBox["1", "4"], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SqrtBox["5"]}], ")"}], " ", "p"}], "]"}]}], 
          RowBox[{"2", " ", 
           SqrtBox["5"], " ", "p"}]]}], ")"}]}]}]},
    {"4", "4", 
     RowBox[{
      FractionBox["1", "p"], 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          FractionBox["2", "3"], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", "p"}]], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "p"}], ")"}], " ", "\[Pi]"}], "+", 
         RowBox[{
          FractionBox["1", "3"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"5", "/", "6"}]], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"-", "1"}], ")"}], 
             RowBox[{"2", "/", "3"}]], " ", "p"}]], " ", 
          RowBox[{"(", 
           RowBox[{"\[ImaginaryI]", "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"-", "1"}], ")"}], 
              RowBox[{"1", "/", "6"}]], " ", "p"}]}], ")"}], " ", "\[Pi]"}], 
         "-", 
         RowBox[{
          FractionBox["1", "3"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"2", "/", "3"}]], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"-", "1"}], ")"}], 
              RowBox[{"1", "/", "3"}]]}], " ", "p"}]], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"-", "1"}], ")"}], 
              RowBox[{"1", "/", "3"}]], " ", "p"}]}], ")"}], " ", "\[Pi]"}]}],
         ")"}]}]}], 
     RowBox[{
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{"2", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"-", "p"}]], " ", "\[Pi]"}], "3"], "+", 
         FractionBox[
          RowBox[{"2", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"-", "p"}]], " ", "\[Pi]"}], 
          RowBox[{"3", " ", "p"}]]}], ")"}]}], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "p"}], "/", "2"}]], " ", "\[Pi]", " ", 
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{
           SqrtBox["3"], " ", "p"}], "2"], "]"}]}], 
       RowBox[{
        SqrtBox["3"], " ", "p"}]], "+", 
      RowBox[{
       FractionBox["2", "3"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "p"}], "/", "2"}]], " ", "\[Pi]", " ", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{
          SqrtBox["3"], " ", "p"}], "2"], "]"}]}], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "p"}], "/", "2"}]], " ", "\[Pi]", " ", 
        RowBox[{"Sin", "[", 
         FractionBox[
          RowBox[{
           SqrtBox["3"], " ", "p"}], "2"], "]"}]}], 
       RowBox[{"3", " ", "p"}]]}]},
    {"5", "4", 
     RowBox[{
      FractionBox["1", "p"], 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           FractionBox["2", "7"]}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"-", "1"}], ")"}], 
             RowBox[{"13", "/", "14"}]], " ", "p"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"-", "1"}], ")"}], 
             RowBox[{"1", "/", "14"}]], "+", "p"}], ")"}], " ", "\[Pi]"}], 
         "-", 
         RowBox[{
          FractionBox["2", "7"], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"-", "1"}], ")"}], 
             RowBox[{"9", "/", "14"}]], " ", "p"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"-", "1"}], ")"}], 
             RowBox[{"5", "/", "14"}]], "+", "p"}], ")"}], " ", "\[Pi]"}], 
         "-", 
         RowBox[{
          FractionBox["2", "7"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"13", "/", "14"}]], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"-", "1"}], ")"}], 
              RowBox[{"1", "/", "14"}]]}], " ", "p"}]], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"-", "1"}], ")"}], 
              RowBox[{"1", "/", "14"}]], " ", "p"}]}], ")"}], " ", "\[Pi]"}], 
         "-", 
         RowBox[{
          FractionBox["2", "7"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"9", "/", "14"}]], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"-", "1"}], ")"}], 
              RowBox[{"5", "/", "14"}]]}], " ", "p"}]], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"-", "1"}], ")"}], 
              RowBox[{"5", "/", "14"}]], " ", "p"}]}], ")"}], " ", 
          "\[Pi]"}]}], ")"}]}]}], 
     RowBox[{
      FractionBox[
       RowBox[{"4", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "p"}], " ", 
          RowBox[{"Sin", "[", 
           FractionBox["\[Pi]", "7"], "]"}]}]], " ", "\[Pi]", " ", 
        RowBox[{"Cos", "[", 
         FractionBox["\[Pi]", "7"], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"p", " ", 
          RowBox[{"Cos", "[", 
           FractionBox["\[Pi]", "7"], "]"}]}], "]"}]}], 
       RowBox[{"7", " ", "p"}]], "+", 
      FractionBox[
       RowBox[{"4", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "p"}], " ", 
          RowBox[{"Cos", "[", 
           FractionBox["\[Pi]", "14"], "]"}]}]], " ", "\[Pi]", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"p", " ", 
          RowBox[{"Sin", "[", 
           FractionBox["\[Pi]", "14"], "]"}]}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         FractionBox["\[Pi]", "14"], "]"}]}], 
       RowBox[{"7", " ", "p"}]], "+", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           FractionBox["2", "7"]}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "p"}], " ", 
            RowBox[{"Sin", "[", 
             FractionBox["\[Pi]", "7"], "]"}]}]], " ", "\[Pi]", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"p", " ", 
            RowBox[{"Cos", "[", 
             FractionBox["\[Pi]", "7"], "]"}]}], "]"}]}], "+", 
         RowBox[{
          FractionBox["2", "7"], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "p"}], " ", 
            RowBox[{"Sin", "[", 
             FractionBox["\[Pi]", "7"], "]"}]}]], " ", "\[Pi]", " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", 
            FractionBox["\[Pi]", "7"], "]"}], "2"], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"p", " ", 
            RowBox[{"Cos", "[", 
             FractionBox["\[Pi]", "7"], "]"}]}], "]"}]}], "-", 
         RowBox[{
          FractionBox["2", "7"], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "p"}], " ", 
            RowBox[{"Cos", "[", 
             FractionBox["\[Pi]", "14"], "]"}]}]], " ", "\[Pi]", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"p", " ", 
            RowBox[{"Sin", "[", 
             FractionBox["\[Pi]", "14"], "]"}]}], "]"}]}], "+", 
         RowBox[{
          FractionBox["2", "7"], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "p"}], " ", 
            RowBox[{"Cos", "[", 
             FractionBox["\[Pi]", "14"], "]"}]}]], " ", "\[Pi]", " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", 
            FractionBox["\[Pi]", "14"], "]"}], "2"], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"p", " ", 
            RowBox[{"Sin", "[", 
             FractionBox["\[Pi]", "14"], "]"}]}], "]"}]}], "+", 
         RowBox[{
          FractionBox["2", "7"], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "p"}], " ", 
            RowBox[{"Cos", "[", 
             FractionBox["\[Pi]", "14"], "]"}]}]], " ", "\[Pi]", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"p", " ", 
            RowBox[{"Sin", "[", 
             FractionBox["\[Pi]", "14"], "]"}]}], "]"}], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", 
            FractionBox["\[Pi]", "14"], "]"}], "2"]}], "+", 
         RowBox[{
          FractionBox["2", "7"], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "p"}], " ", 
            RowBox[{"Sin", "[", 
             FractionBox["\[Pi]", "7"], "]"}]}]], " ", "\[Pi]", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"p", " ", 
            RowBox[{"Cos", "[", 
             FractionBox["\[Pi]", "7"], "]"}]}], "]"}], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", 
            FractionBox["\[Pi]", "7"], "]"}], "2"]}]}], ")"}]}], "+", 
      RowBox[{
       FractionBox["2", "7"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "p"}], " ", 
         RowBox[{"Sin", "[", 
          FractionBox["\[Pi]", "7"], "]"}]}]], " ", "\[Pi]", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"p", " ", 
         RowBox[{"Cos", "[", 
          FractionBox["\[Pi]", "7"], "]"}]}], "]"}]}], "+", 
      RowBox[{
       FractionBox["2", "7"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "p"}], " ", 
         RowBox[{"Sin", "[", 
          FractionBox["\[Pi]", "7"], "]"}]}]], " ", "\[Pi]", " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         FractionBox["\[Pi]", "7"], "]"}], "2"], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"p", " ", 
         RowBox[{"Cos", "[", 
          FractionBox["\[Pi]", "7"], "]"}]}], "]"}]}], "+", 
      FractionBox[
       RowBox[{"4", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "p"}], " ", 
          RowBox[{"Sin", "[", 
           FractionBox["\[Pi]", "7"], "]"}]}]], " ", "\[Pi]", " ", 
        RowBox[{"Sin", "[", 
         FractionBox["\[Pi]", "7"], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"p", " ", 
          RowBox[{"Cos", "[", 
           FractionBox["\[Pi]", "7"], "]"}]}], "]"}]}], 
       RowBox[{"7", " ", "p"}]], "+", 
      RowBox[{
       FractionBox["2", "7"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "p"}], " ", 
         RowBox[{"Sin", "[", 
          FractionBox["\[Pi]", "7"], "]"}]}]], " ", "\[Pi]", " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", 
         FractionBox["\[Pi]", "7"], "]"}], "2"], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"p", " ", 
         RowBox[{"Cos", "[", 
          FractionBox["\[Pi]", "7"], "]"}]}], "]"}]}], "+", 
      RowBox[{
       FractionBox["2", "7"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "p"}], " ", 
         RowBox[{"Cos", "[", 
          FractionBox["\[Pi]", "14"], "]"}]}]], " ", "\[Pi]", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"p", " ", 
         RowBox[{"Sin", "[", 
          FractionBox["\[Pi]", "14"], "]"}]}], "]"}]}], "+", 
      FractionBox[
       RowBox[{"4", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "p"}], " ", 
          RowBox[{"Cos", "[", 
           FractionBox["\[Pi]", "14"], "]"}]}]], " ", "\[Pi]", " ", 
        RowBox[{"Cos", "[", 
         FractionBox["\[Pi]", "14"], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"p", " ", 
          RowBox[{"Sin", "[", 
           FractionBox["\[Pi]", "14"], "]"}]}], "]"}]}], 
       RowBox[{"7", " ", "p"}]], "+", 
      RowBox[{
       FractionBox["2", "7"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "p"}], " ", 
         RowBox[{"Cos", "[", 
          FractionBox["\[Pi]", "14"], "]"}]}]], " ", "\[Pi]", " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         FractionBox["\[Pi]", "14"], "]"}], "2"], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"p", " ", 
         RowBox[{"Sin", "[", 
          FractionBox["\[Pi]", "14"], "]"}]}], "]"}]}], "+", 
      RowBox[{
       FractionBox["2", "7"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "p"}], " ", 
         RowBox[{"Cos", "[", 
          FractionBox["\[Pi]", "14"], "]"}]}]], " ", "\[Pi]", " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", 
         FractionBox["\[Pi]", "14"], "]"}], "2"], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"p", " ", 
         RowBox[{"Sin", "[", 
          FractionBox["\[Pi]", "14"], "]"}]}], "]"}]}]}]},
    {"6", "4", 
     RowBox[{
      FractionBox["1", "p"], 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "4"]}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"-", "1"}], ")"}], 
             RowBox[{"7", "/", "8"}]], " ", "p"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"-", "1"}], ")"}], 
             RowBox[{"1", "/", "8"}]], "+", "p"}], ")"}], " ", "\[Pi]"}], "-", 
         RowBox[{
          FractionBox["1", "4"], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"-", "1"}], ")"}], 
             RowBox[{"5", "/", "8"}]], " ", "p"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"-", "1"}], ")"}], 
             RowBox[{"3", "/", "8"}]], "+", "p"}], ")"}], " ", "\[Pi]"}], "-", 
         RowBox[{
          FractionBox["1", "4"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"7", "/", "8"}]], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"-", "1"}], ")"}], 
              RowBox[{"1", "/", "8"}]]}], " ", "p"}]], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"-", "1"}], ")"}], 
              RowBox[{"1", "/", "8"}]], " ", "p"}]}], ")"}], " ", "\[Pi]"}], 
         "-", 
         RowBox[{
          FractionBox["1", "4"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"5", "/", "8"}]], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"-", "1"}], ")"}], 
              RowBox[{"3", "/", "8"}]]}], " ", "p"}]], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"-", "1"}], ")"}], 
              RowBox[{"3", "/", "8"}]], " ", "p"}]}], ")"}], " ", "\[Pi]"}]}],
         ")"}]}]}], 
     RowBox[{
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "p"}], " ", 
          RowBox[{"Sin", "[", 
           FractionBox["\[Pi]", "8"], "]"}]}]], " ", "\[Pi]", " ", 
        RowBox[{"Cos", "[", 
         FractionBox["\[Pi]", "8"], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"p", " ", 
          RowBox[{"Cos", "[", 
           FractionBox["\[Pi]", "8"], "]"}]}], "]"}]}], 
       RowBox[{"2", " ", "p"}]], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "p"}], " ", 
          RowBox[{"Cos", "[", 
           FractionBox["\[Pi]", "8"], "]"}]}]], " ", "\[Pi]", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"p", " ", 
          RowBox[{"Sin", "[", 
           FractionBox["\[Pi]", "8"], "]"}]}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         FractionBox["\[Pi]", "8"], "]"}]}], 
       RowBox[{"2", " ", "p"}]], "+", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "4"]}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "p"}], " ", 
            RowBox[{"Sin", "[", 
             FractionBox["\[Pi]", "8"], "]"}]}]], " ", "\[Pi]", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"p", " ", 
            RowBox[{"Cos", "[", 
             FractionBox["\[Pi]", "8"], "]"}]}], "]"}]}], "+", 
         RowBox[{
          FractionBox["1", "4"], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "p"}], " ", 
            RowBox[{"Sin", "[", 
             FractionBox["\[Pi]", "8"], "]"}]}]], " ", "\[Pi]", " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", 
            FractionBox["\[Pi]", "8"], "]"}], "2"], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"p", " ", 
            RowBox[{"Cos", "[", 
             FractionBox["\[Pi]", "8"], "]"}]}], "]"}]}], "-", 
         RowBox[{
          FractionBox["1", "4"], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "p"}], " ", 
            RowBox[{"Cos", "[", 
             FractionBox["\[Pi]", "8"], "]"}]}]], " ", "\[Pi]", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"p", " ", 
            RowBox[{"Sin", "[", 
             FractionBox["\[Pi]", "8"], "]"}]}], "]"}]}], "+", 
         RowBox[{
          FractionBox["1", "4"], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "p"}], " ", 
            RowBox[{"Cos", "[", 
             FractionBox["\[Pi]", "8"], "]"}]}]], " ", "\[Pi]", " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", 
            FractionBox["\[Pi]", "8"], "]"}], "2"], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"p", " ", 
            RowBox[{"Sin", "[", 
             FractionBox["\[Pi]", "8"], "]"}]}], "]"}]}], "+", 
         RowBox[{
          FractionBox["1", "4"], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "p"}], " ", 
            RowBox[{"Sin", "[", 
             FractionBox["\[Pi]", "8"], "]"}]}]], " ", "\[Pi]", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"p", " ", 
            RowBox[{"Cos", "[", 
             FractionBox["\[Pi]", "8"], "]"}]}], "]"}], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", 
            FractionBox["\[Pi]", "8"], "]"}], "2"]}], "+", 
         RowBox[{
          FractionBox["1", "4"], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "p"}], " ", 
            RowBox[{"Cos", "[", 
             FractionBox["\[Pi]", "8"], "]"}]}]], " ", "\[Pi]", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"p", " ", 
            RowBox[{"Sin", "[", 
             FractionBox["\[Pi]", "8"], "]"}]}], "]"}], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", 
            FractionBox["\[Pi]", "8"], "]"}], "2"]}]}], ")"}]}], "+", 
      RowBox[{
       FractionBox["1", "4"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "p"}], " ", 
         RowBox[{"Sin", "[", 
          FractionBox["\[Pi]", "8"], "]"}]}]], " ", "\[Pi]", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"p", " ", 
         RowBox[{"Cos", "[", 
          FractionBox["\[Pi]", "8"], "]"}]}], "]"}]}], "+", 
      RowBox[{
       FractionBox["1", "4"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "p"}], " ", 
         RowBox[{"Sin", "[", 
          FractionBox["\[Pi]", "8"], "]"}]}]], " ", "\[Pi]", " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         FractionBox["\[Pi]", "8"], "]"}], "2"], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"p", " ", 
         RowBox[{"Cos", "[", 
          FractionBox["\[Pi]", "8"], "]"}]}], "]"}]}], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "p"}], " ", 
          RowBox[{"Sin", "[", 
           FractionBox["\[Pi]", "8"], "]"}]}]], " ", "\[Pi]", " ", 
        RowBox[{"Sin", "[", 
         FractionBox["\[Pi]", "8"], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"p", " ", 
          RowBox[{"Cos", "[", 
           FractionBox["\[Pi]", "8"], "]"}]}], "]"}]}], 
       RowBox[{"2", " ", "p"}]], "+", 
      RowBox[{
       FractionBox["1", "4"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "p"}], " ", 
         RowBox[{"Sin", "[", 
          FractionBox["\[Pi]", "8"], "]"}]}]], " ", "\[Pi]", " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", 
         FractionBox["\[Pi]", "8"], "]"}], "2"], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"p", " ", 
         RowBox[{"Cos", "[", 
          FractionBox["\[Pi]", "8"], "]"}]}], "]"}]}], "+", 
      RowBox[{
       FractionBox["1", "4"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "p"}], " ", 
         RowBox[{"Cos", "[", 
          FractionBox["\[Pi]", "8"], "]"}]}]], " ", "\[Pi]", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"p", " ", 
         RowBox[{"Sin", "[", 
          FractionBox["\[Pi]", "8"], "]"}]}], "]"}]}], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "p"}], " ", 
          RowBox[{"Cos", "[", 
           FractionBox["\[Pi]", "8"], "]"}]}]], " ", "\[Pi]", " ", 
        RowBox[{"Cos", "[", 
         FractionBox["\[Pi]", "8"], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"p", " ", 
          RowBox[{"Sin", "[", 
           FractionBox["\[Pi]", "8"], "]"}]}], "]"}]}], 
       RowBox[{"2", " ", "p"}]], "+", 
      RowBox[{
       FractionBox["1", "4"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "p"}], " ", 
         RowBox[{"Cos", "[", 
          FractionBox["\[Pi]", "8"], "]"}]}]], " ", "\[Pi]", " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         FractionBox["\[Pi]", "8"], "]"}], "2"], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"p", " ", 
         RowBox[{"Sin", "[", 
          FractionBox["\[Pi]", "8"], "]"}]}], "]"}]}], "+", 
      RowBox[{
       FractionBox["1", "4"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "p"}], " ", 
         RowBox[{"Cos", "[", 
          FractionBox["\[Pi]", "8"], "]"}]}]], " ", "\[Pi]", " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", 
         FractionBox["\[Pi]", "8"], "]"}], "2"], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"p", " ", 
         RowBox[{"Sin", "[", 
          FractionBox["\[Pi]", "8"], "]"}]}], "]"}]}]}]},
    {"7", "4", 
     RowBox[{
      FractionBox["1", "p"], 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           FractionBox["2", "9"]}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"-", "1"}], ")"}], 
             RowBox[{"5", "/", "6"}]], " ", "p"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"-", "1"}], ")"}], 
             RowBox[{"1", "/", "6"}]], "+", "p"}], ")"}], " ", "\[Pi]"}], "-", 
         RowBox[{
          FractionBox["2", "9"], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"-", "1"}], ")"}], 
             RowBox[{"11", "/", "18"}]], " ", "p"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"-", "1"}], ")"}], 
             RowBox[{"7", "/", "18"}]], "+", "p"}], ")"}], " ", "\[Pi]"}], 
         "-", 
         RowBox[{
          FractionBox["2", "9"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"5", "/", "6"}]], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"-", "1"}], ")"}], 
              RowBox[{"1", "/", "6"}]]}], " ", "p"}]], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"-", "1"}], ")"}], 
              RowBox[{"1", "/", "6"}]], " ", "p"}]}], ")"}], " ", "\[Pi]"}], 
         "-", 
         RowBox[{
          FractionBox["2", "9"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"11", "/", "18"}]], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"-", "1"}], ")"}], 
              RowBox[{"7", "/", "18"}]]}], " ", "p"}]], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"-", "1"}], ")"}], 
              RowBox[{"7", "/", "18"}]], " ", "p"}]}], ")"}], " ", 
          "\[Pi]"}]}], ")"}]}]}], 
     RowBox[{
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            SqrtBox["3"], " ", "p"}], "2"]}]], " ", "\[Pi]", " ", 
        RowBox[{"Cos", "[", 
         FractionBox["p", "2"], "]"}]}], 
       RowBox[{"9", " ", "p"}]], "+", 
      FractionBox[
       RowBox[{"4", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "p"}], " ", 
          RowBox[{"Sin", "[", 
           FractionBox["\[Pi]", "9"], "]"}]}]], " ", "\[Pi]", " ", 
        RowBox[{"Cos", "[", 
         FractionBox["\[Pi]", "9"], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"p", " ", 
          RowBox[{"Cos", "[", 
           FractionBox["\[Pi]", "9"], "]"}]}], "]"}]}], 
       RowBox[{"9", " ", "p"}]], "+", 
      RowBox[{
       FractionBox["4", "9"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           SqrtBox["3"], " ", "p"}], "2"]}]], " ", "\[Pi]", " ", 
       RowBox[{"Sin", "[", 
        FractionBox["p", "2"], "]"}]}], "+", 
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            SqrtBox["3"], " ", "p"}], "2"]}]], " ", "\[Pi]", " ", 
        RowBox[{"Sin", "[", 
         FractionBox["p", "2"], "]"}]}], 
       RowBox[{"3", " ", 
        SqrtBox["3"], " ", "p"}]], "+", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           FractionBox["2", "9"]}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "p"}], " ", 
            RowBox[{"Sin", "[", 
             FractionBox["\[Pi]", "9"], "]"}]}]], " ", "\[Pi]", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"p", " ", 
            RowBox[{"Cos", "[", 
             FractionBox["\[Pi]", "9"], "]"}]}], "]"}]}], "+", 
         RowBox[{
          FractionBox["2", "9"], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "p"}], " ", 
            RowBox[{"Sin", "[", 
             FractionBox["\[Pi]", "9"], "]"}]}]], " ", "\[Pi]", " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", 
            FractionBox["\[Pi]", "9"], "]"}], "2"], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"p", " ", 
            RowBox[{"Cos", "[", 
             FractionBox["\[Pi]", "9"], "]"}]}], "]"}]}], "+", 
         RowBox[{
          FractionBox["2", "9"], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "p"}], " ", 
            RowBox[{"Sin", "[", 
             FractionBox["\[Pi]", "9"], "]"}]}]], " ", "\[Pi]", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"p", " ", 
            RowBox[{"Cos", "[", 
             FractionBox["\[Pi]", "9"], "]"}]}], "]"}], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", 
            FractionBox["\[Pi]", "9"], "]"}], "2"]}]}], ")"}]}], "+", 
      RowBox[{
       FractionBox["2", "9"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "p"}], " ", 
         RowBox[{"Sin", "[", 
          FractionBox["\[Pi]", "9"], "]"}]}]], " ", "\[Pi]", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"p", " ", 
         RowBox[{"Cos", "[", 
          FractionBox["\[Pi]", "9"], "]"}]}], "]"}]}], "+", 
      RowBox[{
       FractionBox["2", "9"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "p"}], " ", 
         RowBox[{"Sin", "[", 
          FractionBox["\[Pi]", "9"], "]"}]}]], " ", "\[Pi]", " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         FractionBox["\[Pi]", "9"], "]"}], "2"], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"p", " ", 
         RowBox[{"Cos", "[", 
          FractionBox["\[Pi]", "9"], "]"}]}], "]"}]}], "+", 
      FractionBox[
       RowBox[{"4", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "p"}], " ", 
          RowBox[{"Sin", "[", 
           FractionBox["\[Pi]", "9"], "]"}]}]], " ", "\[Pi]", " ", 
        RowBox[{"Sin", "[", 
         FractionBox["\[Pi]", "9"], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"p", " ", 
          RowBox[{"Cos", "[", 
           FractionBox["\[Pi]", "9"], "]"}]}], "]"}]}], 
       RowBox[{"9", " ", "p"}]], "+", 
      RowBox[{
       FractionBox["2", "9"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "p"}], " ", 
         RowBox[{"Sin", "[", 
          FractionBox["\[Pi]", "9"], "]"}]}]], " ", "\[Pi]", " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", 
         FractionBox["\[Pi]", "9"], "]"}], "2"], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"p", " ", 
         RowBox[{"Cos", "[", 
          FractionBox["\[Pi]", "9"], "]"}]}], "]"}]}]}]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Left}}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.615548994104649*^9, 3.615549020959976*^9}}]
}, Open  ]],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         StyleBox["\"\<n\>\"",
          StripOnInput->False,
          LineColor->RGBColor[0, 0, 1],
          FrontFaceColor->RGBColor[0, 0, 1],
          GraphicsColor->RGBColor[0, 0, 1],
          FontSize->12,
          FontWeight->Bold,
          FontColor->RGBColor[0, 0, 1],
          $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
         StyleBox["\"\<# poles\>\"",
          StripOnInput->False,
          LineColor->RGBColor[0, 0, 1],
          FrontFaceColor->RGBColor[0, 0, 1],
          GraphicsColor->RGBColor[0, 0, 1],
          FontSize->12,
          FontWeight->Bold,
          FontColor->RGBColor[0, 0, 1],
          $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
         StyleBox["\"\<Wert f\[UDoubleDot]r A(p)\>\"",
          StripOnInput->False,
          LineColor->RGBColor[0, 0, 1],
          FrontFaceColor->RGBColor[0, 0, 1],
          GraphicsColor->RGBColor[0, 0, 1],
          FontSize->12,
          FontWeight->Bold,
          FontColor->RGBColor[0, 0, 1],
          $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], "Null"},
        {"0", "2", 
         FractionBox[
          RowBox[{"2", " ", "\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"p", "+", "1"}], ")"}], " ", "\[Pi]"}], 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", "p"], " ", "p"}]], 
         FractionBox[
          RowBox[{"2", " ", "\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"p", "+", "1"}], ")"}], " ", "\[Pi]"}], 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", "p"], " ", "p"}]]},
        {"1", "2", 
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              FractionBox[
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"-", "1"}], ")"}], 
                 RowBox[{"5", "/", "6"}]], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RadicalBox[
                    RowBox[{"-", "1"}], "6"], " ", "p"}], "+", "1"}], ")"}], 
                " ", "\[Pi]"}], 
               RowBox[{"3", " ", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{
                  RadicalBox[
                   RowBox[{"-", "1"}], "6"], " ", "p"}]]}]]}], "-", 
             RowBox[{
              FractionBox["2", "3"], " ", 
              RowBox[{"(", 
               RowBox[{"p", "+", 
                RadicalBox[
                 RowBox[{"-", "1"}], "6"]}], ")"}], " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"-", "1"}], ")"}], 
                 RowBox[{"5", "/", "6"}]], " ", "p"}]], " ", "\[Pi]"}]}], 
            ")"}]}], "p"], 
         FractionBox[
          RowBox[{"2", " ", "\[Pi]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"cos", "(", 
              FractionBox["p", "2"], ")"}], "+", 
             RowBox[{
              RowBox[{"sin", "(", 
               FractionBox["p", "2"], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "p"}], "+", 
                SqrtBox["3"]}], ")"}]}]}], ")"}]}], 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            FractionBox[
             RowBox[{
              SqrtBox["3"], " ", "p"}], "2"]], " ", 
           RowBox[{"(", 
            RowBox[{"3", " ", "p"}], ")"}]}]]},
        {"2", "2", 
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"-", "1"}], ")"}], 
                 RowBox[{"3", "/", "4"}]], " ", "p"}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[ImaginaryI]", " ", "p"}], "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"-", "1"}], ")"}], 
                 RowBox[{"3", "/", "4"}]]}], ")"}], " ", "\[Pi]"}], "-", 
             FractionBox[
              RowBox[{"\[ImaginaryI]", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[ImaginaryI]", " ", "p"}], "+", 
                 RadicalBox[
                  RowBox[{"-", "1"}], "4"]}], ")"}], " ", "\[Pi]"}], 
              RowBox[{"2", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 RadicalBox[
                  RowBox[{"-", "1"}], "4"], " ", "p"}]]}]]}], ")"}]}], "p"], 
         FractionBox[
          RowBox[{"\[Pi]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"cos", "(", 
               FractionBox["p", 
                SqrtBox["2"]], ")"}], " ", 
              SqrtBox["2"]}], "+", 
             RowBox[{
              RowBox[{"sin", "(", 
               FractionBox["p", 
                SqrtBox["2"]], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "p"}], "+", 
                SqrtBox["2"]}], ")"}]}]}], ")"}]}], 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            FractionBox["p", 
             SqrtBox["2"]]], " ", 
           RowBox[{"(", 
            RowBox[{"2", " ", "p"}], ")"}]}]]},
        {"3", "2", 
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              FractionBox[
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"-", "1"}], ")"}], 
                 RowBox[{"7", "/", "10"}]], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], 
                    RowBox[{"3", "/", "10"}]], " ", "p"}], "+", "1"}], ")"}], 
                " ", "\[Pi]"}], 
               RowBox[{"5", " ", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], 
                   RowBox[{"3", "/", "10"}]], " ", "p"}]]}]]}], "-", 
             RowBox[{
              FractionBox["2", "5"], " ", 
              RowBox[{"(", 
               RowBox[{"p", "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"-", "1"}], ")"}], 
                 RowBox[{"3", "/", "10"}]]}], ")"}], " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"-", "1"}], ")"}], 
                 RowBox[{"7", "/", "10"}]], " ", "p"}]], " ", "\[Pi]"}]}], 
            ")"}]}], "p"], 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"p", " ", 
             RowBox[{"Root", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"16", " ", 
                  SuperscriptBox["#1", "4"]}], "-", 
                 RowBox[{"20", " ", 
                  SuperscriptBox["#1", "2"]}], "+", "5"}], "&"}], ",", "2"}], 
              "]"}]}]], " ", "\[Pi]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"cos", "(", 
               RowBox[{
                FractionBox["1", "4"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SqrtBox["5"], "+", "1"}], ")"}], " ", "p"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                SqrtBox["5"], "+", "1"}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"sin", "(", 
               RowBox[{
                FractionBox["1", "4"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SqrtBox["5"], "+", "1"}], ")"}], " ", "p"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"4", " ", "p"}], "+", 
                SqrtBox[
                 RowBox[{"10", "-", 
                  RowBox[{"2", " ", 
                   SqrtBox["5"]}]}]]}], ")"}]}]}], ")"}]}], 
          RowBox[{"5", " ", "p"}]]},
        {"4", "4", 
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{"2", " ", "\[Pi]", " ", 
               RowBox[{"(", 
                RowBox[{"p", "+", "1"}], ")"}]}], 
              RowBox[{"3", " ", 
               SuperscriptBox["\[ExponentialE]", "p"]}]], "-", 
             FractionBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"-", "1"}], ")"}], 
                RowBox[{"2", "/", "3"}]], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RadicalBox[
                   RowBox[{"-", "1"}], "3"], " ", "p"}], "+", "1"}], ")"}], 
               " ", "\[Pi]"}], 
              RowBox[{"3", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 RadicalBox[
                  RowBox[{"-", "1"}], "3"], " ", "p"}]]}]], "+", 
             RowBox[{
              FractionBox["1", "3"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"-", "1"}], ")"}], 
               RowBox[{"5", "/", "6"}]], " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"-", "1"}], ")"}], 
                 RowBox[{"2", "/", "3"}]], " ", "p"}]], " ", 
              RowBox[{"(", 
               RowBox[{"\[ImaginaryI]", "+", 
                RowBox[{
                 RadicalBox[
                  RowBox[{"-", "1"}], "6"], " ", "p"}]}], ")"}], " ", 
              "\[Pi]"}]}], ")"}]}], "p"], 
         FractionBox[
          RowBox[{"\[Pi]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "\[ImaginaryI]", " ", 
              RowBox[{"(", 
               RowBox[{"p", "+", "1"}], ")"}]}], "+", 
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"p", "/", "2"}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", "p"}], "+", "1"}], ")"}], " ", 
                 RowBox[{"sin", "(", 
                  FractionBox[
                   RowBox[{
                    SqrtBox["3"], " ", "p"}], "2"], ")"}]}], "+", 
                RowBox[{
                 RowBox[{"cos", "(", 
                  FractionBox[
                   RowBox[{
                    SqrtBox["3"], " ", "p"}], "2"], ")"}], " ", 
                 SqrtBox["3"]}]}], ")"}]}]}], ")"}]}], 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", "p"], " ", 
           RowBox[{"(", 
            RowBox[{"3", " ", "p"}], ")"}]}]]},
        {"5", "4", 
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              FractionBox[
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"-", "1"}], ")"}], 
                 RowBox[{"13", "/", "14"}]], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RadicalBox[
                    RowBox[{"-", "1"}], "14"], " ", "p"}], "+", "1"}], ")"}], 
                " ", "\[Pi]"}], 
               RowBox[{"7", " ", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{
                  RadicalBox[
                   RowBox[{"-", "1"}], "14"], " ", "p"}]]}]]}], "-", 
             FractionBox[
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"-", "1"}], ")"}], 
                RowBox[{"9", "/", "14"}]], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], 
                   RowBox[{"5", "/", "14"}]], " ", "p"}], "+", "1"}], ")"}], 
               " ", "\[Pi]"}], 
              RowBox[{"7", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"-", "1"}], ")"}], 
                  RowBox[{"5", "/", "14"}]], " ", "p"}]]}]], "-", 
             RowBox[{
              FractionBox["2", "7"], " ", 
              RowBox[{"(", 
               RowBox[{"p", "+", 
                RadicalBox[
                 RowBox[{"-", "1"}], "14"]}], ")"}], " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"-", "1"}], ")"}], 
                 RowBox[{"13", "/", "14"}]], " ", "p"}]], " ", "\[Pi]"}], "-", 
             RowBox[{
              FractionBox["2", "7"], " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"-", "1"}], ")"}], 
                 RowBox[{"9", "/", "14"}]], " ", "p"}]], " ", 
              RowBox[{"(", 
               RowBox[{"p", "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"-", "1"}], ")"}], 
                 RowBox[{"5", "/", "14"}]]}], ")"}], " ", "\[Pi]"}]}], 
            ")"}]}], "p"], 
         FractionBox[
          RowBox[{"4", " ", "\[Pi]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"cos", "(", 
                 RowBox[{
                  FractionBox["1", "7"], " ", 
                  RowBox[{"(", 
                   RowBox[{"\[Pi]", "-", 
                    RowBox[{"7", " ", "p", " ", 
                    RowBox[{"cos", "(", 
                    FractionBox["\[Pi]", "7"], ")"}]}]}], ")"}]}], ")"}], "+", 
                RowBox[{"p", " ", 
                 RowBox[{"sin", "(", 
                  RowBox[{"p", " ", 
                   RowBox[{"cos", "(", 
                    FractionBox["\[Pi]", "7"], ")"}]}], ")"}]}]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"cosh", "(", 
                 RowBox[{"p", " ", 
                  RowBox[{"cos", "(", 
                   FractionBox["\[Pi]", "14"], ")"}]}], ")"}], "+", 
                RowBox[{"sinh", "(", 
                 RowBox[{"p", " ", 
                  RowBox[{"cos", "(", 
                   FractionBox["\[Pi]", "14"], ")"}]}], ")"}]}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"sin", "(", 
                 RowBox[{
                  RowBox[{"p", " ", 
                   RowBox[{"sin", "(", 
                    FractionBox["\[Pi]", "14"], ")"}]}], "+", 
                  FractionBox["\[Pi]", "14"]}], ")"}], "+", 
                RowBox[{"p", " ", 
                 RowBox[{"sin", "(", 
                  RowBox[{"p", " ", 
                   RowBox[{"sin", "(", 
                    FractionBox["\[Pi]", "14"], ")"}]}], ")"}]}]}], ")"}], 
              " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"cosh", "(", 
                 RowBox[{"p", " ", 
                  RowBox[{"sin", "(", 
                   FractionBox["\[Pi]", "7"], ")"}]}], ")"}], "+", 
                RowBox[{"sinh", "(", 
                 RowBox[{"p", " ", 
                  RowBox[{"sin", "(", 
                   FractionBox["\[Pi]", "7"], ")"}]}], ")"}]}], ")"}]}]}], 
            ")"}]}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"7", " ", "p"}], ")"}], " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"p", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"cos", "(", 
                FractionBox["\[Pi]", "14"], ")"}], "+", 
               RowBox[{"sin", "(", 
                FractionBox["\[Pi]", "7"], ")"}]}], ")"}]}]]}]]},
        {"6", "4", 
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              FractionBox[
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"-", "1"}], ")"}], 
                 RowBox[{"7", "/", "8"}]], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RadicalBox[
                    RowBox[{"-", "1"}], "8"], " ", "p"}], "+", "1"}], ")"}], 
                " ", "\[Pi]"}], 
               RowBox[{"4", " ", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{
                  RadicalBox[
                   RowBox[{"-", "1"}], "8"], " ", "p"}]]}]]}], "-", 
             FractionBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"-", "1"}], ")"}], 
                RowBox[{"5", "/", "8"}]], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], 
                   RowBox[{"3", "/", "8"}]], " ", "p"}], "+", "1"}], ")"}], 
               " ", "\[Pi]"}], 
              RowBox[{"4", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"-", "1"}], ")"}], 
                  RowBox[{"3", "/", "8"}]], " ", "p"}]]}]], "-", 
             RowBox[{
              FractionBox["1", "4"], " ", 
              RowBox[{"(", 
               RowBox[{"p", "+", 
                RadicalBox[
                 RowBox[{"-", "1"}], "8"]}], ")"}], " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"-", "1"}], ")"}], 
                 RowBox[{"7", "/", "8"}]], " ", "p"}]], " ", "\[Pi]"}], "-", 
             RowBox[{
              FractionBox["1", "4"], " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"-", "1"}], ")"}], 
                 RowBox[{"5", "/", "8"}]], " ", "p"}]], " ", 
              RowBox[{"(", 
               RowBox[{"p", "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"-", "1"}], ")"}], 
                 RowBox[{"3", "/", "8"}]]}], ")"}], " ", "\[Pi]"}]}], ")"}]}],
           "p"], 
         FractionBox[
          RowBox[{
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"p", " ", 
              RowBox[{"sin", "(", 
               FractionBox["\[Pi]", "8"], ")"}]}]], " ", "\[Pi]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"sin", "(", 
               RowBox[{
                RowBox[{"p", " ", 
                 RowBox[{"sin", "(", 
                  FractionBox["\[Pi]", "8"], ")"}]}], "+", 
                FractionBox["\[Pi]", "8"]}], ")"}], "+", 
              RowBox[{"p", " ", 
               RowBox[{"sin", "(", 
                RowBox[{"p", " ", 
                 RowBox[{"sin", "(", 
                  FractionBox["\[Pi]", "8"], ")"}]}], ")"}]}]}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"p", " ", 
              RowBox[{"cos", "(", 
               FractionBox["\[Pi]", "8"], ")"}]}]], " ", "\[Pi]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"cos", "(", 
               RowBox[{
                FractionBox["1", "8"], " ", 
                RowBox[{"(", 
                 RowBox[{"\[Pi]", "-", 
                  RowBox[{"8", " ", "p", " ", 
                   RowBox[{"cos", "(", 
                    FractionBox["\[Pi]", "8"], ")"}]}]}], ")"}]}], ")"}], "+", 
              RowBox[{"p", " ", 
               RowBox[{"sin", "(", 
                RowBox[{"p", " ", 
                 RowBox[{"cos", "(", 
                  FractionBox["\[Pi]", "8"], ")"}]}], ")"}]}]}], ")"}]}]}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", " ", "p"}], ")"}], " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"p", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"cos", "(", 
                FractionBox["\[Pi]", "8"], ")"}], "+", 
               RowBox[{"sin", "(", 
                FractionBox["\[Pi]", "8"], ")"}]}], ")"}]}]]}]]},
        {"7", "4", 
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              FractionBox[
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"-", "1"}], ")"}], 
                 RowBox[{"5", "/", "6"}]], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RadicalBox[
                    RowBox[{"-", "1"}], "6"], " ", "p"}], "+", "1"}], ")"}], 
                " ", "\[Pi]"}], 
               RowBox[{"9", " ", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{
                  RadicalBox[
                   RowBox[{"-", "1"}], "6"], " ", "p"}]]}]]}], "-", 
             FractionBox[
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"-", "1"}], ")"}], 
                RowBox[{"11", "/", "18"}]], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], 
                   RowBox[{"7", "/", "18"}]], " ", "p"}], "+", "1"}], ")"}], 
               " ", "\[Pi]"}], 
              RowBox[{"9", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"-", "1"}], ")"}], 
                  RowBox[{"7", "/", "18"}]], " ", "p"}]]}]], "-", 
             RowBox[{
              FractionBox["2", "9"], " ", 
              RowBox[{"(", 
               RowBox[{"p", "+", 
                RadicalBox[
                 RowBox[{"-", "1"}], "6"]}], ")"}], " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"-", "1"}], ")"}], 
                 RowBox[{"5", "/", "6"}]], " ", "p"}]], " ", "\[Pi]"}], "-", 
             RowBox[{
              FractionBox["2", "9"], " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"-", "1"}], ")"}], 
                 RowBox[{"11", "/", "18"}]], " ", "p"}]], " ", 
              RowBox[{"(", 
               RowBox[{"p", "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"-", "1"}], ")"}], 
                 RowBox[{"7", "/", "18"}]]}], ")"}], " ", "\[Pi]"}]}], 
            ")"}]}], "p"], 
         FractionBox[
          RowBox[{"2", " ", "\[Pi]", " ", 
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{
               RowBox[{"cos", "(", 
                FractionBox["p", "2"], ")"}], "+", 
               RowBox[{
                RowBox[{"sin", "(", 
                 FractionBox["p", "2"], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "p"}], "+", 
                  SqrtBox["3"]}], ")"}]}]}], 
              SuperscriptBox["\[ExponentialE]", 
               FractionBox[
                RowBox[{
                 SqrtBox["3"], " ", "p"}], "2"]]], "+", 
             FractionBox[
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"cos", "(", 
                  RowBox[{
                   FractionBox["1", "9"], " ", 
                   RowBox[{"(", 
                    RowBox[{"\[Pi]", "-", 
                    RowBox[{"9", " ", "p", " ", 
                    RowBox[{"cos", "(", 
                    FractionBox["\[Pi]", "9"], ")"}]}]}], ")"}]}], ")"}], "+", 
                 RowBox[{"p", " ", 
                  RowBox[{"sin", "(", 
                   RowBox[{"p", " ", 
                    RowBox[{"cos", "(", 
                    FractionBox["\[Pi]", "9"], ")"}]}], ")"}]}]}], ")"}]}], 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"p", " ", 
                RowBox[{"sin", "(", 
                 FractionBox["\[Pi]", "9"], ")"}]}]]]}], ")"}]}], 
          RowBox[{"9", " ", "p"}]]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], ",", 
     RowBox[{"Alignment", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Left", ",", "Left"}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "All"}], ",", 
     RowBox[{"ItemSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "Automatic"}], "}"}]}]}], "]"}], " ", "v"}], 
  TraditionalForm]], "Input",
 CellChangeTimes->{{3.6155365461529217`*^9, 3.6155365468359737`*^9}, {
  3.615536778651552*^9, 3.6155368004024467`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{GridBox[{
    {
     FractionBox[
      RowBox[{"2", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           SqrtBox["3"], " ", "p"}], "2"]}]], " ", "\[Pi]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", 
          FractionBox["p", "2"], "]"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SqrtBox["3"], "+", 
            RowBox[{"2", " ", "p"}]}], ")"}], " ", 
          RowBox[{"Sin", "[", 
           FractionBox["p", "2"], "]"}]}]}], ")"}]}], 
      RowBox[{"3", " ", "p"}]]},
    {
     FractionBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         FractionBox["p", 
          SqrtBox["2"]]}]], " ", "\[Pi]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SqrtBox["2"], " ", 
          RowBox[{"Cos", "[", 
           FractionBox["p", 
            SqrtBox["2"]], "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SqrtBox["2"], "+", 
            RowBox[{"2", " ", "p"}]}], ")"}], " ", 
          RowBox[{"Sin", "[", 
           FractionBox["p", 
            SqrtBox["2"]], "]"}]}]}], ")"}]}], 
      RowBox[{"2", " ", "p"}]]},
    {
     RowBox[{
      FractionBox["1", 
       RowBox[{"5", " ", "p"}]], 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"p", " ", 
         RowBox[{"Root", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"5", "-", 
             RowBox[{"20", " ", 
              SuperscriptBox["#1", "2"]}], "+", 
             RowBox[{"16", " ", 
              SuperscriptBox["#1", "4"]}]}], "&"}], ",", "2"}], "]"}]}]], " ",
        "\[Pi]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SqrtBox["5"]}], ")"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            FractionBox["1", "4"], " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SqrtBox["5"]}], ")"}], " ", "p"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SqrtBox[
             RowBox[{"10", "-", 
              RowBox[{"2", " ", 
               SqrtBox["5"]}]}]], "+", 
            RowBox[{"4", " ", "p"}]}], ")"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            FractionBox["1", "4"], " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SqrtBox["5"]}], ")"}], " ", "p"}], "]"}]}]}], ")"}]}]}]},
    {
     FractionBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "p"}]], " ", "\[Pi]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "p"}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"p", "/", "2"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SqrtBox["3"], " ", 
             RowBox[{"Cos", "[", 
              FractionBox[
               RowBox[{
                SqrtBox["3"], " ", "p"}], "2"], "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"2", " ", "p"}]}], ")"}], " ", 
             RowBox[{"Sin", "[", 
              FractionBox[
               RowBox[{
                SqrtBox["3"], " ", "p"}], "2"], "]"}]}]}], ")"}]}]}], ")"}]}], 
      RowBox[{"3", " ", "p"}]]},
    {
     RowBox[{
      FractionBox["1", 
       RowBox[{"7", " ", "p"}]], 
      RowBox[{"4", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "p"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Cos", "[", 
            FractionBox["\[Pi]", "14"], "]"}], "+", 
           RowBox[{"Sin", "[", 
            FractionBox["\[Pi]", "7"], "]"}]}], ")"}]}]], " ", "\[Pi]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{
              FractionBox["1", "7"], " ", 
              RowBox[{"(", 
               RowBox[{"\[Pi]", "-", 
                RowBox[{"7", " ", "p", " ", 
                 RowBox[{"Cos", "[", 
                  FractionBox["\[Pi]", "7"], "]"}]}]}], ")"}]}], "]"}], "+", 
            RowBox[{"p", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"p", " ", 
               RowBox[{"Cos", "[", 
                FractionBox["\[Pi]", "7"], "]"}]}], "]"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Cosh", "[", 
             RowBox[{"p", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["\[Pi]", "14"], "]"}]}], "]"}], "+", 
            RowBox[{"Sinh", "[", 
             RowBox[{"p", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["\[Pi]", "14"], "]"}]}], "]"}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"p", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"p", " ", 
               RowBox[{"Sin", "[", 
                FractionBox["\[Pi]", "14"], "]"}]}], "]"}]}], "+", 
            RowBox[{"Sin", "[", 
             RowBox[{
              FractionBox["\[Pi]", "14"], "+", 
              RowBox[{"p", " ", 
               RowBox[{"Sin", "[", 
                FractionBox["\[Pi]", "14"], "]"}]}]}], "]"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Cosh", "[", 
             RowBox[{"p", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["\[Pi]", "7"], "]"}]}], "]"}], "+", 
            RowBox[{"Sinh", "[", 
             RowBox[{"p", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["\[Pi]", "7"], "]"}]}], "]"}]}], ")"}]}]}], 
        ")"}]}]}]},
    {
     RowBox[{
      FractionBox["1", 
       RowBox[{"2", " ", "p"}]], 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "p"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Cos", "[", 
            FractionBox["\[Pi]", "8"], "]"}], "+", 
           RowBox[{"Sin", "[", 
            FractionBox["\[Pi]", "8"], "]"}]}], ")"}]}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"p", " ", 
            RowBox[{"Cos", "[", 
             FractionBox["\[Pi]", "8"], "]"}]}]], " ", "\[Pi]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{
              FractionBox["1", "8"], " ", 
              RowBox[{"(", 
               RowBox[{"\[Pi]", "-", 
                RowBox[{"8", " ", "p", " ", 
                 RowBox[{"Cos", "[", 
                  FractionBox["\[Pi]", "8"], "]"}]}]}], ")"}]}], "]"}], "+", 
            RowBox[{"p", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"p", " ", 
               RowBox[{"Cos", "[", 
                FractionBox["\[Pi]", "8"], "]"}]}], "]"}]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"p", " ", 
            RowBox[{"Sin", "[", 
             FractionBox["\[Pi]", "8"], "]"}]}]], " ", "\[Pi]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"p", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"p", " ", 
               RowBox[{"Sin", "[", 
                FractionBox["\[Pi]", "8"], "]"}]}], "]"}]}], "+", 
            RowBox[{"Sin", "[", 
             RowBox[{
              FractionBox["\[Pi]", "8"], "+", 
              RowBox[{"p", " ", 
               RowBox[{"Sin", "[", 
                FractionBox["\[Pi]", "8"], "]"}]}]}], "]"}]}], ")"}]}]}], 
        ")"}]}]}]},
    {
     RowBox[{
      FractionBox["1", 
       RowBox[{"9", " ", "p"}]], 
      RowBox[{"2", " ", "\[Pi]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              SqrtBox["3"], " ", "p"}], "2"]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Cos", "[", 
             FractionBox["p", "2"], "]"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               SqrtBox["3"], "+", 
               RowBox[{"2", " ", "p"}]}], ")"}], " ", 
             RowBox[{"Sin", "[", 
              FractionBox["p", "2"], "]"}]}]}], ")"}]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "p"}], " ", 
            RowBox[{"Sin", "[", 
             FractionBox["\[Pi]", "9"], "]"}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{
              FractionBox["1", "9"], " ", 
              RowBox[{"(", 
               RowBox[{"\[Pi]", "-", 
                RowBox[{"9", " ", "p", " ", 
                 RowBox[{"Cos", "[", 
                  FractionBox["\[Pi]", "9"], "]"}]}]}], ")"}]}], "]"}], "+", 
            RowBox[{"p", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"p", " ", 
               RowBox[{"Cos", "[", 
                FractionBox["\[Pi]", "9"], "]"}]}], "]"}]}]}], ")"}]}]}], 
        ")"}]}]}]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Left}}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "//",
   "Flatten"}]], "Input",
 CellChangeTimes->{{3.615536556212298*^9, 3.615536581381665*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SqrtBox["3"], " ", "p"}], "2"]}]], " ", "\[Pi]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", 
        FractionBox["p", "2"], "]"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SqrtBox["3"], "+", 
          RowBox[{"2", " ", "p"}]}], ")"}], " ", 
        RowBox[{"Sin", "[", 
         FractionBox["p", "2"], "]"}]}]}], ")"}]}], 
    RowBox[{"3", " ", "p"}]], ",", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox["p", 
        SqrtBox["2"]]}]], " ", "\[Pi]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SqrtBox["2"], " ", 
        RowBox[{"Cos", "[", 
         FractionBox["p", 
          SqrtBox["2"]], "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SqrtBox["2"], "+", 
          RowBox[{"2", " ", "p"}]}], ")"}], " ", 
        RowBox[{"Sin", "[", 
         FractionBox["p", 
          SqrtBox["2"]], "]"}]}]}], ")"}]}], 
    RowBox[{"2", " ", "p"}]], ",", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"p", " ", 
       RowBox[{"Root", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"5", "-", 
           RowBox[{"20", " ", 
            SuperscriptBox["#1", "2"]}], "+", 
           RowBox[{"16", " ", 
            SuperscriptBox["#1", "4"]}]}], "&"}], ",", "2"}], "]"}]}]], " ", 
     "\[Pi]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SqrtBox["5"]}], ")"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          FractionBox["1", "4"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SqrtBox["5"]}], ")"}], " ", "p"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SqrtBox[
           RowBox[{"10", "-", 
            RowBox[{"2", " ", 
             SqrtBox["5"]}]}]], "+", 
          RowBox[{"4", " ", "p"}]}], ")"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          FractionBox["1", "4"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SqrtBox["5"]}], ")"}], " ", "p"}], "]"}]}]}], ")"}]}], 
    RowBox[{"5", " ", "p"}]], ",", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", "p"}]], " ", "\[Pi]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "p"}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"p", "/", "2"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SqrtBox["3"], " ", 
           RowBox[{"Cos", "[", 
            FractionBox[
             RowBox[{
              SqrtBox["3"], " ", "p"}], "2"], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "p"}]}], ")"}], " ", 
           RowBox[{"Sin", "[", 
            FractionBox[
             RowBox[{
              SqrtBox["3"], " ", "p"}], "2"], "]"}]}]}], ")"}]}]}], ")"}]}], 
    RowBox[{"3", " ", "p"}]], ",", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"7", " ", "p"}]], 
    RowBox[{"4", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "p"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", 
          FractionBox["\[Pi]", "14"], "]"}], "+", 
         RowBox[{"Sin", "[", 
          FractionBox["\[Pi]", "7"], "]"}]}], ")"}]}]], " ", "\[Pi]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{
            FractionBox["1", "7"], " ", 
            RowBox[{"(", 
             RowBox[{"\[Pi]", "-", 
              RowBox[{"7", " ", "p", " ", 
               RowBox[{"Cos", "[", 
                FractionBox["\[Pi]", "7"], "]"}]}]}], ")"}]}], "]"}], "+", 
          RowBox[{"p", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"p", " ", 
             RowBox[{"Cos", "[", 
              FractionBox["\[Pi]", "7"], "]"}]}], "]"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Cosh", "[", 
           RowBox[{"p", " ", 
            RowBox[{"Cos", "[", 
             FractionBox["\[Pi]", "14"], "]"}]}], "]"}], "+", 
          RowBox[{"Sinh", "[", 
           RowBox[{"p", " ", 
            RowBox[{"Cos", "[", 
             FractionBox["\[Pi]", "14"], "]"}]}], "]"}]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"p", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"p", " ", 
             RowBox[{"Sin", "[", 
              FractionBox["\[Pi]", "14"], "]"}]}], "]"}]}], "+", 
          RowBox[{"Sin", "[", 
           RowBox[{
            FractionBox["\[Pi]", "14"], "+", 
            RowBox[{"p", " ", 
             RowBox[{"Sin", "[", 
              FractionBox["\[Pi]", "14"], "]"}]}]}], "]"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Cosh", "[", 
           RowBox[{"p", " ", 
            RowBox[{"Sin", "[", 
             FractionBox["\[Pi]", "7"], "]"}]}], "]"}], "+", 
          RowBox[{"Sinh", "[", 
           RowBox[{"p", " ", 
            RowBox[{"Sin", "[", 
             FractionBox["\[Pi]", "7"], "]"}]}], "]"}]}], ")"}]}]}], 
      ")"}]}]}], ",", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"2", " ", "p"}]], 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "p"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", 
          FractionBox["\[Pi]", "8"], "]"}], "+", 
         RowBox[{"Sin", "[", 
          FractionBox["\[Pi]", "8"], "]"}]}], ")"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"p", " ", 
          RowBox[{"Cos", "[", 
           FractionBox["\[Pi]", "8"], "]"}]}]], " ", "\[Pi]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{
            FractionBox["1", "8"], " ", 
            RowBox[{"(", 
             RowBox[{"\[Pi]", "-", 
              RowBox[{"8", " ", "p", " ", 
               RowBox[{"Cos", "[", 
                FractionBox["\[Pi]", "8"], "]"}]}]}], ")"}]}], "]"}], "+", 
          RowBox[{"p", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"p", " ", 
             RowBox[{"Cos", "[", 
              FractionBox["\[Pi]", "8"], "]"}]}], "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"p", " ", 
          RowBox[{"Sin", "[", 
           FractionBox["\[Pi]", "8"], "]"}]}]], " ", "\[Pi]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"p", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"p", " ", 
             RowBox[{"Sin", "[", 
              FractionBox["\[Pi]", "8"], "]"}]}], "]"}]}], "+", 
          RowBox[{"Sin", "[", 
           RowBox[{
            FractionBox["\[Pi]", "8"], "+", 
            RowBox[{"p", " ", 
             RowBox[{"Sin", "[", 
              FractionBox["\[Pi]", "8"], "]"}]}]}], "]"}]}], ")"}]}]}], 
      ")"}]}]}], ",", 
   FractionBox[
    RowBox[{"2", " ", "\[Pi]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            SqrtBox["3"], " ", "p"}], "2"]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Cos", "[", 
           FractionBox["p", "2"], "]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SqrtBox["3"], "+", 
             RowBox[{"2", " ", "p"}]}], ")"}], " ", 
           RowBox[{"Sin", "[", 
            FractionBox["p", "2"], "]"}]}]}], ")"}]}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "p"}], " ", 
          RowBox[{"Sin", "[", 
           FractionBox["\[Pi]", "9"], "]"}]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{
            FractionBox["1", "9"], " ", 
            RowBox[{"(", 
             RowBox[{"\[Pi]", "-", 
              RowBox[{"9", " ", "p", " ", 
               RowBox[{"Cos", "[", 
                FractionBox["\[Pi]", "9"], "]"}]}]}], ")"}]}], "]"}], "+", 
          RowBox[{"p", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"p", " ", 
             RowBox[{"Cos", "[", 
              FractionBox["\[Pi]", "9"], "]"}]}], "]"}]}]}], ")"}]}]}], 
      ")"}]}], 
    RowBox[{"9", " ", "p"}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.615536558163409*^9, 3.615536581579914*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           SqrtBox["3"], " ", "p"}], "2"]}]], " ", "\[Pi]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", 
          FractionBox["p", "2"], "]"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SqrtBox["3"], "+", 
            RowBox[{"2", " ", "p"}]}], ")"}], " ", 
          RowBox[{"Sin", "[", 
           FractionBox["p", "2"], "]"}]}]}], ")"}]}], 
      RowBox[{"3", " ", "p"}]], ",", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         FractionBox["p", 
          SqrtBox["2"]]}]], " ", "\[Pi]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SqrtBox["2"], " ", 
          RowBox[{"Cos", "[", 
           FractionBox["p", 
            SqrtBox["2"]], "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SqrtBox["2"], "+", 
            RowBox[{"2", " ", "p"}]}], ")"}], " ", 
          RowBox[{"Sin", "[", 
           FractionBox["p", 
            SqrtBox["2"]], "]"}]}]}], ")"}]}], 
      RowBox[{"2", " ", "p"}]], ",", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"p", " ", 
         RowBox[{"Root", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"5", "-", 
             RowBox[{"20", " ", 
              SuperscriptBox["#1", "2"]}], "+", 
             RowBox[{"16", " ", 
              SuperscriptBox["#1", "4"]}]}], "&"}], ",", "2"}], "]"}]}]], " ",
        "\[Pi]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SqrtBox["5"]}], ")"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            FractionBox["1", "4"], " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SqrtBox["5"]}], ")"}], " ", "p"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SqrtBox[
             RowBox[{"10", "-", 
              RowBox[{"2", " ", 
               SqrtBox["5"]}]}]], "+", 
            RowBox[{"4", " ", "p"}]}], ")"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            FractionBox["1", "4"], " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SqrtBox["5"]}], ")"}], " ", "p"}], "]"}]}]}], ")"}]}], 
      RowBox[{"5", " ", "p"}]], ",", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "p"}]], " ", "\[Pi]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "p"}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"p", "/", "2"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SqrtBox["3"], " ", 
             RowBox[{"Cos", "[", 
              FractionBox[
               RowBox[{
                SqrtBox["3"], " ", "p"}], "2"], "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"2", " ", "p"}]}], ")"}], " ", 
             RowBox[{"Sin", "[", 
              FractionBox[
               RowBox[{
                SqrtBox["3"], " ", "p"}], "2"], "]"}]}]}], ")"}]}]}], ")"}]}], 
      RowBox[{"3", " ", "p"}]], ",", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"7", " ", "p"}]], 
      RowBox[{"4", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "p"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Cos", "[", 
            FractionBox["\[Pi]", "14"], "]"}], "+", 
           RowBox[{"Sin", "[", 
            FractionBox["\[Pi]", "7"], "]"}]}], ")"}]}]], " ", "\[Pi]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{
              FractionBox["1", "7"], " ", 
              RowBox[{"(", 
               RowBox[{"\[Pi]", "-", 
                RowBox[{"7", " ", "p", " ", 
                 RowBox[{"Cos", "[", 
                  FractionBox["\[Pi]", "7"], "]"}]}]}], ")"}]}], "]"}], "+", 
            RowBox[{"p", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"p", " ", 
               RowBox[{"Cos", "[", 
                FractionBox["\[Pi]", "7"], "]"}]}], "]"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Cosh", "[", 
             RowBox[{"p", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["\[Pi]", "14"], "]"}]}], "]"}], "+", 
            RowBox[{"Sinh", "[", 
             RowBox[{"p", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["\[Pi]", "14"], "]"}]}], "]"}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"p", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"p", " ", 
               RowBox[{"Sin", "[", 
                FractionBox["\[Pi]", "14"], "]"}]}], "]"}]}], "+", 
            RowBox[{"Sin", "[", 
             RowBox[{
              FractionBox["\[Pi]", "14"], "+", 
              RowBox[{"p", " ", 
               RowBox[{"Sin", "[", 
                FractionBox["\[Pi]", "14"], "]"}]}]}], "]"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Cosh", "[", 
             RowBox[{"p", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["\[Pi]", "7"], "]"}]}], "]"}], "+", 
            RowBox[{"Sinh", "[", 
             RowBox[{"p", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["\[Pi]", "7"], "]"}]}], "]"}]}], ")"}]}]}], 
        ")"}]}]}], ",", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"2", " ", "p"}]], 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "p"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Cos", "[", 
            FractionBox["\[Pi]", "8"], "]"}], "+", 
           RowBox[{"Sin", "[", 
            FractionBox["\[Pi]", "8"], "]"}]}], ")"}]}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"p", " ", 
            RowBox[{"Cos", "[", 
             FractionBox["\[Pi]", "8"], "]"}]}]], " ", "\[Pi]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{
              FractionBox["1", "8"], " ", 
              RowBox[{"(", 
               RowBox[{"\[Pi]", "-", 
                RowBox[{"8", " ", "p", " ", 
                 RowBox[{"Cos", "[", 
                  FractionBox["\[Pi]", "8"], "]"}]}]}], ")"}]}], "]"}], "+", 
            RowBox[{"p", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"p", " ", 
               RowBox[{"Cos", "[", 
                FractionBox["\[Pi]", "8"], "]"}]}], "]"}]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"p", " ", 
            RowBox[{"Sin", "[", 
             FractionBox["\[Pi]", "8"], "]"}]}]], " ", "\[Pi]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"p", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"p", " ", 
               RowBox[{"Sin", "[", 
                FractionBox["\[Pi]", "8"], "]"}]}], "]"}]}], "+", 
            RowBox[{"Sin", "[", 
             RowBox[{
              FractionBox["\[Pi]", "8"], "+", 
              RowBox[{"p", " ", 
               RowBox[{"Sin", "[", 
                FractionBox["\[Pi]", "8"], "]"}]}]}], "]"}]}], ")"}]}]}], 
        ")"}]}]}], ",", 
     FractionBox[
      RowBox[{"2", " ", "\[Pi]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              SqrtBox["3"], " ", "p"}], "2"]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Cos", "[", 
             FractionBox["p", "2"], "]"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               SqrtBox["3"], "+", 
               RowBox[{"2", " ", "p"}]}], ")"}], " ", 
             RowBox[{"Sin", "[", 
              FractionBox["p", "2"], "]"}]}]}], ")"}]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "p"}], " ", 
            RowBox[{"Sin", "[", 
             FractionBox["\[Pi]", "9"], "]"}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{
              FractionBox["1", "9"], " ", 
              RowBox[{"(", 
               RowBox[{"\[Pi]", "-", 
                RowBox[{"9", " ", "p", " ", 
                 RowBox[{"Cos", "[", 
                  FractionBox["\[Pi]", "9"], "]"}]}]}], ")"}]}], "]"}], "+", 
            RowBox[{"p", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"p", " ", 
               RowBox[{"Cos", "[", 
                FractionBox["\[Pi]", "9"], "]"}]}], "]"}]}]}], ")"}]}]}], 
        ")"}]}], 
      RowBox[{"9", " ", "p"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"p", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.5"}], ",", "1.0"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.615536594128463*^9, 3.615536607466792*^9}, {
  3.615536703715015*^9, 3.615536711705935*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
Pv4fW9CcFA==
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
4iIBlpfSHhLkvP0PH3Gc7A==
     "]]}, 
   {Hue[0.1421359549995791, 0.6, 0.6], LineBox[CompressedData["
1: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
5YTc7Pw8F0oiahYBJxD9H3mWPT0=
     "]]}, {}, 
   {Hue[0.6142719099991583, 0.6, 0.6], LineBox[CompressedData["
1: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
MkBOdZiqcCYI/R+qy18I
     "]]}, 
   {Hue[0.8503398874989481, 0.6, 0.6], LineBox[CompressedData["
1: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

     "]]}, 
   {Hue[0.08640786499873876, 0.6, 0.6], LineBox[CompressedData["
1:eJwdl3k8VN//x5FK1pmhEjNzhxGylpT4qPNuU6EUUVGKbKUoURIthLKTEKEs
kZDETKGOLfs2Q1JJQlJRIWXN735/95/7eD7OPeee9+v9er/PvQr27uaOQgIC
AomCAgL/u1toBi8IVxQAgf+/fqH7l1y/rT4gABsuBioLMX4i/9TZfb+HBeFf
nrGAd/0QEmjvhTKfBZDf6PTqnkQ/UvZ08t6vthC+mnedPFXxDg1MxFuJvVgE
itmvkziIh4w/n/SLOSsClWHT87b25cjIj527zVsEBF0qGNGscrRlafe7P5dF
gOq0runtC4wMtu/eYBMmAq+c91K3PnuJ1DK1x9lZInDt3bjCfEEZEnP87VLc
LQJBW7c/Vyp8hpoG/PZ37VgCyYpPrlmPF6A9A1HqTKYooM9aGmG3A1CT+kDH
YSVRuH5bZ1vA4avI5Jze5SQ1UXgjh35HmPignUI9bbJ6onBZoTzgw+xJtIWl
fl56ryjI/8m8r1rvjNcdflUu4i8KDek1Bq2DEZjeMWU5/lkURF4//XDpVTr+
VmV/tS5PDF7+uuo/Si3GRHTXyYgikg/3nnp7uhjvt91jub9UDAQPIzPX+mL8
clJfrbdODHoyapeFX+HgGE1qx99+Mfj4SsWz/gsX/xePVVTkxEG+8duYenYJ
DjtJbw0MEgfvnnKX9iGMK/RinpuEi8OrOMkRYUY5/iMskkGNJVmvJs9rezk+
ljrunXxfHDS4ph/e3C7Huh0NisVl4hBvtj0mVbcCf9h48fzAmDgYf0i/sPlk
JdaidjK2HpUApU6lspniajwYPuh/21EC2tgS+6Y7q3Gy6N8vX1wloKP9V2LH
32osLixbGOYtAbUVW53o+q/wtz+HjDqjJSDDavrm1PNXOLP7g9uJagnw3DmY
8bOoBtOzP+PIVZIg316YMh1ZhzuU/ij1aUtCRJ9Jum9uHQ69vyhEd70kHLN6
teF9XR2eTlTZ/3aLJHxbP66rJViPu8JPDCkeloQh/rSxxpl6fOvcCIUTIQnV
TzPfRu5owKJowq57XBIOpzTqaXU3Yu/NqiKcaUkgvioP7//TiAe32uRHCkrB
gzUFyILShCt3VkxvkZICS3/3sc6tTdjHPPzWQzUpCIjsaprJbsLfHVe+Om8n
BTrFqdxXrs24KcxSldoqBazzsx4F7S3YIPJGy7fXUnD0+4xP31ALzo4u9azu
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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  ImageSize->{1015., Automatic},
  Method->{},
  PlotRange->{{0, 10}, {-0.5, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic}]], "Output",
 CellChangeTimes->{{3.615536603413574*^9, 3.615536608144992*^9}, 
   3.6155367121635923`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1215, 972},
WindowMargins->{{237, Automatic}, {13, Automatic}},
CellContext->Notebook,
FrontEndVersion->"9.0 for Linux x86 (64-bit) (February 7, 2013)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 93, 1, 93, "Title"],
Cell[675, 25, 445, 7, 51, "Text"],
Cell[CellGroupData[{
Cell[1145, 36, 127, 3, 81, "Section"],
Cell[1275, 41, 293, 6, 51, "Text"],
Cell[CellGroupData[{
Cell[1593, 51, 2424, 72, 143, "Input"],
Cell[4020, 125, 651, 17, 59, "Output"],
Cell[4674, 144, 580, 14, 57, "Output"],
Cell[5257, 160, 626, 16, 57, "Output"],
Cell[5886, 178, 820, 23, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6743, 206, 134, 3, 45, "Subsection"],
Cell[6880, 211, 1743, 46, 165, "Input"],
Cell[CellGroupData[{
Cell[8648, 261, 2159, 57, 99, "Input"],
Cell[10810, 320, 1338, 38, 57, "Output"],
Cell[12151, 360, 360779, 6192, 534, "Output"]
}, Open  ]],
Cell[372945, 6555, 265, 5, 31, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[373259, 6566, 138, 3, 81, "Section"],
Cell[373400, 6571, 493, 8, 51, "Text"],
Cell[373896, 6581, 379, 10, 32, "Input"],
Cell[374278, 6593, 2052, 55, 143, "Input"],
Cell[376333, 6650, 765, 12, 91, "Text"],
Cell[377101, 6664, 1798, 50, 121, "Input"],
Cell[378902, 6716, 398, 12, 31, "Text"],
Cell[CellGroupData[{
Cell[379325, 6732, 112, 1, 45, "Subsection"],
Cell[379440, 6735, 306, 6, 31, "Text"],
Cell[CellGroupData[{
Cell[379771, 6745, 13629, 358, 1067, "Input"],
Cell[393403, 7105, 2018, 42, 428, "Output"]
}, Open  ]],
Cell[395436, 7150, 256, 5, 31, "Text"],
Cell[CellGroupData[{
Cell[395717, 7159, 2629, 61, 209, "Input"],
Cell[398349, 7222, 5378, 145, 190, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[403788, 7374, 126, 1, 81, "Section"],
Cell[403917, 7377, 1026, 28, 55, "Input"],
Cell[404946, 7407, 576, 14, 55, "Input"],
Cell[CellGroupData[{
Cell[405547, 7425, 1767, 42, 187, "Input"],
Cell[407317, 7469, 49493, 1446, 3031, "Output"]
}, Open  ]],
Cell[456825, 8918, 26680, 708, 659, InheritFromParent],
Cell[CellGroupData[{
Cell[483530, 9630, 9749, 291, 582, "Input"],
Cell[493282, 9923, 8906, 277, 406, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[502225, 10205, 9744, 286, 606, "Input"],
Cell[511972, 10493, 51842, 864, 643, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

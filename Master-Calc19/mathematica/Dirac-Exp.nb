(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    481902,       9962]
NotebookOptionsPosition[    475373,       9750]
NotebookOutlinePosition[    475761,       9767]
CellTagsIndexPosition[    475718,       9764]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Schwarzschild-Expansion of the (modified) GUP", "Title",
 CellChangeTimes->{{3.620469650157502*^9, 3.620469664498886*^9}}],

Cell["Kempf- und Regularisierungsapproach", "Text",
 CellChangeTimes->{{3.6204696702119007`*^9, 3.620469675167568*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Vorbereitungen", " ", "fuer", " ", "den", " ", "Export"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SetDirectory", "[", 
     RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cm", "=", 
     RowBox[{"72", "/", "2.54"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Epic", " ", "Epilog"}], "-", 
      RowBox[{"Labels", " ", "coming", " ", "here"}]}], ",", " ", 
     RowBox[{"modified", " ", "for", " ", "the", " ", "current", " ", 
      RowBox[{"problem", ":", "\[IndentingNewLine]", "   ", 
       RowBox[{
       "Featuring", " ", "scaling", " ", "and", " ", "correct", " ", "Inset", 
        " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"no", " ", "rectangle", " ", "nonrotated", " ", "box"}], 
          ")"}], ".", "\[IndentingNewLine]", " ", "ASSUMING"}], " ", "data", 
        " ", "be", " ", "a", " ", "list", " ", "of", " ", "X", " ", "as", " ",
         "variable"}]}]}], ",", " ", 
     RowBox[{"ideal", " ", "for", " ", 
      RowBox[{"g00s", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"ClearAll", "[", "EpiLabels", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"EpiLabels", "[", 
     RowBox[{"xpoint_", ",", " ", "data_", ",", " ", "labels_", ",", 
      RowBox[{"axisratio_:", "1"}], ",", " ", 
      RowBox[{"bgcolor_:", "White"}]}], "]"}], ":=", " ", 
    "\[IndentingNewLine]", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xpoints", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Head", "@", "xpoint"}], "===", "List"}], ",", " ", 
          "xpoint", ",", " ", 
          RowBox[{
           RowBox[{"xpoint", "&"}], "/@", " ", "labels"}]}], "]"}]}], "}"}], 
      ",", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"erlaube", " ", "Liste", " ", "von", " ", "xpoints"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Inset", "[", 
         RowBox[{
          RowBox[{"Rotate", "[", 
           RowBox[{
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"labels", "[", 
               RowBox[{"[", "#", "]"}], "]"}], ",", 
              RowBox[{"Background", " ", "\[Rule]", " ", "bgcolor"}]}], "]"}],
             ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"ArcTan", "@", 
              RowBox[{"Re", "@", 
               RowBox[{"N", "[", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"D", "[", 
                   RowBox[{
                    RowBox[{
                    "data", "\[LeftDoubleBracket]", "#", 
                    "\[RightDoubleBracket]"}], ",", "X"}], "]"}], "/.", 
                  RowBox[{"{", 
                   RowBox[{"X", "\[Rule]", " ", 
                    RowBox[{
                    "xpoints", "\[LeftDoubleBracket]", "#", 
                    "\[RightDoubleBracket]"}]}], "}"}]}], ")"}], " ", 
                "]"}]}]}], " ", "/", " ", "axisratio"}]}], "]"}], " ", ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "xpoints", "\[LeftDoubleBracket]", "#", "\[RightDoubleBracket]"}],
             ",", " ", 
            RowBox[{"0", " ", "+", 
             RowBox[{
              RowBox[{"(", " ", 
               RowBox[{"data", "/.", 
                RowBox[{"X", "\[Rule]", " ", 
                 RowBox[{
                 "xpoints", "\[LeftDoubleBracket]", "#", 
                  "\[RightDoubleBracket]"}]}]}], ")"}], 
              "\[LeftDoubleBracket]", "#", "\[RightDoubleBracket]"}]}]}], 
           "}"}]}], "\[IndentingNewLine]", "]"}], "&"}], " ", "/@", " ", 
       RowBox[{"Range", "@", 
        RowBox[{"Length", "@", "data"}]}]}]}], "]"}], " ", 
    RowBox[{"(*", " ", 
     RowBox[{"1", ":", " ", 
      RowBox[{
      "any", " ", "value", " ", "to", " ", "introspect", " ", "list"}]}], 
     "*)"}]}]}]}]], "Input",
 CellChangeTimes->{{3.62053439087834*^9, 3.6205343910307713`*^9}, {
  3.620534667575996*^9, 3.620534669423078*^9}, {3.62053480646177*^9, 
  3.620534811093195*^9}}],

Cell[CellGroupData[{

Cell["\<\
Worum gehts? Taylor von GUP-Term\
\>", "Section",
 CellChangeTimes->{{3.620533827857881*^9, 3.620533832004078*^9}}],

Cell["\<\
Wir wollen die folgende Funktion g(p) taylorn. In der Regel ist also \
x\[Rule]p und m\[Rule](N-1).\
\>", "Text",
 CellChangeTimes->{{3.620533836748111*^9, 3.620533859510583*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "[", "x_", "]"}], " ", "=", " ", 
  FractionBox["1", 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"L", " ", "x"}], ")"}], "m"]}]]}]], "Input",
 CellChangeTimes->{{3.6205450701248293`*^9, 3.62054507226234*^9}}],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{"1", "+", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"L", " ", "x"}], ")"}], "m"]}]]], "Output",
 CellChangeTimes->{3.6205338914283533`*^9, 3.620545072448666*^9, 
  3.620619263243516*^9}]
}, Open  ]],

Cell["Zeichnung dieses Prinzips:", "Text",
 CellChangeTimes->{{3.6205338640991783`*^9, 3.62053387182698*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Umstaendlicher", " ", "Weg"}], ",", " ", 
    RowBox[{
    "um", " ", "Mathematica", " ", "zur", " ", "Taylorserie", " ", "zu", " ", 
     "bewegen"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"taylorg", "[", 
     RowBox[{"y_", ",", "max_"}], "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Series", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"g", "[", "x", "]"}], "/.", 
          RowBox[{"{", 
           RowBox[{"m", "\[Rule]", " ", "1"}], "}"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "0", ",", "max"}], "}"}]}], "]"}], "  ", "//", 
       " ", "Normal"}], ")"}], " ", "/.", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x", "\[Rule]", " ", 
        SuperscriptBox["y", "m"]}], " ", ",", 
       RowBox[{"L", "\[Rule]", " ", 
        SuperscriptBox["L", "m"]}]}], "}"}]}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Example", ":"}], " ", "*)"}], " ", 
   RowBox[{"taylorg", "[", 
    RowBox[{"PONY", ",", "3"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.620533919733075*^9, 3.620533925631954*^9}}],

Cell[BoxData[
 RowBox[{"1", "-", 
  RowBox[{
   SuperscriptBox["L", "m"], " ", 
   SuperscriptBox["PONY", "m"]}], "+", 
  RowBox[{
   SuperscriptBox["L", 
    RowBox[{"2", " ", "m"}]], " ", 
   SuperscriptBox["PONY", 
    RowBox[{"2", " ", "m"}]]}], "-", 
  RowBox[{
   SuperscriptBox["L", 
    RowBox[{"3", " ", "m"}]], " ", 
   SuperscriptBox["PONY", 
    RowBox[{"3", " ", "m"}]]}]}]], "Output",
 CellChangeTimes->{{3.620533876351222*^9, 3.6205338928605347`*^9}, 
   3.6205339262448378`*^9, 3.6205450741786833`*^9, 3.620619265478208*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"maxOrder", " ", "=", " ", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"demofunks", "[", "p_", "]"}], " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"g", "[", "p", "]"}], "}"}], "~", "Join", "~", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"taylorg", "[", 
       RowBox[{"p", ",", "n"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "0", ",", "maxOrder"}], "}"}]}], "]"}]}], "/.", " ", 
   
   RowBox[{"{", 
    RowBox[{
     RowBox[{"L", "\[Rule]", " ", "1"}], ",", " ", 
     RowBox[{"m", "\[Rule]", " ", "2"}]}], "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"demolabels", " ", "=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", "\"\<full\>\"", "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"\"\<k=\>\"", "<>", 
        RowBox[{"ToString", "@", "#"}]}], "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", "maxOrder"}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nonconvergenceColor", "=", 
   RowBox[{"Lighter", "[", 
    RowBox[{"Red", ",", "0.9"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"fig", "=", 
  RowBox[{"Plot", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Evaluate", "@", 
     RowBox[{"demofunks", "[", "p", "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"p", ",", "0", ",", "2"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotRange", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.5"}], ",", "1.5"}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotRangePadding", "\[Rule]", " ", "None"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", "\[IndentingNewLine]", 
    RowBox[{"FrameLabel", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<p L\>\"", ",", 
       "\"\<\!\(\*SuperscriptBox[\(\[ScriptCapitalA]\), \(-2\)]\)\>\""}], 
      "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"Epilog", " ", "\[Rule]", " ", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"EpiLabels", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "1.8", ",", "1.8", ",", "1.15", ",", "1.13", ",", "1.07", ",", 
          "1.07"}], "}"}], ",", " ", 
        RowBox[{"demofunks", "[", "X", "]"}], ",", "\[IndentingNewLine]", 
        "demolabels", ",", "1.2", ",", "nonconvergenceColor"}], "]"}], 
      "\[IndentingNewLine]", "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"Prolog", "\[Rule]", " ", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"nonconvergenceColor", ",", "\[IndentingNewLine]", 
       RowBox[{"Rectangle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"-", "0.5"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "1.5"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
      "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"AspectRatio", "\[Rule]", " ", 
     RowBox[{"1", "/", "2"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "\[Rule]", " ", 
     RowBox[{"13", "cm"}]}]}], "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.620533884223287*^9, 3.620533887492799*^9}, {
  3.620533929810252*^9, 3.6205341772421827`*^9}, {3.6205342693288097`*^9, 
  3.6205343320278473`*^9}, {3.62053439811664*^9, 3.620534415139306*^9}, {
  3.620534448418097*^9, 3.62053463244635*^9}, {3.620534680995268*^9, 
  3.620534773810131*^9}, {3.620534814511422*^9, 3.62053491589462*^9}, {
  3.620535377706484*^9, 3.6205354390303707`*^9}, {3.620535548881031*^9, 
  3.620535558023362*^9}, {3.6205356563554792`*^9, 3.6205356606958857`*^9}, {
  3.620619282427453*^9, 3.620619302864193*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"1", "+", 
     SuperscriptBox["p", "2"]}]], ",", "1", ",", 
   RowBox[{"1", "-", 
    SuperscriptBox["p", "2"]}], ",", 
   RowBox[{"1", "-", 
    SuperscriptBox["p", "2"], "+", 
    SuperscriptBox["p", "4"]}], ",", 
   RowBox[{"1", "-", 
    SuperscriptBox["p", "2"], "+", 
    SuperscriptBox["p", "4"], "-", 
    SuperscriptBox["p", "6"]}], ",", 
   RowBox[{"1", "-", 
    SuperscriptBox["p", "2"], "+", 
    SuperscriptBox["p", "4"], "-", 
    SuperscriptBox["p", "6"], "+", 
    SuperscriptBox["p", "8"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6205345095070257`*^9, 3.620534517924491*^9}, {
   3.62053455199501*^9, 3.620534632801899*^9}, {3.6205346834221992`*^9, 
   3.620534729855811*^9}, {3.620534768603158*^9, 3.6205347741716337`*^9}, {
   3.620534839659726*^9, 3.620534916058984*^9}, {3.6205353812322397`*^9, 
   3.620535439485759*^9}, {3.620535549879836*^9, 3.620535558346175*^9}, 
   3.620535660888167*^9, 3.620545077056542*^9, {3.620619287513607*^9, 
   3.620619303001018*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
C47d/u/SeEhUWzpBH0JIaMm4l5zMw78uOriy
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ7ZX64uKBl6l2DGDwwX6BqH9bl+QUexi/kWOzeqfk
Ejg/InLh+g8ft8D53P8bY9zl9sP5qoHvXhzuPgLnl5+ztJ/x5SScL75F8B4j
43k4f9sj5zPnbS7B+Yey5kpHvrkC539Vs+Vfm3sdzmf6uVpAWvUWnG/2P2Fb
8Lo7cP6ZFpNzx7Tuw/nyE17/XPnuAZz/+vv9e1cNHsH5S17tPsXX9xjO55Nd
/v7Jkydwfk/m1rQFKs/g/G8Oq59k1D+H80uMjmwRO/wCzr+/7kj3RcVXcP7v
rCuzNatew/najuz/0na/gfPdFymmbxR/hwgv2XilhzHv4XydN6Hc130/wPnC
/B84jvxC8Fn2z16vPOcjnJ9tsvsmp/cnOH+1Z9KCfd8Q/K+vpQSeTfsM528N
dmee4vIFzq/3aJ2/5RmCr3jX68bi1q9wvpV5yxRJo29wfozc+Z+MlxH8r6d6
HxU0fofzZ7DElQSp/EC4/97WRUxHEHzW2sYQy8KfcD7Dyrj1j4R+wflFs9b3
Ch1C8Pdqd3AI5v2G8wW9inSa+P7A+Xd0L1yu3IPgb5hnr/Ik7i+cH7veTFD2
H4Lf0Lqw8c6qf3D+2heys/l8/sP5Si0iHuzLEPzp8txf//9H8AHvfRTH
     "]]}, 
   {Hue[0.1421359549995791, 0.6, 0.6], LineBox[CompressedData["
1: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
/6dL+D8IrdW8
     "]]}, 
   {Hue[0.37820393249936934`, 0.6, 0.6], LineBox[CompressedData["
1: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
1PNHwff/4yf+B3sh4Sc=
     "]]}, 
   {Hue[0.6142719099991583, 0.6, 0.6], LineBox[CompressedData["
1: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
J4NLkZFfkjQGsf9HH+NfzPzoNA==
     "]]}, 
   {Hue[0.8503398874989481, 0.6, 0.6], LineBox[CompressedData["
1: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
sXzOzD9PXg4h7NXTx7a7xJD4/2sY/wfkZiFg
     "]]}},
  AspectRatio->NCache[
    Rational[1, 2], 0.5],
  Axes->True,
  AxesOrigin->{0, 0},
  Epilog->{{
     InsetBox[
      BoxData[
       FormBox[
        RotationBox[
         InterpretationBox[
          Cell[
           BoxData[
            FormBox["\"full\"", TextForm]], "InlineText", Background -> 
           RGBColor[1., 0.9, 0.9]], 
          Text["full", Background -> RGBColor[1., 0.9, 0.9]]], 
         BoxRotation -> -0.16469596899082406`], TraditionalForm]], {1.8, 
      0.23584905660377356`}], 
     InsetBox[
      BoxData[
       FormBox[
        RotationBox[
         InterpretationBox[
          Cell[
           BoxData[
            FormBox["\"k=0\"", TextForm]], "InlineText", Background -> 
           RGBColor[1., 0.9, 0.9]], 
          Text["k=0", Background -> RGBColor[1., 0.9, 0.9]]], BoxRotation -> 
         0.], TraditionalForm]], {1.8, 1}], 
     InsetBox[
      BoxData[
       FormBox[
        RotationBox[
         InterpretationBox[
          Cell[
           BoxData[
            FormBox["\"k=1\"", TextForm]], "InlineText", Background -> 
           RGBColor[1., 0.9, 0.9]], 
          Text["k=1", Background -> RGBColor[1., 0.9, 0.9]]], 
         BoxRotation -> -0.9672241552111714], TraditionalForm]], {
      1.15, -0.3224999999999998}], 
     InsetBox[
      BoxData[
       FormBox[
        RotationBox[
         InterpretationBox[
          Cell[
           BoxData[
            FormBox["\"k=2\"", TextForm]], "InlineText", Background -> 
           RGBColor[1., 0.9, 0.9]], 
          Text["k=2", Background -> RGBColor[1., 0.9, 0.9]]], BoxRotation -> 
         1.0778071372881446`], TraditionalForm]], {1.13, 
      1.3535736099999995`}], 
     InsetBox[
      BoxData[
       FormBox[
        RotationBox[
         InterpretationBox[
          Cell[
           BoxData[
            FormBox["\"k=3\"", TextForm]], "InlineText", Background -> 
           RGBColor[1., 0.9, 0.9]], 
          Text["k=3", Background -> RGBColor[1., 0.9, 0.9]]], 
         BoxRotation -> -1.163146058260893], TraditionalForm]], {
      1.07, -0.3348343418490003}], 
     InsetBox[
      BoxData[
       FormBox[
        RotationBox[
         InterpretationBox[
          Cell[
           BoxData[
            FormBox["\"k=4\"", TextForm]], "InlineText", Background -> 
           RGBColor[1., 0.9, 0.9]], 
          Text["k=4", Background -> RGBColor[1., 0.9, 0.9]]], BoxRotation -> 
         1.1938516002996642`], TraditionalForm]], {1.07, 1.38335183798292}]}},
  
  Frame->True,
  FrameLabel->{{
     FormBox[
     "\"\\!\\(\\*SuperscriptBox[\\(\[ScriptCapitalA]\\), \\(-2\\)]\\)\"", 
      TraditionalForm], None}, {
     FormBox["\"p L\"", TraditionalForm], None}},
  ImageSize->368.503937007874,
  Method->{},
  PlotRange->{{0, 2}, {-0.5, 1.5}},
  PlotRangeClipping->True,
  PlotRangePadding->None,
  Prolog->{
    RGBColor[1., 0.9, 0.9], 
    RectangleBox[{1, -0.5}, {2, 1.5}]}]], "Output",
 CellChangeTimes->{{3.6205345095070257`*^9, 3.620534517924491*^9}, {
   3.62053455199501*^9, 3.620534632801899*^9}, {3.6205346834221992`*^9, 
   3.620534729855811*^9}, {3.620534768603158*^9, 3.6205347741716337`*^9}, {
   3.620534839659726*^9, 3.620534916058984*^9}, {3.6205353812322397`*^9, 
   3.620535439485759*^9}, {3.620535549879836*^9, 3.620535558346175*^9}, 
   3.620535660888167*^9, 3.620545077056542*^9, {3.620619287513607*^9, 
   3.620619303015143*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<../figures/conv-radius.pdf\>\"", ",", " ", "fig"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.620535441241516*^9, 3.620535447943885*^9}}],

Cell[BoxData["\<\"../figures/conv-radius.pdf\"\>"], "Output",
 CellChangeTimes->{
  3.620535449863348*^9, {3.620535662698716*^9, 3.620535668706365*^9}, 
   3.620619308444713*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Kempf-Ansatz", "Section",
 CellChangeTimes->{{3.6205354601317787`*^9, 3.620535460206193*^9}, {
  3.6205367877552643`*^9, 3.620536789105338*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"delta", "[", "x_", "]"}], " ", "=", " ", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"2", "\[Pi]", " ", 
      SuperscriptBox["\[Sigma]", "2"]}], "]"}]], " ", 
   RowBox[{"Exp", "[", " ", 
    RowBox[{
     RowBox[{"-", " ", 
      SuperscriptBox["x", "2"]}], " ", "/", " ", 
     RowBox[{"(", 
      RowBox[{"2", 
       SuperscriptBox["\[Sigma]", "2"]}], ")"}]}], " ", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6199313762720623`*^9, 3.619931412621078*^9}, {
  3.6199318116045*^9, 3.619931861571391*^9}, {3.620103714834064*^9, 
  3.620103720390785*^9}, {3.6204577265669193`*^9, 3.6204577418579397`*^9}}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox["x", "2"], 
     RowBox[{"2", " ", 
      SuperscriptBox["\[Sigma]", "2"]}]]}]], 
  RowBox[{
   SqrtBox[
    RowBox[{"2", " ", "\[Pi]"}]], " ", 
   SqrtBox[
    SuperscriptBox["\[Sigma]", "2"]]}]]], "Output",
 CellChangeTimes->{
  3.6199314140902033`*^9, {3.6199318532100067`*^9, 3.6199318621165333`*^9}, 
   3.6199764840749893`*^9, 3.62006896568312*^9, 3.62010361901047*^9, {
   3.6201037151668167`*^9, 3.620103720673738*^9}, 3.62045754724323*^9, {
   3.620457730435169*^9, 3.620457742251995*^9}, 3.620536797687544*^9, 
   3.6205450796342793`*^9, 3.620560515954771*^9, 3.620619310052351*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"\[Sigma]", "\[Element]", "Reals"}], ",", " ", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"delta", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.620103634339731*^9, 3.62010364105558*^9}, {
  3.6201036946040783`*^9, 3.6201037069712553`*^9}, {3.620457752063555*^9, 
  3.620457753816831*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{
  3.620103642393421*^9, {3.620103707575762*^9, 3.6201037227663927`*^9}, 
   3.620457548138933*^9, {3.620457733518064*^9, 3.620457755089901*^9}, 
   3.6205367999584837`*^9, 3.620560518077895*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Dichte mit g-Approximation", "Subsection",
 CellChangeTimes->{{3.6205607549302053`*^9, 3.620560779950173*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"maxOrder", " ", "=", " ", "10"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Das", " ", "sind", " ", "einfache", " ", "Ableitungen"}], ",", 
    " ", 
    RowBox[{"geht", " ", "rasend", " ", "schnell"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"ClearAll", "[", 
  RowBox[{"T00sOrders", ",", " ", "T00s"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"T00sOrders", "[", "m_", "]"}], ":=", " ", 
   RowBox[{
    RowBox[{"T00sOrders", "[", "m", "]"}], "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Assuming", "[", 
       RowBox[{
        RowBox[{"\[Sigma]", " ", ">", "0"}], ",", " ", "\[IndentingNewLine]", 
        
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"SeriesCoefficient", "[", 
           RowBox[{
            FractionBox["1", 
             RowBox[{"1", "+", "x"}]], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "0", ",", "k"}], "}"}]}], "]"}], " ", "*"}], 
         "*)"}], 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"delta", "[", "x", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"m", " ", "k"}]}], "}"}]}], "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "0", ",", "maxOrder"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T00s", "[", "m_", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"T00s", "[", "m", "]"}], "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"T00sOrders", "[", "m", "]"}], "\[LeftDoubleBracket]", "o", 
        "\[RightDoubleBracket]"}], ",", 
       RowBox[{"{", 
        RowBox[{"o", ",", "1", ",", "maxo"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"maxo", ",", " ", "1", ",", 
       RowBox[{"maxOrder", "+", "1"}]}], "}"}]}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.6201037524162416`*^9, 3.6201037998276243`*^9}, {
   3.620104659551724*^9, 3.620104676657412*^9}, {3.620104720682724*^9, 
   3.62010475856419*^9}, {3.62010579185406*^9, 3.6201058091433764`*^9}, {
   3.620560845341082*^9, 3.620560871857806*^9}, {3.620560915587675*^9, 
   3.620560963228746*^9}, {3.620561032913946*^9, 3.620561042512918*^9}, {
   3.62056108172409*^9, 3.620561171803494*^9}, {3.620561211839245*^9, 
   3.620561240590227*^9}, {3.62056137221574*^9, 3.6205613869363413`*^9}, 
   3.620561695169471*^9, {3.620619946105856*^9, 3.620619949344192*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fig", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "0.05"}], "}"}], " ", 
       RowBox[{
        RowBox[{"T00s", "[", "3", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "3"}], "]"}], "]"}]}], "/.", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Sigma]", "\[Rule]", " ", "1"}], ",", " ", 
        RowBox[{"x", "\[Rule]", " ", "X"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"X", ",", "0", ",", "4"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotRange", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.3"}], ",", "1"}], "}"}]}], ",", "\[IndentingNewLine]", 
    
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"\"\<k=\>\"", "<>", 
          RowBox[{"ToString", "[", "n", "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "0", ",", "maxOrder"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"Right", ",", "Top"}], "}"}]}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotRangePadding", "\[Rule]", " ", "None"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotStyle", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{"Blue", ",", "Red", ",", " ", 
       RowBox[{"Darker", "@", "Green"}]}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"AxesLabel", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<r/L\>\"", ",", " ", 
       "\"\<\!\(\*SubscriptBox[\(T\), \(00\)]\)\>\""}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "\[Rule]", " ", 
     RowBox[{"15", "cm"}]}]}], "\[IndentingNewLine]", "]"}], 
  RowBox[{"(*", 
   RowBox[{"~", "Manipulate", "~", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"S", ",", "1"}], "}"}], ",", "0.003", ",", "3"}], "}"}]}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.620561258041005*^9, 3.6205612990127907`*^9}, {
   3.6205613506520452`*^9, 3.6205613548399067`*^9}, {3.62056140506434*^9, 
   3.62056145485681*^9}, {3.620561601606143*^9, 3.6205616079398108`*^9}, {
   3.6205617204727716`*^9, 3.620561733594705*^9}, {3.6205617736664467`*^9, 
   3.6205618092123013`*^9}, {3.620619323747734*^9, 3.620619334070478*^9}, {
   3.620619430868291*^9, 3.62061947402929*^9}, {3.620619512064623*^9, 
   3.6206195127184467`*^9}, {3.6206195659404593`*^9, 3.62061957668559*^9}, 
   3.62062047711371*^9, {3.620620726773625*^9, 3.620620731618976*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {}, 
     {RGBColor[0, 0, 1], LineBox[CompressedData["
1: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
diIrQQT+B6ibH5Y=
       "]]}, 
     {RGBColor[1, 0, 0], LineBox[CompressedData["
1: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
w/59Df8PT4etOA==
       "]]}, 
     {RGBColor[0, 
       NCache[
        Rational[2, 3], 0.6666666666666666], 0], LineBox[CompressedData["
1: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
uU2i1ldifO5dUdxGOhy2rHU4OkBFA8MN0hpb6aDVFD27d5SK3ot1vPHYQ4fb
aTqf88epKL387WLlPjo03Vp9rzRFRXLMev/lA3Q4pe4UJD9HRYKqBVmyiA5W
OfsENq5Q0TIjlm6vQ4e3Fn9oLWw0ZFJwI0NJnw60Ne8pN8k0BDL8XwYM6VBm
eZhrhIuG9odA0cxpOohwrXIm8NJQweHG18ZmdLjGKCMb0GjoRVWnWJwFHaR5
NFYLhGjo3K1Eji5rOvi+4Vx2EqYhTr3WD802dGi3qVkSE6Wh19+ueWXZ0UGB
Ev6nSZyGLihEmVxzoENwofZC4CZivaqmh/h5OvTYUeb2SNFQgoTfQoYTHfbS
mKxfMjRUNbfpr/RFOvxyMJrQlach2ev8vFWX6KDOLzS2uoOGfBm/Tk+70CG6
uGM4X5HYb0wthXSFDtPno3457qIh5X15fP8I1hI0+yGiQkO7tdpKelzpkFwi
Otiwj4Y8bCUbX1ylw+KFr/3/HaChnepcFibXCD3XJfbuUqOhojUTIWMEp2Pr
rz/UaSgRbXJzdqMD6dLm7ugjNFRR2nOwleCzwoOd2ho0FPbQnG2zOx0Kyp93
LGsSev178+0MwZTLjm25J2loizV5xZNgBxHZFntdGuLafszDn+CSj8NNwgY0
ZNp53v4ywcKu6Q11RjTU2GQwepzgK2IudXQTGiq0bZZdS3B11c4aJVMaqix+
eTCPeL7ktanKQXMaam4OOaJBsLdEXsUTSxrS0+c/W0acv6XGrUzrHA29j2pP
3UqwnLtK6V9bGgpMM0QeRPw3Ni0UZzvQkKP4b61MQp8vdYXvbJ1oKHrttr4m
Qr/dnj6F65xpaC1ZYVP3ZcKPmw+9qXGhIV2+E7JMQv/vDf/yfV1p6MO9Fxuy
iPyoeZXm7nSjIck9ttTrznR4LB2YPeBBQ3FLYdvkiXxONB3JfORFQzxiG25U
E/nW9CGna/rS0Ib5+YP6hB9+N4ekZgYQ/uP9e2yjPR0M/bSenwuiIXr4M6aD
LR1eb+N5JniLhn4qxSpFn6ODhf+9BO/bNJSiXj764Swd8uUM4nbcoyG7myMB
ueZ04O3gj+mLoCHSo1O2EaZ0+LD98SONJzSklCz6H58xHdZ1nn7wO5rgnJ+z
uUQ9XL6xISI9joYuRzG3qxP1sqkr7jZ/Mg2x8a0zlDhJh8Bbz270pNPQGw2n
Z6OH6UD1Wqttm0Xo+T1OUOoQHeIuXBb8lUND/Gsn0jT304Ghc+D5VAENqegH
vTq3m/CzQGslCdMQx8Rj+wai3t3IqvdCy2moI1D9jr80HVbnEk5TKmkoIr0t
UlKSqMeuC7/W19HQb+WkyD0idNB5ysYl307ofZ+3J5GbDl0R51uyPtFQi3uG
Sysn4a8bjTG7u4j9leIj5tnp8J9DjLxaLw2ZMaN/8i35Qe52ZR2DIRpSMAaI
GPED4cJz9z3/Ev5uCPvZUOUHz19XnVlaJuqjup4lWO4HynE7JAPY+JDE15pJ
nQ9EP/X/nRPGyYfW5b/gf5zvB/RjEa3xfHxoOTBLK+CpHww2l66rkOFD6YHF
7B3ufpA1vDGepsuHnPzuXlq73g/CEm/Z9OnzoR9hxdQ/VD9wODWxNduID2k1
b7P7sobovx8+5OqZ8iEz6uh9jz++cDvibPVdOz6ke6B6iv2rL1zYF8vi8eFD
gbVOR2MSfUE6eJ3W2pd8yGND9U5nUV9Y2U+nfn7Nhyo/rjet5PeF7onvbS8z
+NDxl0nXhLh8IdKUYaWZx4ceu9n2RC74wOr2U+63PvChqf7cXbztPtDTGvGU
3M6HnoRGfRG87QNFIb/t2z/xofEpfseaQB94fOic/PMuPqKeEqzdvHxAJ1Wx
4GgfH+KY1/+b4eAD772b6m6M8KFINyGrXHUfiNq5N8JonA+13301KLbXB64N
JphITRHxxnbdo+/wATldl/6yOT70529u9lYRH+Bg73gR+ZsPKcRMG16m+cDA
m0PONkt8yOH98rVMDh/44PxcSXmZDy3JTMh+X/KGaEne+dVVPvT2ekmYAMsb
/gevSOQj
       "]]}}, InsetBox[
     TemplateBox[{
      "\"k=0\"","\"k=1\"","\"k=2\"","\"k=3\"","\"k=4\"","\"k=5\"","\"k=6\"",
       "\"k=7\"","\"k=8\"","\"k=9\"","\"k=10\""},
      "LineLegend",
      DisplayFunction->(StyleBox[
        StyleBox[
         PaneBox[
          TagBox[
           GridBox[{{
              TagBox[
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> 1, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> 1, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {}}}, 
                   AspectRatio -> Full, ImageSize -> {20, 10}, 
                   PlotRangePadding -> None, ImagePadding -> 1, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}],
                "Grid"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
           "Grid"], Alignment -> Left, AppearanceElements -> None, 
          ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"],
          LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
        Background -> Automatic, StripOnInput -> False]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{"RGBColor", "[", 
                   RowBox[{"0", ",", "0", ",", "1"}], "]"}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{"RGBColor", "[", 
                   RowBox[{"1", ",", "0", ",", "0"}], "]"}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{"RGBColor", "[", 
                   RowBox[{"0", ",", 
                    FractionBox["2", "3"], ",", "0"}], "]"}], "]"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10, ",", #11}], "}"}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.99, 0.99}], ImageScaled[{1, 1}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->True,
   AxesLabel->{
     FormBox["\"r/L\"", TraditionalForm], 
     FormBox[
     "\"\\!\\(\\*SubscriptBox[\\(T\\), \\(00\\)]\\)\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   ImageSize->425.1968503937008,
   Method->{},
   PlotRange->{{0, 4}, {-0.3, 1}},
   PlotRangeClipping->True,
   PlotRangePadding->None],
  InterpretTemplate[Legended[
    Graphics[{{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        RGBColor[0, 0, 1], 
        Line[CompressedData["
1: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
diIrQQT+B6ibH5Y=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        RGBColor[1, 0, 0], 
        Line[CompressedData["
1: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
w/59Df8PT4etOA==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        RGBColor[0, 
         Rational[2, 3], 0], 
        Line[CompressedData["
1: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
uU2i1ldifO5dUdxGOhy2rHU4OkBFA8MN0hpb6aDVFD27d5SK3ot1vPHYQ4fb
aTqf88epKL387WLlPjo03Vp9rzRFRXLMev/lA3Q4pe4UJD9HRYKqBVmyiA5W
OfsENq5Q0TIjlm6vQ4e3Fn9oLWw0ZFJwI0NJnw60Ne8pN8k0BDL8XwYM6VBm
eZhrhIuG9odA0cxpOohwrXIm8NJQweHG18ZmdLjGKCMb0GjoRVWnWJwFHaR5
NFYLhGjo3K1Eji5rOvi+4Vx2EqYhTr3WD802dGi3qVkSE6Wh19+ueWXZ0UGB
Ev6nSZyGLihEmVxzoENwofZC4CZivaqmh/h5OvTYUeb2SNFQgoTfQoYTHfbS
mKxfMjRUNbfpr/RFOvxyMJrQlach2ev8vFWX6KDOLzS2uoOGfBm/Tk+70CG6
uGM4X5HYb0wthXSFDtPno3457qIh5X15fP8I1hI0+yGiQkO7tdpKelzpkFwi
Otiwj4Y8bCUbX1ylw+KFr/3/HaChnepcFibXCD3XJfbuUqOhojUTIWMEp2Pr
rz/UaSgRbXJzdqMD6dLm7ugjNFRR2nOwleCzwoOd2ho0FPbQnG2zOx0Kyp93
LGsSev178+0MwZTLjm25J2loizV5xZNgBxHZFntdGuLafszDn+CSj8NNwgY0
ZNp53v4ywcKu6Q11RjTU2GQwepzgK2IudXQTGiq0bZZdS3B11c4aJVMaqix+
eTCPeL7ktanKQXMaam4OOaJBsLdEXsUTSxrS0+c/W0acv6XGrUzrHA29j2pP
3UqwnLtK6V9bGgpMM0QeRPw3Ni0UZzvQkKP4b61MQp8vdYXvbJ1oKHrttr4m
Qr/dnj6F65xpaC1ZYVP3ZcKPmw+9qXGhIV2+E7JMQv/vDf/yfV1p6MO9Fxuy
iPyoeZXm7nSjIck9ttTrznR4LB2YPeBBQ3FLYdvkiXxONB3JfORFQzxiG25U
E/nW9CGna/rS0Ib5+YP6hB9+N4ekZgYQ/uP9e2yjPR0M/bSenwuiIXr4M6aD
LR1eb+N5JniLhn4qxSpFn6ODhf+9BO/bNJSiXj764Swd8uUM4nbcoyG7myMB
ueZ04O3gj+mLoCHSo1O2EaZ0+LD98SONJzSklCz6H58xHdZ1nn7wO5rgnJ+z
uUQ9XL6xISI9joYuRzG3qxP1sqkr7jZ/Mg2x8a0zlDhJh8Bbz270pNPQGw2n
Z6OH6UD1Wqttm0Xo+T1OUOoQHeIuXBb8lUND/Gsn0jT304Ghc+D5VAENqegH
vTq3m/CzQGslCdMQx8Rj+wai3t3IqvdCy2moI1D9jr80HVbnEk5TKmkoIr0t
UlKSqMeuC7/W19HQb+WkyD0idNB5ysYl307ofZ+3J5GbDl0R51uyPtFQi3uG
Sysn4a8bjTG7u4j9leIj5tnp8J9DjLxaLw2ZMaN/8i35Qe52ZR2DIRpSMAaI
GPED4cJz9z3/Ev5uCPvZUOUHz19XnVlaJuqjup4lWO4HynE7JAPY+JDE15pJ
nQ9EP/X/nRPGyYfW5b/gf5zvB/RjEa3xfHxoOTBLK+CpHww2l66rkOFD6YHF
7B3ufpA1vDGepsuHnPzuXlq73g/CEm/Z9OnzoR9hxdQ/VD9wODWxNduID2k1
b7P7sobovx8+5OqZ8iEz6uh9jz++cDvibPVdOz6ke6B6iv2rL1zYF8vi8eFD
gbVOR2MSfUE6eJ3W2pd8yGND9U5nUV9Y2U+nfn7Nhyo/rjet5PeF7onvbS8z
+NDxl0nXhLh8IdKUYaWZx4ceu9n2RC74wOr2U+63PvChqf7cXbztPtDTGvGU
3M6HnoRGfRG87QNFIb/t2z/xofEpfseaQB94fOic/PMuPqKeEqzdvHxAJ1Wx
4GgfH+KY1/+b4eAD772b6m6M8KFINyGrXHUfiNq5N8JonA+13301KLbXB64N
JphITRHxxnbdo+/wATldl/6yOT70529u9lYRH+Bg73gR+ZsPKcRMG16m+cDA
m0PONkt8yOH98rVMDh/44PxcSXmZDy3JTMh+X/KGaEne+dVVPvT2ekmYAMsb
/gevSOQj
         "]]}}}, {
     AspectRatio -> GoldenRatio^(-1), Axes -> True, 
      AxesLabel -> {"r/L", "\!\(\*SubscriptBox[\(T\), \(00\)]\)"}, 
      AxesOrigin -> {0, 0}, ImageSize -> 425.1968503937008, Method -> {}, 
      PlotRange -> {{0, 4}, {-0.3, 1}}, PlotRangeClipping -> True, 
      PlotRangePadding -> None}], {
     Placed[
      Unevaluated[
       LineLegend[{
         Directive[
          RGBColor[0, 0, 1]], 
         Directive[
          RGBColor[1, 0, 0]], 
         Directive[
          RGBColor[0, 
           Rational[2, 3], 0]]}, {
        "k=0", "k=1", "k=2", "k=3", "k=4", "k=5", "k=6", "k=7", "k=8", "k=9", 
         "k=10"}, LegendLayout -> "Column"]], {Right, Top}, Identity]}]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.620561269809801*^9, 3.620561321447056*^9}, 
   3.620561361854208*^9, {3.6205613944028807`*^9, 3.620561455591529*^9}, {
   3.620561603594769*^9, 3.62056160824457*^9}, {3.620561697525964*^9, 
   3.6205617338015614`*^9}, {3.6205617933510513`*^9, 
   3.6205618099935923`*^9}, {3.62061931550635*^9, 3.620619334265978*^9}, {
   3.6206194321629267`*^9, 3.620619474375761*^9}, 3.620619513056603*^9, 
   3.620619577154215*^9, 3.620620477269178*^9, 3.62062073207861*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<../figures/t00-kempf.pdf\>\"", ",", " ", "fig"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.620561811667438*^9, 3.620561818044365*^9}}],

Cell[BoxData["\<\"../figures/t00-kempf.pdf\"\>"], "Output",
 CellChangeTimes->{
  3.620561818445703*^9, {3.620619487041778*^9, 3.62061951725106*^9}, 
   3.620620480007601*^9, 3.6206207339411383`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"T00s", "[", "0", "]"}]], "Input",
 CellChangeTimes->{{3.620619878216247*^9, 3.620619884442136*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      FractionBox[
       SuperscriptBox["x", "2"], 
       RowBox[{"2", " ", 
        SuperscriptBox["\[Sigma]", "2"]}]]}]], 
    RowBox[{
     SqrtBox[
      RowBox[{"2", " ", "\[Pi]"}]], " ", 
     SqrtBox[
      SuperscriptBox["\[Sigma]", "2"]]}]], ",", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["x", "2"], 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Sigma]", "2"]}]]}]], " ", 
     SqrtBox[
      FractionBox["2", "\[Pi]"]]}], 
    SqrtBox[
     SuperscriptBox["\[Sigma]", "2"]]], ",", 
   FractionBox[
    RowBox[{"3", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["x", "2"], 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Sigma]", "2"]}]]}]]}], 
    RowBox[{
     SqrtBox[
      RowBox[{"2", " ", "\[Pi]"}]], " ", 
     SqrtBox[
      SuperscriptBox["\[Sigma]", "2"]]}]], ",", 
   FractionBox[
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["x", "2"], 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Sigma]", "2"]}]]}]], " ", 
     SqrtBox[
      FractionBox["2", "\[Pi]"]]}], 
    SqrtBox[
     SuperscriptBox["\[Sigma]", "2"]]], ",", 
   FractionBox[
    RowBox[{"5", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["x", "2"], 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Sigma]", "2"]}]]}]]}], 
    RowBox[{
     SqrtBox[
      RowBox[{"2", " ", "\[Pi]"}]], " ", 
     SqrtBox[
      SuperscriptBox["\[Sigma]", "2"]]}]], ",", 
   FractionBox[
    RowBox[{"3", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["x", "2"], 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Sigma]", "2"]}]]}]], " ", 
     SqrtBox[
      FractionBox["2", "\[Pi]"]]}], 
    SqrtBox[
     SuperscriptBox["\[Sigma]", "2"]]], ",", 
   FractionBox[
    RowBox[{"7", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["x", "2"], 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Sigma]", "2"]}]]}]]}], 
    RowBox[{
     SqrtBox[
      RowBox[{"2", " ", "\[Pi]"}]], " ", 
     SqrtBox[
      SuperscriptBox["\[Sigma]", "2"]]}]], ",", 
   FractionBox[
    RowBox[{"4", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["x", "2"], 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Sigma]", "2"]}]]}]], " ", 
     SqrtBox[
      FractionBox["2", "\[Pi]"]]}], 
    SqrtBox[
     SuperscriptBox["\[Sigma]", "2"]]], ",", 
   FractionBox[
    RowBox[{"9", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["x", "2"], 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Sigma]", "2"]}]]}]]}], 
    RowBox[{
     SqrtBox[
      RowBox[{"2", " ", "\[Pi]"}]], " ", 
     SqrtBox[
      SuperscriptBox["\[Sigma]", "2"]]}]], ",", 
   FractionBox[
    RowBox[{"5", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["x", "2"], 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Sigma]", "2"]}]]}]], " ", 
     SqrtBox[
      FractionBox["2", "\[Pi]"]]}], 
    SqrtBox[
     SuperscriptBox["\[Sigma]", "2"]]], ",", 
   FractionBox[
    RowBox[{"11", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["x", "2"], 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Sigma]", "2"]}]]}]]}], 
    RowBox[{
     SqrtBox[
      RowBox[{"2", " ", "\[Pi]"}]], " ", 
     SqrtBox[
      SuperscriptBox["\[Sigma]", "2"]]}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.620619880934038*^9, 3.62061988496027*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"MsOrders", "[", "m_", "]"}], ":=", 
  RowBox[{"Monitor", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Integrate", "[", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"T00sOrders", "[", "m", "]"}], "\[LeftDoubleBracket]", "o", 
          "\[RightDoubleBracket]"}], " ", 
         SuperscriptBox["x", "m"]}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "X"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"o", ",", "1", ",", " ", 
        RowBox[{"Length", "@", 
         RowBox[{"T00sOrders", "[", "m", "]"}]}]}], "}"}]}], "]"}], ",", " ", 
    "o"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ms", "[", "m_", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"Ms", "[", "m", "]"}], "=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"MO", "=", " ", 
       RowBox[{"MsOrders", "[", "m", "]"}]}], "}"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"MO", "\[LeftDoubleBracket]", "o", "\[RightDoubleBracket]"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"o", ",", "1", ",", "maxo"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"maxo", ",", " ", "1", ",", 
         RowBox[{"maxOrder", "+", "1"}]}], "}"}]}], "]"}]}], 
    "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.620619728526664*^9, 3.6206197429996777`*^9}, {
  3.620619806331848*^9, 3.620619855995667*^9}, {3.620619889188182*^9, 
  3.620619889500546*^9}, {3.6206199395970592`*^9, 3.6206200656105347`*^9}, {
  3.620620098485289*^9, 3.620620098659463*^9}, {3.620620132220395*^9, 
  3.620620154790986*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fig", "=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"m", "=", "3"}], "}"}], ",", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"1", "-", 
         FractionBox[
          RowBox[{"2", " ", 
           RowBox[{"{", 
            RowBox[{"1", ",", "1", ",", "0.2"}], "}"}], 
           RowBox[{
            RowBox[{"Ms", "[", "m", "]"}], "\[LeftDoubleBracket]", 
            RowBox[{"1", ";;", "3"}], "\[RightDoubleBracket]"}]}], 
          SuperscriptBox["X", 
           RowBox[{"m", "-", "1"}]]]}], "/.", " ", 
        RowBox[{"\[Sigma]", "\[Rule]", " ", "1"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"X", ",", "0", ",", "10"}], "}"}], ",", "\[IndentingNewLine]", 
      
      RowBox[{"PlotRange", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1.5"}], "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"Placed", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"\"\<k=\>\"", "<>", 
            RowBox[{"ToString", "[", "n", "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "0", ",", "maxOrder"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"Right", ",", "Bottom"}], "}"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotRangePadding", "\[Rule]", " ", "None"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotStyle", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", "Red", ",", " ", 
         RowBox[{"Darker", "@", "Green"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"AxesLabel", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
        "\"\<r/L\>\"", ",", " ", 
         "\"\<\!\(\*SubscriptBox[\(g\), \(00\)]\)\>\""}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ImageSize", "\[Rule]", " ", 
       RowBox[{"15", "cm"}]}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6206198966484833`*^9, 3.620619923179409*^9}, {
  3.62062017482384*^9, 3.620620194559387*^9}, {3.6206202262611237`*^9, 
  3.620620258675321*^9}, {3.620620333705496*^9, 3.620620483095605*^9}, {
  3.620620608678337*^9, 3.6206206100319357`*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {}, 
     {RGBColor[0, 0, 1], LineBox[CompressedData["
1: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
mOzH/j8GecE4
       "]]}, 
     {RGBColor[1, 0, 0], LineBox[CompressedData["
1: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
YW1NHoF7cYEL5v8BlWJFJw==
       "]]}, 
     {RGBColor[0, 
       NCache[
        Rational[2, 3], 0.6666666666666666], 0], LineBox[CompressedData["
1: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
0OO2Kp3LuMtXDm3u7oqhjmdfWPVw/w/vFGG6
       "]]}}, InsetBox[
     TemplateBox[{
      "\"k=0\"","\"k=1\"","\"k=2\"","\"k=3\"","\"k=4\"","\"k=5\"","\"k=6\"",
       "\"k=7\"","\"k=8\"","\"k=9\"","\"k=10\""},
      "LineLegend",
      DisplayFunction->(StyleBox[
        StyleBox[
         PaneBox[
          TagBox[
           GridBox[{{
              TagBox[
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> 1, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> 1, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {}}}, 
                   AspectRatio -> Full, ImageSize -> {20, 10}, 
                   PlotRangePadding -> None, ImagePadding -> 1, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}],
                "Grid"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
           "Grid"], Alignment -> Left, AppearanceElements -> None, 
          ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"],
          LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
        Background -> Automatic, StripOnInput -> False]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{"RGBColor", "[", 
                   RowBox[{"0", ",", "0", ",", "1"}], "]"}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{"RGBColor", "[", 
                   RowBox[{"1", ",", "0", ",", "0"}], "]"}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{"RGBColor", "[", 
                   RowBox[{"0", ",", 
                    FractionBox["2", "3"], ",", "0"}], "]"}], "]"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10, ",", #11}], "}"}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.99, 0.01}], ImageScaled[{1, 0}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->True,
   AxesLabel->{
     FormBox["\"r/L\"", TraditionalForm], 
     FormBox[
     "\"\\!\\(\\*SubscriptBox[\\(g\\), \\(00\\)]\\)\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   ImageSize->425.1968503937008,
   Method->{},
   PlotRange->{{0, 10}, {0, 1.5}},
   PlotRangeClipping->True,
   PlotRangePadding->None],
  InterpretTemplate[Legended[
    Graphics[{{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        RGBColor[0, 0, 1], 
        Line[CompressedData["
1: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
mOzH/j8GecE4
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        RGBColor[1, 0, 0], 
        Line[CompressedData["
1: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
YW1NHoF7cYEL5v8BlWJFJw==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        RGBColor[0, 
         Rational[2, 3], 0], 
        Line[CompressedData["
1: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
0OO2Kp3LuMtXDm3u7oqhjmdfWPVw/w/vFGG6
         "]]}}}, {
     AspectRatio -> GoldenRatio^(-1), Axes -> True, 
      AxesLabel -> {"r/L", "\!\(\*SubscriptBox[\(g\), \(00\)]\)"}, 
      AxesOrigin -> {0, 0}, ImageSize -> 425.1968503937008, Method -> {}, 
      PlotRange -> {{0, 10}, {0, 1.5}}, PlotRangeClipping -> True, 
      PlotRangePadding -> None}], {
     Placed[
      Unevaluated[
       LineLegend[{
         Directive[
          RGBColor[0, 0, 1]], 
         Directive[
          RGBColor[1, 0, 0]], 
         Directive[
          RGBColor[0, 
           Rational[2, 3], 0]]}, {
        "k=0", "k=1", "k=2", "k=3", "k=4", "k=5", "k=6", "k=7", "k=8", "k=9", 
         "k=10"}, LegendLayout -> "Column"]], {Right, Bottom}, Identity]}]& ],
  
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.620619910265523*^9, 3.620619923450622*^9}, {
   3.6206202133059387`*^9, 3.620620258828258*^9}, {3.620620334094098*^9, 
   3.620620487283843*^9}, 3.620620610435136*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<../figures/g00-kempf.pdf\>\"", ",", " ", "fig"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.620620490198731*^9, 3.620620499696594*^9}}],

Cell[BoxData["\<\"../figures/g00-kempf.pdf\"\>"], "Output",
 CellChangeTimes->{3.620620500137048*^9, 3.6206206121807003`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Regularisierung \[Infinity]\[Rule]L statt Kempf\
\>", "Section",
 CellChangeTimes->{{3.620466431062537*^9, 3.620466445234082*^9}}],

Cell["\<\
M\[ODoubleDot]glicherweise am \[OpenCurlyDoubleQuote]Straight forwardsten\
\[CloseCurlyDoubleQuote] da der Konvergenzradius der Taylorreihe nur begrenzt \
ist: Einfach nur bis L integrieren.

Das Vorgehen ist einfach: Wir taylorn 1/(1+x) bis zu einer gewissen Ordnung \
und rechnen dann \[OpenCurlyDoubleQuote]brute force\[CloseCurlyDoubleQuote] \
die regularisierten Integrale aus. Statt L verwende ich als Limit a, wie im \
Latex-Dokument erw\[ADoubleDot]hnt.

Um eine bessere Performance beim Integrieren zu erreichen (das dauert sonst \
einige Minuten), rechne ich jede Ordnung nur einmal aus und addiere am Ende, \
statt zu beginn. Ich nehme also zu Beginn jede Ordnung f\[UDoubleDot]r sich \
und rechne sie aus.\
\>", "Text",
 CellChangeTimes->{{3.620466456615532*^9, 3.620466476896202*^9}, {
  3.620538225404121*^9, 3.620538286996903*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"this", " ", "would", " ", "make", " ", "the", " ", "full", " ", 
    RowBox[{"series", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"taylor", "[", "order_", "]"}], ":=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Series", "[", 
        RowBox[{
         FractionBox["1", 
          RowBox[{"1", "+", "x"}]], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "0", ",", "order"}], "}"}]}], "]"}], "//", 
       "Normal"}], ")"}], "/.", " ", 
     RowBox[{"x", "\[Rule]", " ", 
      SuperscriptBox["q", 
       RowBox[{"N", "-", "1"}]]}]}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"e", ".", "g", "."}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"taylor", "[", "3", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6204664836489763`*^9, 3.6204664855851393`*^9}, {
   3.620466523607821*^9, 3.620466596000909*^9}, {3.620466626643653*^9, 
   3.620466681201853*^9}, {3.620466838807537*^9, 3.620466839172518*^9}, {
   3.620466884351364*^9, 3.620466885134119*^9}, {3.620467187169485*^9, 
   3.620467188354685*^9}, {3.6204675995275993`*^9, 3.620467636530181*^9}, 
   3.620538091186454*^9, {3.6205382944442472`*^9, 3.62053831948313*^9}, {
   3.620538666440238*^9, 3.620538668837306*^9}, {3.6205393059519033`*^9, 
   3.620539307946104*^9}}],

Cell[BoxData[
 RowBox[{"1", "-", 
  SuperscriptBox["q", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "N"}]], "+", 
  SuperscriptBox["q", 
   RowBox[{
    RowBox[{"-", "2"}], "+", 
    RowBox[{"2", " ", "N"}]}]], "-", 
  SuperscriptBox["q", 
   RowBox[{
    RowBox[{"-", "3"}], "+", 
    RowBox[{"3", " ", "N"}]}]]}]], "Output",
 CellChangeTimes->{
  3.6204676367919903`*^9, {3.6205383162551823`*^9, 3.620538339208907*^9}, 
   3.620538669406127*^9, {3.620539306165328*^9, 3.620539308090993*^9}, 
   3.6205450848365917`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "This", " ", "extracts", " ", "one", " ", "of", " ", "the", " ", "series", 
    " ", "order"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"tlist", "[", "order_", "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"List", "@@", 
       RowBox[{"taylor", "[", 
        RowBox[{"order", "+", "1"}], "]"}]}], ")"}], "\[LeftDoubleBracket]", 
     RowBox[{"order", "+", "1"}], "\[RightDoubleBracket]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"tlist", "[", "0", "]"}], "\[IndentingNewLine]", 
   RowBox[{"tlist", "[", "1", "]"}], "\[IndentingNewLine]", 
   RowBox[{"tlist", "[", "2", "]"}], "\[IndentingNewLine]", 
   RowBox[{"tlist", "[", "3", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.620538303863014*^9, 3.620538353537417*^9}, {
  3.620538625961731*^9, 3.6205386599417686`*^9}, {3.620538798763657*^9, 
  3.6205388484655952`*^9}, {3.62053931334945*^9, 3.620539333484605*^9}, {
  3.620545142580785*^9, 3.620545163592733*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.620538660196581*^9, 3.620538671263715*^9}, {
   3.6205388304923573`*^9, 3.620538848792441*^9}, {3.620539318111588*^9, 
   3.62053933379423*^9}, 3.6205450858627234`*^9, {3.620545143336095*^9, 
   3.620545163962558*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  SuperscriptBox["q", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "N"}]]}]], "Output",
 CellChangeTimes->{{3.620538660196581*^9, 3.620538671263715*^9}, {
   3.6205388304923573`*^9, 3.620538848792441*^9}, {3.620539318111588*^9, 
   3.62053933379423*^9}, 3.6205450858627234`*^9, {3.620545143336095*^9, 
   3.620545163966007*^9}}],

Cell[BoxData[
 SuperscriptBox["q", 
  RowBox[{
   RowBox[{"-", "2"}], "+", 
   RowBox[{"2", " ", "N"}]}]]], "Output",
 CellChangeTimes->{{3.620538660196581*^9, 3.620538671263715*^9}, {
   3.6205388304923573`*^9, 3.620538848792441*^9}, {3.620539318111588*^9, 
   3.62053933379423*^9}, 3.6205450858627234`*^9, {3.620545143336095*^9, 
   3.620545163970048*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  SuperscriptBox["q", 
   RowBox[{
    RowBox[{"-", "3"}], "+", 
    RowBox[{"3", " ", "N"}]}]]}]], "Output",
 CellChangeTimes->{{3.620538660196581*^9, 3.620538671263715*^9}, {
   3.6205388304923573`*^9, 3.620538848792441*^9}, {3.620539318111588*^9, 
   3.62053933379423*^9}, 3.6205450858627234`*^9, {3.620545143336095*^9, 
   3.620545163972267*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Expressions", " ", "are", " ", "now", " ", "in", " ", "terms", " ", "of", 
    " ", "the", " ", "chosen", " ", "order", " ", 
    RowBox[{"\"\<o\>\"", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Achtung", " ", "overall", " ", 
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}]}], ":", " ", 
    RowBox[{"Fourierrichtung", " ", 
     RowBox[{"exp", "[", 
      RowBox[{"+", "Iqz"}], "]"}], " ", "macht", " ", 
     RowBox[{"minus", "."}]}]}], "  ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"vPlus", "[", "o_", "]"}], " ", ":=", 
     RowBox[{
      RowBox[{"-", " ", 
       FractionBox["I", "z"]}], 
      SuperscriptBox["q", 
       RowBox[{"N", "-", "2"}]], " ", 
      RowBox[{"tlist", "[", "o", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"vMinus", "[", "o_", "]"}], " ", ":=", " ", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], 
        RowBox[{"N", "-", "1"}]]}], 
      FractionBox["I", "z"], 
      SuperscriptBox["q", 
       RowBox[{"N", "-", "2"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"tlist", "[", "o", "]"}], "/.", " ", 
        RowBox[{"q", "\[Rule]", " ", 
         RowBox[{"(", 
          RowBox[{"-", "q"}], ")"}]}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"v", "[", "o_", "]"}], " ", ":=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"vPlus", "[", "o", "]"}], 
       RowBox[{"HeavisideTheta", "[", "q", "]"}]}], " ", "+", " ", 
      RowBox[{
       RowBox[{"vMinus", "[", "o", "]"}], 
       RowBox[{"HeavisideTheta", "[", 
        RowBox[{"-", "q"}], "]"}]}]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.620466815832613*^9, 3.620466924636101*^9}, {
  3.620466962585318*^9, 3.620467019300572*^9}, {3.620467603436879*^9, 
  3.620467661522848*^9}, {3.6204677199468803`*^9, 3.620467721533811*^9}, {
  3.62053842377568*^9, 3.620538434439042*^9}, {3.6205386829986553`*^9, 
  3.6205387360895863`*^9}, {3.620538852891993*^9, 3.620538858850819*^9}, {
  3.620544869172647*^9, 3.62054487710069*^9}, {3.6205514713297977`*^9, 
  3.620551497879632*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"T00", "[", 
   RowBox[{"z_", ",", "o_"}], "]"}], ":=", " ", 
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"a", ">", " ", "0"}], " ", "\[And]", " ", 
     RowBox[{"N", " ", "\[GreaterEqual]", " ", "3"}]}], ",", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"v", "[", "o", "]"}], " ", 
       RowBox[{"Exp", "[", 
        RowBox[{"I", " ", "z", " ", "q"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"q", ",", 
        RowBox[{"-", "a"}], ",", "a"}], "}"}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.620466692754237*^9, 3.620466720937484*^9}, {
   3.620466929994689*^9, 3.6204669521540194`*^9}, 3.62046717529817*^9, {
   3.620467209962221*^9, 3.62046721524165*^9}, {3.620467667867585*^9, 
   3.620467701284438*^9}, {3.620467736405113*^9, 3.620467756393078*^9}, {
   3.620467803838147*^9, 3.6204678318063498`*^9}, {3.62046787792482*^9, 
   3.620467884259365*^9}, 3.6204680827919397`*^9, {3.620538741158456*^9, 
   3.620538770388105*^9}, {3.620538859879705*^9, 3.620538860786544*^9}, {
   3.6205392401559668`*^9, 3.62053925902712*^9}, {3.620544946686901*^9, 
   3.620544964677265*^9}}],

Cell[CellGroupData[{

Cell["\<\
Was k\[ODoubleDot]nnen wir von der Rechnung erwarten?\
\>", "Subsection",
 CellChangeTimes->{{3.6204691500985413`*^9, 3.620469159108666*^9}, {
  3.6205518007189817`*^9, 3.620551805366301*^9}}],

Cell["\<\
Wir approximieren das Delta. Das geht eben nur im Konvergenzradius des \\C \
A^{-2}.
Um die Effekte der \[OpenCurlyDoubleQuote]Box-Regularisierung\
\[CloseCurlyDoubleQuote] zu verstehen, k\[ODoubleDot]nnen wir uns anschauen, \
wie diese Delta-Approximation (0. Ordnung) aussieht:\
\>", "Text",
 CellChangeTimes->{{3.6205518079478817`*^9, 3.620551879811255*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"v", "[", "0", "]"}]], "Input",
 CellChangeTimes->{{3.620548064340753*^9, 3.620548065452278*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], 
     RowBox[{
      RowBox[{"-", "1"}], "+", "N"}]], " ", 
    SuperscriptBox["q", 
     RowBox[{
      RowBox[{"-", "2"}], "+", "N"}]], " ", 
    RowBox[{"HeavisideTheta", "[", 
     RowBox[{"-", "q"}], "]"}]}], "z"], "+", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", 
    SuperscriptBox["q", 
     RowBox[{
      RowBox[{"-", "2"}], "+", "N"}]], " ", 
    RowBox[{"HeavisideTheta", "[", "q", "]"}]}], "z"]}]], "Output",
 CellChangeTimes->{3.62054806613476*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Example", ":", " ", 
    RowBox[{"Zero", " ", "Order"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"test", " ", "=", " ", 
   RowBox[{"T00", "[", 
    RowBox[{"z", ",", "0"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6205391846711817`*^9, 3.620539243616452*^9}, {
  3.620544967435193*^9, 3.6205449712103*^9}, {3.620545030905218*^9, 
  3.620545032699729*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "z"}], ")"}], 
    RowBox[{"-", "N"}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Gamma", "[", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "N"}], "]"}]}], "+", 
     RowBox[{"Gamma", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "1"}], "+", "N"}], ",", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "a", " ", "z"}]}], "]"}]}], 
    ")"}]}], "+", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}], 
    RowBox[{"2", " ", "N"}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"\[ImaginaryI]", " ", "z"}], ")"}], 
    RowBox[{"-", "N"}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Gamma", "[", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "N"}], "]"}]}], "+", 
     RowBox[{"Gamma", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "1"}], "+", "N"}], ",", 
       RowBox[{"\[ImaginaryI]", " ", "a", " ", "z"}]}], "]"}]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{{3.6205391905818043`*^9, 3.620539225556147*^9}, {
   3.620539257534193*^9, 3.620539265596963*^9}, 3.620539345645002*^9, 
   3.620544976679953*^9, {3.620545034566087*^9, 3.620545042381274*^9}, 
   3.62054517425953*^9, 3.6205518959737387`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"test", "//.", 
   RowBox[{"{", 
    RowBox[{"N", "\[Rule]", " ", "3"}], "}"}]}], " ", "//", " ", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.620550378652446*^9, 3.620550382910194*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Gamma", "[", 
       RowBox[{"2", ",", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "a", " ", "z"}]}], "]"}]}], "+", 
     RowBox[{"Gamma", "[", 
      RowBox[{"2", ",", 
       RowBox[{"\[ImaginaryI]", " ", "a", " ", "z"}]}], "]"}]}], ")"}]}], 
  SuperscriptBox["z", "3"]]], "Output",
 CellChangeTimes->{{3.620550378972589*^9, 3.620550383227591*^9}, 
   3.62055189899509*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fig", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{"test", "//.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"N", "\[Rule]", " ", "3"}], ",", 
        RowBox[{"z", "\[Rule]", " ", "r"}], ",", 
        RowBox[{"a", "\[Rule]", " ", "1.0"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", 
      RowBox[{"-", "15"}], ",", "15"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotRange", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.2"}], ",", "0.8"}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"AxesLabel", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<r/L\>\"", ",", " ", 
       "\"\<\!\(\*SubscriptBox[\(T\), \(00\)]\)\>\""}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "\[Rule]", " ", 
     RowBox[{"8", "cm"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotRangePadding", "\[Rule]", "None"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQffGMSPCSn68c+16KRYBotZNz4kC01ZLnYPrM4thk
EN1waUUKiN73+W4OiBYxYykGq399/AeI9nN+AKZ3f7jWtxRIx8et6gfRciJv
F4Jol/pH20F0gUPYqWVA+gEjwxkQbZNTdBNEJ6S1gulllT1PQDTD/RvPQPSZ
bTfeg+gZYs6fQfScsguiy4H0BOUbYFrCrFQXRLOFrjcC0efa0uxA9K81P8G0
iN5CDxDd4M3gB6J/7Dg5G0Sf6cmZD6LjFr5cDqL3FQttBtEM3qFqK4C0gPcz
AxDN8ND6HIjmYPl9AUSnRZlNXgmkH8leXgKiAbiXwqc=
  "]],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJw1W3c4lW/4t74pJPPY4xzrmBEtxfNEZBUpI2lRdirJlr1OZHOMVJJ9CqmQ
PI+MUEoKZe8o2coofud3Xb/fX+/1ud77vcfn/jz3+95/vES7a+ZXmBgYGDqZ
GRj+93qoz/Pn1pYyVvzh4TB8OBB8rX44Z7ihjIcHdLPCeAKBF/XDUvJvZZxM
yChy+R4AyizIf+V+KWOPN1/kt8UHAOmOPg6zXmUs2O0aEdzlDziadFQeVCpj
Y4v0wU3gB4oeXdvz46kyzpS7mCLB5gf0Q7P3aZQoY7vOXMe4z74gGPzWbnmo
jE8pOhqduuwLVqqLTOfvKuObrbtl7gX6gMEnXDegszK+ck1qYSjeC/jHad2i
XFbGFy/feadm6gUE3Vx8v1xQxkEu+eqDO72AuXxjiJOlMs4yfE01irkF3j7y
TkrQVcaNUnbsd308QRl18NmwmDIWTRW79PSgBwgJLf0d3KmEX/n3dZvdcwHd
AVsxV9qVcMhn4sv5KWeg4G0uZtSihB30x40d1Z1Bp+uqLm+dEtYiNvh+b3QE
JIujiY+LlLAO7LXO6b0MGuT6FduClbAX78vl8sJz4L929ku8u5VwcGBlasmS
KogRcH33+I4iBjnCNbkzTugwZxvTSKQi5myCTlvVzmiWRV5TNFQR/4mKJlpH
uSDzxcnCJB9FfFbas/kn0Q2JtttFBl1RxDbi/z0Ts7yGnoTaHDkDFLGxqZ3B
mT4P9OWX4UuOJQX85+j+XftEfVHkeOHssVkFrOy5xXzgti860McqGzatgDdS
tp2dHfJF91qaUtaGFPBBtmPf3HP9kMOjIx6T7xWwlvW12kCpALRmfVAZ5yvg
RR2xba28QUi8kfzopo0CPnzxxrHrJ0JRbv3C+2YLBVw1IFb22DsUyaCa30In
FTDN4fGZ5AehSKnGxAgfU8AB9nUHkhdCkWbZ9QWOvfT8QlS/sCaEIcvsKpC/
SwHvGxMu7H8djnozQpzX2BTw86c8V4VGw9G5dKNkk230eOt3N/79F4EuJ/VP
Lv6Vx/6SZr41JhHII5rhLvghjyVbG05PdEWgu54G/V8b5fEQu4+dfHck4vHg
3qaE5bGY88fyq8uRKPVa7+6gV/K4Wvy2kxFPFMp2cQuTqZDHm6Zsdq0mUaj4
YoKCx3157C64R6OxNgqpnD9zuilTHltSCuwqeqJQ+VnSbcE0eazSwfVebTEK
VVlWfqqLlccfrC/1DMtEo2aTrz7sfvI468ul0e9R0cjI6GHu+Vvy+PGX8rlj
96NR+zGX9+XX5bEU7/abe15Eoy86fyWsHeUxf4Bz5qPRaDR6QPJt3ml5HF8x
sX14bwxy2Dc9/8dUHrf5zFoGGsagafUKYWNjebxt+GZLjm0Mmlc56r5wRB6j
Q7+5XENi0D9pJ37t3fL4dnJCOF9TDDqgbfVBUUEe40gBXo7uGORhpR8lJCOP
XztyLrlMxqCpGOm1ZWF5XGg8Rzz7HwWRHvFWjPLL44bM9Oc/eCnoXC2TaweX
PLYyOyQ9SKSgztnh/pJt8rjE7bDWr0MUxLG9IzWDUR7f/PXsKKsBBR0johNR
f8k4Ktp5JOQUBYVqPmG99YeM7+2uN7Q9T0G1p+5hu0UypnqdeJnqREG/3WJ9
zX6RcU1+n4OyBwWpRfrv0Z4iY+/G61SSPwXlV53JExokYz8DtSTSHQoa/mRw
jvUbGZt8HfqhmERBIj/3E1Y+k7GgRfFkPJWCLFnkPo5+IGPDKY3u4zkUlCBG
iO5oJeM6X8rOK48oqG3ff0fqGsl49pTU+JcCCvrPbHmtBJExsfpnZXYJBUHn
sYqMGjp2MRp89YSC/EI7XaOek7G1mNwbtXIKqsyql75VRsYi3+eb/lVQ0Fxl
2YBdCRkfTcozl6ikIIUP99PM8slYZrrzSyodX/5+11T7IRmPz+bXXqTjHIbb
25Wyyfjh9pnAoGcU9E3oar1QOhlHEPgSFuj++dRt/ViTyPhOgJb7i6cUdMLE
WH0lloxLhQ+mt5dSUPQVzZnRKDJ20kiI21dEQQ235R93hJLx9WOUnvk8CtpM
FzxfF0jGBz/t2dq4T0EHylkFSn3I2If5QpJVJgV5tP3+mHGTzpfjMxJzCgXR
xiaio9zJ+MXVIr3NWAqa+vvlyC1nMr66kJJiEEHXA6Fx3e4yPd/cotKRAAqy
3f3smdkFMu6zZ9jdepOC0g1y3bRtyNg5ORtvOtP1cSlRRsmCjG/r3GALvUDX
h3/woJAZGf8441BtfpqC9FOupbMak/F/peduX6frJYR23mxFj4zblvZz9tH1
9Hvo8JuOQ2RsYabqlSpJQapriv51+8jYznzf+3FuCnLlEdEoVSPj3dmrU0FM
dD0cXXscJUfGWy/O3qeOxCDh81Pnb5HI+IBQZg9/Rwyy8O4RsBcj4+K6r7yD
r2NQW9HzGG1eMv6Zrcpsmh6DWBrydJQ4ybg5RcHrT2gMAv3JG0I76PWGzbr9
uBqDKjk9rq5symE5vZ/JT4/EoJybKidLf8hhzaM+Ps+Ho9H+GPkn8xNy+I2L
YKtHSzTqyJFm3zsiR4/372vi02jE2Cbc9LpHDpt7rF5a8Y9GlyVZD35slMN/
dd0YT++MRv/2MqXxYjlc3vpPjDgfhdKM/y1avZLDc6LN+WadUeit11LpcLkc
tvH/mtSTEoUU2ockF3PkcKdqTnEMfX41jPYG7suUw3y13N/d5yOR7WpXr1+q
HL71cg9vVXskipN6n8IcK4fvOTw+7B0ZieZ9q7bz+8rhqOqE3LL5CPRCNnF+
/yk5/Hsw1fVMYTgyPRx7POAEPb+aPeu5AeFo6mRUMTaUwz5sg5yWZuFIKDDw
siGUwx7VyYXrK2Eo4LPzVxtlOWzq/NDDWDMM6QTr4EBWOdxCM7oSURCC2r8t
xTe8ksWdPdPuWC0AibLzB+S+kMVHpKLbKkv9kdvhfU4h5bIYvLjr4ifrjzju
+0BQIIuzynOzQwl+yOTyv/maJFkclkXsaJnyRm2z28wrnOlY3QrZWN9EzczC
fA8FZPErh1XG17/sUJ0ypN6+KYOZE4n6X1SdwdCVd1633GWw7s5xvshsF8CQ
Y2nh5iyD3WtPn57Y7gZ0OK/y2FyQwSXbsurvjLmD5tmM2L3GdHvB1dRWUw/Q
/nQpeIYkg5mi/83d5/cB/WoFzjad0lgeqd5U7AoB/5z3GJxsl8Zpf9gPOaqF
AvHc17IGLdK4dcJ6PjouFFzk+TK2t04ah2l5z3rqhYGxRYbz3MXS2E/J7OaT
Z+HgxzMb85YQabwdHdx2LyoKrO3lPLRPTRrXCSf/7fsbC3xcHr8OU5LG5dsE
eu4bx4HVnMPwk5w0phoGm7BnxoHfrK56buLSmDnu7eFPe++CxW9vTXPZpfGR
z2wFo07x4GdgyGXOSSk833Fi4tlAAnCpEPx+dkQKm82yTQwwJoIfk0+di/ql
8Mmn2bLvZRLBlOmg+9HPUtiZREpecEsE48RDvn5YCjd0/hHXW00EA03LcZOZ
Upj8/cjTA0zJwHb9DpdGmhQ2dFxsVCclg34VqeSQRCnMEbmrd+xIMuhNP0kV
jZbCLg4BuheCk0G385Nc81tSmKlG5F/hWjL4uNPpZZ2pFA6Le5ZX3Z8CTuhs
HeQwlsKcbadepP5JAR+80mrP6Eth15azYoI8qeD9UGP98mEpvPNz3jkO/VTQ
Uk58r6AghWeVzdczilJBvUXfcBqLFG7JvpgQdT4NrD6mLt7eIuFTq9vHxG6l
AZXfFiyO6yTcFdAYoXknDWSmdcjtnyfha65esUwv0oBHT5N7Tx8Jb/7hrSr7
Lx0UyoUFo24SXg9YpdoKpoNBb5hU8ImEV8HNzEiFdGAs+Oq591sSjpmaYDt5
PB1Inyn7K/CMhNumyPZ5senApugqJ8MTEpbL+/ZXJisdJKwpSE4VkjDfaSKz
eFE6+JvxWLcqh4TViKcfXW1IB3t+2Fk8yCBh3qQnzg0f04GTpqRjdAoJm5Hj
Vu70pYOu3kyKNYWE8zMiPt5YSAccitbZMIKEJ04C27iNdKDjz/+EHEzCPw3e
KQr+RwU+7zoRlz8JCyvZ2XNzUsETkYRPq7dIWOFevoIPgQrGXY+PDV8nYcnj
pSXG4lQgXMu20uJKj8e9xXNHhgrMOFq2lTuQcPdCUfxeJSqItI0QzLhEwulq
2qeM9lBBbamOQogtCRea9ia27KeCxb9bh5ytSPgTo1ro08NUQD7++vhJc3p8
csK5TUgF5+/5XTh4nIR3V3+/UHmUClJ+7b9BNCDhBwUdbzuOUUGb1kroDl0S
voGSu82NqIDhbkXKghYJnwlQ7ThoQgX7B6/lfztAwuxf7TfCj1OBu4pyVb06
Cb/mevpQ/QQV5N3+0VqkQsKJjud36dFx74eCvkR5Em7vjk+uottzSVz55StN
wo3oYHAc3Z/+NdLWJQkS3p+gptBAjxeAhriMhEl45fyeaWsDKqjYdY+0h5+E
p4PGBE7oUcHUBRsNYS4SnuUc4s09QgXiZQL6TOwk/OZGldZpLSo4zdBl9eM/
Eg7qYFqzP0AFFLMk504GEp4PtyrtoPNV/8DUv2aDiLcF29Zn0PlcneeIy/1N
xP2P2/Lq6HyrHGnLoSwQ8TsJz2Ztej8yR46+sflOxJefX0k+sZMKOtSYvuiM
ErH15+0qA8xUsC0UTSgMEHF1ftFE41o68CBp7tjoJGL28F7avTG6fj3+CI+1
E/FMWNTbuB66ft9UKr1rIeItRR+urja6fu13m2XVETHYX+jg+DQdDD9d/a+3
mojTz9sLlT9MB55/618JPifiKM5MNYfkdJCdelourYSIb+f8NOC+lQ5UR8UG
vuQTMfNSQ9G2K+mgSeV7Em8uEavhTHWH0+lg9q3vZgKViHWJDbl2aukglE+3
8mMyEf98zbC1KZ4OBC5xuHDGE7FIsagHC0c6gOs5XXci6PafvAsNx9NAolJj
aaQHET8obwMv49KArG+cXdNVIm7KVFZI80oDNU2WgizORFwlK0Hpp5/30fPT
YSEXiHiPjOCu+8ppQCOR82yACREX+c/e+dOQCnpWrHd4yBKxXfzPhtHPKcBN
h4TKiETM9ymzQelZCmCI/+k5J0rEk4tbwgOJKYBMvj3sxkvEDRsWC9ePpwA/
m0cvHRmI+Ne5jlaH18lADP26cq5XErdVFFU+DE4CFewvRbK7JPFyQ/6Zs5ZJ
QN86+FNvhyS+9OGkdqBiEnBf4NGyfiuJpXcXP1n/nAiw1AG+U5WSOKgqf9+Y
WCKwjw59Y3BXEj9yevvkrGI8aOl77nI/RhKHX2jzk2m+C1R2T/P8DpfEvGdT
znVduAvWu0ztH/lL4vw4k7wf8XEgQUqMZdNJEqtqje1jHrsDaute6j3TlcRC
HDcfY4toQP7xLfHQogQ+NaBQcOpWMFhKgKNTUxL4btfv1+8HgkDd/oI9aUMS
uODHBN7x8TY4HeH5ef69BN7Pba7WUxIAgiV38ecXSGCLQffjIqY+4KvlUSrX
OQlcX39oKeu2O4hpeJIz8VYcb+04xVHgb4bePLy0s+W1OH7DcFBj54oF+hvE
F1D8TByzfWvtl7h1Frkf9jtz7b44fuk+QLh11B6ZP9fjW/MSxyeqG8+o3nZH
wgX9MRyy4vjoUB2bCPJDpRS2W+rhYlho46Iz5+kY1HHSwTgEiuLb9Q95ioUz
UDNZjYl7vyi+kBo0MuWdgV5tbVQ9UBbFc/dnswhdGSifliiLhUVx7qTz333x
mShgx2vGrWURzDjUwH2aKRuR63mrAopEsEUoz7TWaA4KUa2X9uERwdreV3NU
tHKRF2tsH+sOEdw52VTR4JSL3AYtk9K3hPEv7YvbdqfkIuvYma0XM8J48dg6
e/iPXKQyJdC30iyMzSh+H7anPkK9990Tb/oL40OJfZvhw3lozy7RTfdxIfyG
N267s2EBShNT/6zeK4TVppt3PbpegNYUjQpXPwpheHMyLiS9AGEDH/PQV0I4
+qsqp+x4ATIN/ZKfmiSEPWRWpsZ8CpHbSqxpLRTCC+tF8VN3i1AHc550yD4h
bFEWolD9tAip87xa01MSwu3rHfcJHUVoXWX60UcBIfy369Ruj13FKNpJb3V0
VhDfjGQJCI0uRo/7/j3YcU8QJ8rz8b+2K0Hbf/B5fUgSxLpRUuLF/iXIbVXR
ODlaEIdU/ufCkVKCNPhtVkQ9BbHTWb9ZhYYS9ObEC0NVY0HcPWleny9cimTP
tYuvQEGcM+q9wre7FMW4ji9V7xPE411R9TM6pcgsmidHlySIrwB/y89OpWiw
3n3Rck0Ahznt5DhNK0U6HRFvReYE8Fv5z8mTtaXo8WB29vC4AP7yOnJ3z7tS
5LbRpu/SIYAvS3HNvf9eijp2jIrsbhbAp9tVDn1cLkUagmvzS68EMPv3bz/l
GWloQ0MuK7BAAFu+PNw1KkBD53W1r+vcE8DryhFa2iQaenPSQo81WQA3hUU7
zyjSkOxFN+H30QLYwyRm6acGDVHcw+YSbgvgve6fvQ5p0dBsQGajhacANs94
E//tKA2dvFOeIewigKVQS1+jMQ1VZrS4D10QwLtiPNc2TtKQYOGQbp6FAK74
4B0daEVD4o1t/6jGAnhiZeuSui0NSQ8/fxl3RAA3OGY+2n+RhhT+PrgRul8A
Pyw1ZI6xpyFVwVhFb2UBzBS574CsAw3t0/CecJUSwPs+Pl/f6URDh83s7l8U
EsCEcydYgDMN6bgdP2Oxi55/f92uKjo+Fn2A1+g/AWz9lPmbNx2b5Em1a28Q
MEOrrVgg/XlzzBmlvkDAB6NPZTXT/Vv3r0HydwL2TMA8py7T+VodXxcdIOD5
B5+OEi/R0GW+jkruzwR8ymXX8u5zNOSi+sp9WysB37azHw+0pqHrJvnkjToC
1kgT69txioa8nBJH5yoJeM1nPafThIYCwgOyx4sJ+EEFebVbj4ZCHzhafntA
wM0/TpTxa9NQdK0514c0Au5OTEyK20tDd79qtb2JJeDaAqqrlhINpSyTw1+G
EvDvoNQd0vT+ZXLxaZf6ELBYmMFhSO9vvsGP8tTLBMwfi/P5tkpR6eUuV4oN
Abvf/C+ybaEUVQRjmSAzAv70kt2wfKwU1VWlZTgdpvvvSOnjaCpFjV9CTp3b
Q8CIceVCUGUpapt322lOJmC5nH418UelqIusG3KIj4CH9+8+1B9YinqPqhxS
ZaP7O0fZu+ZcioYvCq1IMxDwNx9rZm2LUjRDnXPinOHHBeFWzzTlS9FiZS+J
eZQfa//SdpznLkWrHU39f3r48ZI5d1LrWgli2ZFtNtLAjzM1mP4bbS5BbDJR
bN3V/PjY+gkVidISxHXEo7HtKT/+qDeb4J9QgkR9DQ5UZvHjTzihN86Sfj6n
lyWibvLjIen2gY2eYqT53/A3f2d+TOgRJBFeFCNIfJd8/QI/vnWyLfJYcjEy
OfOQ1caYH5/2yGz/aVSM7FuPzylJ8eOFI6eTJejzxGniQBFRiB+Lm27n/BpR
hNwZpe0Ju/jxFQuS6IOzRcjv4Hr31jofrhjqtjrLUoSSivLrOjv5cLyoAvWK
USE6XVeEPVv5cKKpvUSXaCEifC59Q8B82OyGePTV2QKU9bei2YbGhx3EBcwI
8QUozxR9GI3iw3tWKPZ7m/PRy5WewcXDfDhphmghxv4Y+bH1Daeo8+GjFLas
Dx/z0GGJwdF9Cnz40MH/5nKS8+jzc3zST4APZ5CfJ2cK5qG2rPlZpkVePLMr
efucwCPUf2THFk8BL37xVTXw3s8HKMeSg/H5PV58Ybm3kSn3AbrkuovZKoUX
L6sbXwyyeoAmU/hZs0J4sVn52phv0H009524S8qWF2/m+hwOZLuHmO5qSqhz
8+Lm916OQi3pSK7XFZzy58Gl/5RDbV5FIWvZVxcUbvDg0TK7TuaNCBTtwRbM
6MiDI8IFQ7T30fdvtiL81JwHG1d5L165H4yKD00e4VDgwfm2bXLjPh5I5d7F
o01fufFJy784388ZaFy0MNy/jxs/++ITuH4zBVwuzXPmVOLGN+Yyh5izUkHq
6lLMBJEbJ3edLdNuTAO/E5LakndyY25eqx96YhngZf1H4/lxLrxd869i5PQ9
oClldKIomQs/FHzGtn3lEQh+H5i/b3QXZjq/pD1W/wTYWJp4g4+7MHDkILi5
PgXqw8IGBrW7MJFHb2CGrQxMLr2cPpO2Cx90j7tU9qIMHBdZVAo02oXfE+8Y
RvBWAGEXh2cNFZxY6uLCZ77RSlDJaorNwnbi1vfqv+Y/1oBpHcleF2l27LBl
GJw63QByDkV9H9jFjpWDHrwQkWkEpzVml8022LC0uCah82IjwDK1u/Z3suEg
eUht/9oIqNut9ZiD2bDtcQPnpbYmoP8hviyrbwcOvXAlPvXlW5B7ZivyfdJ2
/F7aVWb8yTtw9vqgugrjNlzz52Tdhb+fwLL7oz9jKwx48VRXP8OpXuDoOXqe
e4wB87rXnPS70Qt6fYnN2h0MOPbYZcXp+F5QH34/JaOYAY/YzrLlv+8FdzOz
1EwvMGCHXYpXU/X6gFmsXI9n4hZatq1y4NnbD6o0tyPi/n/Iwoa9tnH7IMjR
i4wL4P6H2rnSr7vLDIIIMxbbnp9/Uf20xN3/dAaBuQPDWuyDv6hOOGXHht8g
mElc3bO64y/6Xbik/PfnIJCcnsr/0L+OBhZdfkm2DYGo9Na7/qGraEgs7nFe
zTCQDfbpLj6zioivgr4WtwyDRic58V7VVST2XbngYfcwYNKMoB0Y+oPS4hXC
Ly4Og4B++H7l0B8E1ZQOSciPAA9i1Y7rKysIvaxkDUkeAedL8sMvOy2hH7zF
10ZsRsG/ZIv3yWAJfeAVufLCYRRkB7DwNRCW0BzTt0feHqPg23G7R8SmRWSY
4367LmYUnJ4XezNIXETKTw8csnk5Coz2pm5Z980jf5FfvE85x4DrbdaVzOwZ
ZDF17zAzbQzE8ss02ZvNoNv2e0Hc8zFQWqqTqsQyg46Uyq8y1Y2B2d7AvXWu
P5GS5s3D5R/GgMf+5Vsjmj9Qn9fQGGFuDPjOD/+W+/YdyUTSVlYUx0Fm1Gbz
fOx3xNvmZrxHfRzUiIumV8PvKE/BXeGM5jj4a2K137hwEg0+KwIOBuMguKjd
2917Al1tOrjobz8OouxqViv5x5CGSL1vVOo4KFzraQlsHUWfLvxqvJw1DloS
Vqj6gaOI5/6NHMWH44ANqR78Oj6C1lIWG2+VjoO7IgW+G8+G0SOrfIf1+nHw
tKLRsNFxGIVYzhaR3o6DDsNRoTiRYeQo9p1b4/04kJrX9NTaNoRmfMUleLrH
gUKR3EpYXj+qUt41UT01Dtx67FL5OfqR0kgbk8KvcfDkv5y9BTf70GuWfdOh
C+NAzY7Pq02nF5Wb7p+cXRsHB0QY/3CN9KC4Q7NRT3ZMAD/Dw+m5Bj2o7Vxh
h/3OCVDr7b1fo6wbqZdvJjNyTwDw5Ze3VVAXim7Md/wtMAH043pX74l9Rlsa
jmcbpSdAaarlpHJ0J1LDnf00uQnAm9P5+fXiJ3SYrTYiWGECDD9pezLwtgOV
XJ1UH9k9AY691M++uqcD6X/KUrq2ZwKcDYrg3Tj4ERk/eak+qTEBfj+41ao5
/h5pqFtaxh+cAI3lV/Nsqt8hKlx1qD80ARLfXAnyu9uG+J+B6/1aE0Bp3GJv
zYEWVK5jfKb9yARYWz7O1bvzLeKb69v9SHcCNP+n/3NttAltaJbMXNKbAJfk
9j08GNeAxP/Mbs80mAAqB1QCzti9QWqDgxd5jSbAXwNZK9/99UjHmSXhlvEE
aD0jvieDA6OJM9LJ2IQer0tJ2KPhNYqNPOi4fHwCvP0t2lF+9RU6POa5g9t0
AtgJ7oxcEKhGVRQtb4IZ3d/Bf4fU3rxAKU2qT1hOToD0s78WrrtVojAeUmkf
He8JHCgoI1Sgi4oi17LMJwBVK+vVcMhTtMJhu6J7agJ8CPaXu9hdjDLWbbS6
6Ji58WzykEI+2gxr1DM9PQEOsB7eOh/0ED2I9t9ZQcd9KQe6awsykN+hjOR/
dKwvskZ7ZZaAkmWu9qhZTAAcOUn4MemPtskFfj1Bx0pIhW/vDzuQERyRdpqO
f+dSUuOdooB7tQ+3Lh1zvWNZMmBPBfEfggyF6Tj/6FERI7scAP5b1+6l+xcf
qn/4uP8R2MEQuBhKx1NZI3tlowuBSfWXy3x0/MyasS1fnQY8gpjT79LzRxSu
p8lzZWBx8QhlgV6vtLPk2im9ZyCMaQto0THlmKouX9Zz8HliqPoGnZ85GRj3
Zf4leCOE1+7S+TzNYtaTol8DztuUM6bS+a4ZvUC0yK4Fctkbn8NOTACJ+muu
/It1oOo/sZtn6f1ZqXu71fahHmw+nyE10ftLfvJRumTtDfi18figleEEsLnX
Y3hHuhGoWprIdx6j8+P/PdnYrxlotbU8DD06ARZd5qoUH78FJTtt9lTpTAAZ
mz8D7B0tYPHBiZJuSM/3ACv5vcw7IHKP7PTh8AR4LbfreKnZe6Aw5v28QHMC
zBMEPGL928EYYfOf84EJYLEiW2vy6SOwVv+UWqRO5/eMVKGDdidYF1cP5pef
AC3fxrrChztB8MtDP//ITIAQmzzmR6GfgZh2lzci0fM5K3NhqPkLKB27ILQp
MgE+n5cjWJv2gBdFZ6I06ec3dui7rtdCDyB4um07Rj/fRy8W3khJ/gpiKE0r
B/6bAJWX5Ns7er4Bt+ts5u1/x0HaZcVww4v9QDt7xLD6xzg4MfGz3JFpADCc
VU5anBgH2xxKhyLyBsC31jsl3CPjwNtR+dCbqUGg2qYexdgzDpSeC/jeqxoG
1BqKcxF9nnFWCakSjoyBr+TpddmkceCyuqYvkzQGDLMfqjbeGQfNB3rPaYyN
geaWUWWDiHFwuzrzjjn9+pCFqZnFZxzM1Yh8v9s6Ad4P3XIzt6XPw9diOazm
U6DiSpuzmSQ93ua/SsKjKfBejXXZTnAcRGsPvpNZngI3+NqDznGNgyMoZ003
bRo0MhgvsTGMgwosYRHc+wM475J5ZTg4BpIbiBxrdr/A/XZLomvaGODQ1hm9
9+QXOP3nxfOiuDEQXmVXpbP+C0htTJZ8CR8DXrRHl2MTZ8GrhgmueY8xYJ0u
81oCz4FlMdWd4MQYiH/Ot/8R5wKo1m/6ZsY4BixiBKdaXZfAkWdvIsfPjIKk
ZvKp7MQl8Hb/9IveE6PgA/PBOveXS2DLrE4V644C/dtnUniZlwFVzs3pjPIo
OHAzE57LXAZJ21Xw260RIHJONGO+ZQWE3dLUKXk4AkZUJY0EZFdBiX1x8vHe
YeCQsHWI33QV5HJO2hq/HwY/5gaVeX1WgV0CU9rBumGw+OQe9662VbA0/N/s
94f0972yyLdt7mvAMy/GKsFpGEjLE5x+P18HOQfv8NlPDgEHIkdkl94/4PfW
4L+7/wbAyva/w617GKFDMX8Raf4bOEkeqUjV3AYPuDW2MOR8ApbvVk/aHN8G
W71NNDWCPgEbd64F8YvbYPfeV1vuFz+By5Vgd2HENrhozeC2QfoEvGBOSU3H
Nijz5D2rV2EHyLQ+mzfkwAqtQtf3HHP5CMaju1Llk7fDrStyFYj2DnhNt/q8
/skG3R6/49a42whyxAz7BBjYYeiaffiMeSN4e7JFy4OPHZ4yyR35LNAIBGua
meS02GHaxn/b1HIbQA2lITbhLjvc3JV1VbX6DdhUfP3AXo0DqobepmXPYxDh
Xtayw3snjKFtXKTsegWe5O5WvHxnJ3RneWW6J78GdHc/iau7vxOOsF53MtWq
AbKAZn6zZSfUXOSi/HSrBi27ivv7hTihleZZ/dpPLwFH+aP5p7Wc0GvsqTao
qARtvsYcioxcMGdMgrM1jwZIIjdXitm4oBzTrd4L/0qBX23moAIfF8wOyr8/
aFkK5LemyxTkuODMnoawNI4SEB0ebaFwnAty2VQLMIQVgmPxTTnyGVzwe+3Y
hHr2I9CYB9TIatyQltr74d62VCCq7yhcqMkNC6cjOp8vJQPP73eZyUe5oarz
9YDq0SQgpTDYJWfFDT+zK5RFNCeA0KcBfnKB3JBv9/0sf6MYcKSmukG2lRuK
qtu4zv7zAHUf1S1lLvHAX4scb3h2hyFP+yibWy48kFH8096sjnAk/6f3fNNN
Htj26RKni3skShEPdbwSyQNtzOCD/pwY5HK1w+dxCQ/84693RupzPCKwX82S
+c0Dy17clRtvTEXvc/D9W1s8cNiQYrTlnYZC9vDlNW3nhfbF73R15dPRzJlX
pVdEeCHxX+77Y5FU9KZwR91jyAt/H0xoM1fIQu76+cMyd3hh5A2Bw7d3PkDS
vWvjt1J4IZTvCPeyfoC+XT0+3XSPFw6P2l2Lpu9zR1OXF66U8cI307/erqs/
RMLjOsz5XbywijR8SsYkFzWHDMnISvLB4+li7n9O5qEAfnUFL3k+ePnkzGDd
3TykVhSp0ryHDxZO1F8paMtD2R3K+x30+OCTj7X9A+Ax8pAIMMh34YM2Yl3L
cxL5SPy1oKvscz74J0ssUvFlAXIQkjx5BPFBrjPXyo78KEC0W3L7bVv54Fsj
8UJb+j58WGUfc9IAH9RkMb2UF1iIbO6fyvr3Hz+sPViwN1mjCOVu2IQIcvFD
NteTS98vFKFpKztHdWF+eHzPlTADShHy4bqh7qzCD49l7nuv2l+EUkPuvvti
yQ83M9YvVHkWo/6B1PK5i/yQU9BkK4JajKQ176WzufJDCb/D3I6vilHFYok9
DOKHhKpv0Y6bxWj9xDPDszH8cNu77YvR4iXoSEnNbq9kfvgNdHyp1ypBHfat
GyUF/LBBSlP2tm8JEsQdI83l/JD3Iy5iTitBF0S/vh15xQ83DtzryCsvQbNf
JpMFOvgh0/mDhtqTJYhDn0UpbJUfHtp7R3zmaCk6ncvOk8NEgJvVMZNuNqUo
a5NntYqDAJvvcW/nuVaKFF4SG2clCdAnYtvX9tRS5MErX7xDkQBzig3fTRaU
ouprqgnSewnQZvLFQ3J1KTIgA1sbQwLcUp9MVfxWihLC9XVunSLAvCPsrHPf
S1HP8HFywjkC7H/GxzS8UorEtSw4SxwJ8I439/MtJhpyyLBdbrpBgE++N5qa
7qIh2op977A/Ad6cecDcIUxDyydd8UYEAboJYOYwGRo6/MQjn5BAgK61Q+HO
u2kojM0vVi2TAMNZbV6HH6ChNocQD5M8AmThkpzogjTE0xBt7fiEALunnu09
b0BDZyQStEOrCPAPjfRD3JSGHvinS997Q4Dx8ZvaQhY0NNWTw1b1ngAde609
TtjQ0G6N/PnObgLcufmqAZ2nIa8EWvevYQKsTJDxdLejobqZytrtPwlw0oyh
+ewVGtpmWJsrtUKAJBnxf9GONHT8cUO09hYBBglVnP/jREMpjO/cz+wQgBFn
jdQKnWmo/1znaU9eASil0VabTcfSNd8048UEoBzDZaNuur0rYUSyWE4Arsom
S1vS/VV4TG1rUhOAbFyEdDF6vPUPczNDhwTgAGFqVpmeT8SeIcpxPQG4U+1Z
4Xt6vlxpH8ivTghAybfBqh/o9WStvW4mWwvA+M9J6eqWNCR7jnY57ZIArKnf
Mf/PjIbKcTYTi6sAfCk1bKJiTOdbOvbBDU8B2Os4Wd90lIbeRvlrDwUKwJK4
OvsmLRoy/+nSbxIlAKN7e46p7KOhgRM2fjUJAnAhziWcUYWGnCoMBcmZAjA9
9aYqpPfvti/5NDNNAL74nbGPhYeGdgwILF5/IQB5Ji69ucNK5weyJgwiAdhT
NSMZ9rcUFbNOvqvuFIAPXPXqm8ZL0V7XLme5fgEY5LRfk/drKcIfGllTJwTg
4qzi8pe2UtSd+kj3+qoAfLxu8qD6SSm6tJY0MsAoCAefxn0YvF+KZmxDg4zZ
BeGOmvnnAQmliEn60itZcUF4PeyGitz1UhQXZXYmRU4QFmmxMey7UIoEf4I/
jGqCUPlZBfub46VIpUJcfUBXEGpWpFtZypciG9hfnOwsCKPT86Pie0vQxKN3
Bow3BaHcvNpMQVMJus76atI9QBCaN7fm6peVoMgPGSSjeEG4zHkzQyS8BFXY
WmUyPBeEwp9eNenKliA2386YqwxCsJC5Dd+1KEap/fVyfTuEoExEj2jawWIk
CcubDHiFoFAI3rtPrBjtY01glJYVgof1yrT1xoqQXepx315jIZiM/vEilyL0
qrzF6Vi6EPzn67BdxqkQfR1wnQp6KAQr4Qing24hWt6xy6mqRAjeb+al6ooX
IhU7C0d5LASP97jw9nYWoFye0Svs00KQ1f+/xnv7CxDl5obdR01hyB5ak/F2
/jGy2atyzmpQGP6y0F56q/gIrVYln3SUEYXn8zy798tmIusZ8ZhFFVFY+ULi
PVdLBqqWKMaBB0Thg71FSd3O9D0qEu9OMRaFbEHXClRpVPT31K+d9TdE4Z+J
h4xW6umIYU6/TbhOFIYVOO2RASlou8y6zgdLMViUrPiKpzEWOVlH+J25KAaF
vh6lXWeLRa13uCrGncXg+LD/f5In7yDKoixxI0AMWuaxeQUPxSAOfGpL7pEY
/C3+eOExQxTiOkt7FTInBkcWOOmtCEFCiRc19kaLw7MqqtXcZc7o6wuBqIRE
cWj8ZNV/TcARpfV/+PYzUxyebDG1uBt6GfGQtYJyaeKw97PbxXZ0HrEhobZd
n8XhjPlKV8jCUfR3pvPCDzEJKFNANmr9bQuGDfTu3H8mAa+fds6brPIFOe5/
B9ZrJWDkOGdW0Cc/YJvyTNWymW7/88L2w1P+4NsQsZvjmwT01y3o4Oa6DTq9
NiX9NiWg17lfHS7SIcCu8+zZYmlJmNkVK7lNJQKcYuBfCL8mCafu/Hwi4R8L
AryN2KmekvCp3938n3OxIG82SKbEVxLWHTjL7m4fB5b7f5z5FCYJ19b4khL1
74KUavxGjCoJU31taXv/xYMvHm4pL7Ak9Dpm7x+fmgj+Tj980tokCY/of8i9
2pQIpC/1tPS3SULDjGt995cTgaepzj+mLvr96hdGW2ZJgE9J0MF0WhJaXTFN
ymVMBhYTDfunuInwo3BLi7FOCrhtu3Zyg0CEG+dDjpg6poD8zypunKJEeEU8
uuPRnRTwuz7jgYYsEQZWVm+BzhSQlnNtR4gmEXYcP0A6apUK6vgfS6UAIjSV
4C//6JUKJmN7tQqOEmEpm4V1aWoq2Oev59F+ggg3Uzw1z3xKBd1WIn1C9kT4
3KxPIRymgc0PZitKTkTYbx0LsmzSgKx+5C54lQglbjyyZ/FMA14aC7oO3kSo
g45mt+elgZwS2fO+AUQ4NMIrolKbBppJtj6xIURYzNoaONKZBgjcb0sr7hAh
S63WzyObaUA7+m9zUwIRyj8XCZzjSQcOW2ojX1OJEOzjYVyQTQcvfmXzb90n
wqBKD74Fk3Rg1eZx27iSCFnzjz6YTUgHknrZy6zVREjrHjQ5ej8d/EBNLo2v
iZBZqS5wGy0d3H4uaKX1lggLiIHoU3M6MFDVaV97R4TrR/SC+zrTAU+Jq+6L
DiK8c1VE5tRgOsh/ULd7dy8RDrxXS4tbSgfXRaYe/xwkQibxg7In/6UDzTRu
0cIx+v2LX4jh26iAhftQ0uUpIpQM35iX3UUF7Xcubyf+IkJP152bBwWoIG3b
3dsDC0RYWPru+WtxKrgY8nI54zcR7tG3jKqQoQKFv8MulhtE2H5CblxQiQqW
vdhGeBhIMDaHEy6oUUHdgrrVRxYStL2hzH14PxVEu51rv7ODBJeZFj+uHaIC
8++RugacJBgqzftHAVKBqF1ZNQsvCc6/u8PcoUsFk/3fdtcLkCDhXprntD4V
lFkx5weKkmC+W9E7b0Mq8OtUEtUkkqDa6+ux/sZUoHvcMum3DAmq7nt3eMWE
CjhagrY/UyDBw/xNlyeOU0G3TtHta7tJ0Csj+a7JCSp48LpzWVGDBM2cE/QV
6djlwF+XqQMk+H5RQySUbq/xTGYkT4sEyc38907S/W0qm1pd0iFBzZ8D5zON
qKCl0Kdd7BgJeqsZrdgaUEGSVK5urzEJtvpJ/8nQowLbnHfVaWYkaMAI/p3U
oQJZoZXdpyxIsCf9Wm6ENhXMJ4vn77IhQYZJStheTSqo4TQQfX+eHj/nArDb
SwXhMTeSou1JcKai3ItDlQpOsGRt13MiQcPbe99rKFDByNqv5dc3SNDl2QEH
JjEqKPYUcPXzoud7rGCtkJ8KPOfgyD5/Elwiihp27KSC7RPJ7U/DSfDIl0sf
Hv1NB50XXuu6xZCgrPjopZN0vWT3TlaT75Lg2pPXbqHT6UC142D+w3QSFJf2
fnnjSzpYN7IXPZ9Ngg99ZO3VWtNBY1NskvBDEny20HrO+3U6sH41dDu5mASz
/+gpZOSlA9K+HSumT0kwte3GLa/0dDBTtseVo5IEv6iqMA3EpIOg/AiriNd0
3Nc9bnCVrm/i0/Yjb0jQxPE3Nj1P13f2V93NZhLcOcj0c/QEXd+JiqreHSTo
5w71y1XSwYeAT9udx0iQadNAk2U6DYz0fZmjTJGgzzYpm8UvaWBZ82t36S8S
JDLXqVzEaUBobTBv/g8JHtc+TUapaeDyrRnowyEFH5cuEgs104D3lzm5TG4p
qCd97n45KQ1Q1Jc4awlS8D2/3mVdtjRQtrDWvyUpBbmXrFVYvqaCjausvlF7
peCaegqDsHsq4Gxnu1ikKQW7mzV/hpunAkklzmPvgBQ0/yEsFLIvFej/4OPf
ZSQFT1xX+Kr2LwUkOZDK085LwXeqBZdSI1IA+YLW9OMoKSjqV/7ALSwZHKqD
HW9jpWAAh8xZn0vJ4ITY0ZfTiVLws72zCRnQ99M+owjlbCl4hEvkue9aEkBW
1sTnZVLQ5f7pdRaXJGBpdvNM4zcp6HaO8UHnoUQQdqSodVRRGh5aihCWtowD
jRk6dTOq0jC84Wz9E8Y4sG2xr+L3XmnIMXWyras0FlByObPZoDRc9iE8ZGKK
BQnMnu57TktDl4X2UuFCCshp0uYNDZCGH4MOXz03EQWqDL/YEtul4X3Wmmtf
NELB7MmtuQvuMhDGtxzPzHUBnbRYyHtTBropnZIimDqD5zuEE5u9ZWDbtZqw
3X8dQUC9xh7lEBmo13Nw/LT1FcCm5uK5nixDn+ddcuJCF4EMV9dqSrUMzB3i
6inffgzYfihmbGORhf9YcgN8j9kiqHDAPHCHLHzNyGZt/fQ8kopsylXllIUq
l7ifQ8pF9ENrWDddQBZazZjvO/rTDvnQ+CMvK8jCeLE5PZlsR5QSG8y2ZSoL
w3CRboDNdfTOyJJXI0sWDvIzz5z85INWKa+/mDyQhYEiQfcqz/oi6XfSaVce
y0Il5bM3f4/7ogDjJcH0p7JwSmFFkXPZD6mYJIivN8jCo7MScidYAlHS8TZ5
PCMLRdTOn6PeCkZ1cWo/vy7Iwg+bWimgPBj9bKeWLvyWhbM1p0v0ZoLR0ROO
u6UY5aBbkvCsy8UQtHKCZW8kvxx0fT+0zHgkFFmbaUMTbTloldf4smI0DIUn
PGa8oisHzddFSN95w1F5B0dDoIEcPPip3tL9aDhiO9mn99RcDm5XhbUej8JR
7UkfYx5HOVjrbdWqeyYCTSUOcSi6yUH1270vNsMjEH+n/gfdG3KQuXwHaXtZ
BHI35z95y18Ocs8dfsTCEokkTlVYfo2XgxsqXmXUR5HIJFlIcCFFDv4VtG97
1RqJfD4Hf9uRKQftYaaWwlwk6jhlansoT47+fcW/8n1/FAo9PXMpp0oO/tC7
xDGEo9CTlFNSL1/LQYH+NA2LkSjU96Vm/OMbej3HN17wMUYjDYsYR8Z2OTi3
84fkNe1oNGkhe/XyiBy00ZcciyuLRpUZIRTZSTpWrtektEaj0IH+gqkfcvAq
ZTZnciQaSVxJHnVbloMJHLG3EFcMmi2c3VJZk4N6rwrGD8nFoNoZQ7GFf3JQ
a+nhGUGtGGTtyWB9i5UMF0XEby44xCDZqrO39nOQ4QHSN5VZvxi0vPEiaY2L
DGcchsSN78agxLCr7YHCZHjW5vyszLMY1JbUqxOpTIa8Mua6disxiNq996LB
HjIc3B8Xas9CQQ7CiYFs+8nQ/NnNuSYeCmLOPVZ1F5LhZu04+1NlCuqcyO0y
0yPDpzZkyX2aFPRAfnORx4gML9aEKkroU9Dh8krl9FNkaGbjzitoS0FsK7uM
z1iT4QvPuqtkBwr6esDVSeQcGUp0Z9VkXaOg/IDmiIFLZGi7Pwt6+FCQJyY+
uu9AhmDzgmFpMAXpsATiS65kuORDJRpFUxCXwdcBqetk+JljXdAknoIG76hv
THiS4QdrrdCKVAqifbwrWOhLhobGws8CsygogPfHXpfbZNimeJTlyQMKMrLS
O6UURoZ+1CufdB9TkGDWg+uzUWSY5C3qC4ooaHJwI64slgxb+1dsH5ZSUCXJ
qsQjkQwZxpxHnJ9SUKhDRYtGGhly+PVczSinILPinZO/M8mQSz7YTfUZBYnP
OjFX3ydD/qYwo92VFDSj1ijpn0ePJ9rvnUbHNbcktLWKyHAkzdrRgY6jq/3O
btHIUKwt4+59+vNW/7p86ivIsJ95p4NOBQXJHlFLC3tJhmEt351MyyhoOTz2
mV4tmf4+leJ/S6OgNy3fO1jryRC98f5ZVExBCRy6s61NdD7mra6t5lPQebMc
9tg2Mrx1fEb2WS4FKaWskU98JMODVzizeu9R0HrPaX2uL2Tow3fU6hqVglpF
yuw7v5JhbW3N9I0kCqJeYA9JGaDXe11nbPQOXR+PHHIsR8lQl8ew5004BTEp
in3r/UnXm2nojk5PCupw9/mdPU+G+td9/ZncKCin4jPvhRUyfBLtbppnR0GH
NCknxjbJ8NFs5QPtE3R93J5wfcwsD0PfLVw5oEvXRz2McdwuD9s910Tz99P1
YPin4Se3PFRROsA+LE5BNyKnZlMJ8jAcjp1d4KYg94ZvQlBEHurWUItv0/Xr
pFV7LUVaHja94p7eNRWDbNVCRLT2y0O7T1GLEkUx6Iy7h/73Q/KQi91DSZoa
gyxL7G8kQnn4n47xdFFkDDKT0X87YSgPTU/e6jpsF4P0hNhv3rWVhw/lLYxS
eWOQjuXfewcuycPRQMGLNZvRCCb/ahm9Ig/nLLm2HKajkebODvH91+RhUM3C
1pnX0UiFMbVtKEQebhRURL6+EI0I0+IktQJ6Pf0VezTioxCvLNfxvhJ5aLzt
KFHjJn0/tGf0iSiTh/HSKgytllGIbWCs/Vu1PEz1e0t8LhqFNjsKfUPfy8Ow
/TuNyujz7XvVnk+fF+Rh4efyIMb7EagqWj/Y67ACHN13Zvz9yTC0WcQtGnlE
Ab5J8kkckg1DR9/1v0zVV4CXu316qBuhqGPnzblKMwWYJRvuz5IXiqaS7p9f
uqwA/1JpARPzIUjw3urh63EK8O7gAb2//sHIt7x4zXlQAVrteW8i88YPafZy
3jwXrAizazA5sNMFkbbaXQgRivB38/dOKVYXxCYdZ/cxRhGGtHiuNB5yRt+u
spsfSVaEOGCMcftjR+TDuF1NJl8RGlNZpdh8LqOXZMa5mXeKcJzV6ZIX/f2p
4b3kEiCgBG9nT4yJzykg0ewKu72iSrD7Vs3+8UtiiKX+hs2spBJko1QHWHUt
1X1mmze8qKAE79JeZmt9kwEeOTPko1pKMNuooWsl4ggob5qYZLdXgm7SGa9j
0k8DFb6vdllPlCC1m/mQS+IVYBS1vjz8TAmegE+up5o7AId10SjZaiXo7c7D
TeVxBPeHL5WUNyjB4ZKPGTzxToCL9nPp7VclKOqq5ezk6woW9LbCl5mU4ezn
j5c5oq8DzmqigOZ2ZTg1nWrjMngdKCgdLQraqQxZs8dz+TRuADuemHY2QWX4
n9uc2LGBG6BzkIdAVFaG5kXfK5Zkb4JKb9mC41bK8O+r0zu3Um+Bjh8GB5Nt
lWHwMu+hs8O3wMw513dfLylDnuUukx/yXkDmaNmcvZsyVLx8MSurxgukcWke
8AtRhvr6a29kOr1BRZhtG4pUhmZio2+W+H3Ah9+3bf+LVYYv92oZ/7D2AawD
DcEJacqQ2v/ziEm/D/ApOt6aX6IMl/SDjBu/+oIU0etnZ8qUYcwzjskX/H6g
LD7pl9oLevzwdOPWk35g+lYP92usDEvsJFMN3/oBG51LNp+7lKEw9eTFnAJ/
4PU8bEawTxnWtx62vzXgD5LI+bfPDyvDnU0iAld4AkAb58/c6R/KUMBtNOSO
bwCYDNm5d/e8Mpz4crEelwQAppXdbz1X6PnxMzawDwQAcSfzMzXryrAhN77P
dWcg+L//oeH//w/9P56WzGc=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["\"r/L\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(T\\), \\(00\\)]\\)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  ImageSize->226.77165354330708`,
  Method->{},
  PlotRange->{{-15, 15}, {-0.2, 0.8}},
  PlotRangeClipping->True,
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{
  3.620555932564477*^9, {3.620555965606341*^9, 3.620556019401805*^9}, {
   3.620556052700047*^9, 3.6205560710724363`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<../figures/delta-box.pdf\>\"", ",", " ", "fig"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6205560727128277`*^9, 3.6205560798631573`*^9}}],

Cell[BoxData["\<\"../figures/delta-box.pdf\"\>"], "Output",
 CellChangeTimes->{3.620556081030723*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   SubscriptBox["T", "00"], TraditionalForm]]],
 " Energiedichte ausrechnen"
}], "Subsection",
 CellChangeTimes->{{3.6204691500985413`*^9, 3.620469159108666*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Die", " ", "T00"}], "-", 
     RowBox[{
     "Integrale", " ", "ausrechnen", " ", "dauert", " ", "eine", " ", 
      "Weile"}]}], "..."}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"maxOrder", " ", "=", " ", "6"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"T00sOrders", " ", "=", " ", 
    RowBox[{"Monitor", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"T00", "[", 
         RowBox[{"z", ",", "order"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"order", ",", "0", ",", "maxOrder"}], "}"}]}], "]"}], ",", 
      "order"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.62046815284481*^9, 3.620468191856584*^9}, {
   3.6204688605433292`*^9, 3.6204688608605137`*^9}, {3.620538883383157*^9, 
   3.62053888529703*^9}, 3.6205392911480722`*^9, 3.620540612044396*^9, {
   3.6205531333737*^9, 3.6205531466860847`*^9}}],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{3.6204681948575087`*^9, 3.620468274214451*^9, 
  3.620469194901211*^9, 3.6205389081699867`*^9, 3.620539369815606*^9, 
  3.620540632629447*^9, 3.620545240136653*^9, 3.620551500070717*^9, 
  3.620553143477456*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "z"}], ")"}], 
      RowBox[{"-", "N"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Gamma", "[", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "N"}], "]"}]}], "+", 
       RowBox[{"Gamma", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "1"}], "+", "N"}], ",", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "a", " ", "z"}]}], "]"}]}], 
      ")"}]}], "+", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], 
      RowBox[{"2", " ", "N"}]], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"\[ImaginaryI]", " ", "z"}], ")"}], 
      RowBox[{"-", "N"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Gamma", "[", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "N"}], "]"}]}], "+", 
       RowBox[{"Gamma", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "1"}], "+", "N"}], ",", 
         RowBox[{"\[ImaginaryI]", " ", "a", " ", "z"}]}], "]"}]}], ")"}]}]}], 
   ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "z"}], ")"}], 
      RowBox[{"1", "-", 
       RowBox[{"2", " ", "N"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Gamma", "[", 
        RowBox[{
         RowBox[{"-", "2"}], "+", 
         RowBox[{"2", " ", "N"}]}], "]"}], "-", 
       RowBox[{"Gamma", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"2", " ", "N"}]}], ",", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "a", " ", "z"}]}], "]"}]}], 
      ")"}]}], "+", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], 
      RowBox[{"2", " ", "N"}]], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"\[ImaginaryI]", " ", "z"}], ")"}], 
      RowBox[{"1", "-", 
       RowBox[{"2", " ", "N"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Gamma", "[", 
        RowBox[{
         RowBox[{"-", "2"}], "+", 
         RowBox[{"2", " ", "N"}]}], "]"}], "-", 
       RowBox[{"Gamma", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"2", " ", "N"}]}], ",", 
         RowBox[{"\[ImaginaryI]", " ", "a", " ", "z"}]}], "]"}]}], ")"}]}]}], 
   ",", 
   RowBox[{
    SuperscriptBox["z", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "z"}], ")"}], 
        RowBox[{
         RowBox[{"-", "3"}], " ", "N"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Gamma", "[", 
          RowBox[{
           RowBox[{"-", "3"}], "+", 
           RowBox[{"3", " ", "N"}]}], "]"}], "-", 
         RowBox[{"Gamma", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "3"}], "+", 
            RowBox[{"3", " ", "N"}]}], ",", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "a", " ", "z"}]}], "]"}]}], 
        ")"}]}], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], 
        RowBox[{"2", " ", "N"}]], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[ImaginaryI]", " ", "z"}], ")"}], 
        RowBox[{
         RowBox[{"-", "3"}], " ", "N"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Gamma", "[", 
          RowBox[{
           RowBox[{"-", "3"}], "+", 
           RowBox[{"3", " ", "N"}]}], "]"}], "-", 
         RowBox[{"Gamma", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "3"}], "+", 
            RowBox[{"3", " ", "N"}]}], ",", 
           RowBox[{"\[ImaginaryI]", " ", "a", " ", "z"}]}], "]"}]}], 
        ")"}]}]}], ")"}]}], ",", 
   RowBox[{"\[ImaginaryI]", " ", 
    SuperscriptBox["z", "3"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "z"}], ")"}], 
        RowBox[{
         RowBox[{"-", "4"}], " ", "N"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Gamma", "[", 
          RowBox[{
           RowBox[{"-", "4"}], "+", 
           RowBox[{"4", " ", "N"}]}], "]"}], "-", 
         RowBox[{"Gamma", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "4"}], "+", 
            RowBox[{"4", " ", "N"}]}], ",", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "a", " ", "z"}]}], "]"}]}], 
        ")"}]}], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], 
        RowBox[{"2", " ", "N"}]], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[ImaginaryI]", " ", "z"}], ")"}], 
        RowBox[{
         RowBox[{"-", "4"}], " ", "N"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Gamma", "[", 
           RowBox[{
            RowBox[{"-", "4"}], "+", 
            RowBox[{"4", " ", "N"}]}], "]"}]}], "+", 
         RowBox[{"Gamma", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "4"}], "+", 
            RowBox[{"4", " ", "N"}]}], ",", 
           RowBox[{"\[ImaginaryI]", " ", "a", " ", "z"}]}], "]"}]}], 
        ")"}]}]}], ")"}]}], ",", 
   RowBox[{
    SuperscriptBox["z", "4"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "z"}], ")"}], 
        RowBox[{
         RowBox[{"-", "5"}], " ", "N"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Gamma", "[", 
           RowBox[{
            RowBox[{"-", "5"}], "+", 
            RowBox[{"5", " ", "N"}]}], "]"}]}], "+", 
         RowBox[{"Gamma", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "5"}], "+", 
            RowBox[{"5", " ", "N"}]}], ",", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "a", " ", "z"}]}], "]"}]}], 
        ")"}]}], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], 
        RowBox[{"2", " ", "N"}]], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[ImaginaryI]", " ", "z"}], ")"}], 
        RowBox[{
         RowBox[{"-", "5"}], " ", "N"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Gamma", "[", 
           RowBox[{
            RowBox[{"-", "5"}], "+", 
            RowBox[{"5", " ", "N"}]}], "]"}]}], "+", 
         RowBox[{"Gamma", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "5"}], "+", 
            RowBox[{"5", " ", "N"}]}], ",", 
           RowBox[{"\[ImaginaryI]", " ", "a", " ", "z"}]}], "]"}]}], 
        ")"}]}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "z"}], ")"}], 
      RowBox[{"1", "-", 
       RowBox[{"6", " ", "N"}]}]], " ", 
     SuperscriptBox["z", "4"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Gamma", "[", 
        RowBox[{
         RowBox[{"-", "6"}], "+", 
         RowBox[{"6", " ", "N"}]}], "]"}], "-", 
       RowBox[{"Gamma", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"6", " ", "N"}]}], ",", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "a", " ", "z"}]}], "]"}]}], 
      ")"}]}], "+", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], 
      RowBox[{"2", " ", "N"}]], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"\[ImaginaryI]", " ", "z"}], ")"}], 
      RowBox[{"1", "-", 
       RowBox[{"6", " ", "N"}]}]], " ", 
     SuperscriptBox["z", "4"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Gamma", "[", 
        RowBox[{
         RowBox[{"-", "6"}], "+", 
         RowBox[{"6", " ", "N"}]}], "]"}], "-", 
       RowBox[{"Gamma", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"6", " ", "N"}]}], ",", 
         RowBox[{"\[ImaginaryI]", " ", "a", " ", "z"}]}], "]"}]}], ")"}]}]}], 
   ",", 
   RowBox[{
    SuperscriptBox["z", "6"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "z"}], ")"}], 
        RowBox[{
         RowBox[{"-", "7"}], " ", "N"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Gamma", "[", 
          RowBox[{
           RowBox[{"-", "7"}], "+", 
           RowBox[{"7", " ", "N"}]}], "]"}], "-", 
         RowBox[{"Gamma", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "7"}], "+", 
            RowBox[{"7", " ", "N"}]}], ",", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "a", " ", "z"}]}], "]"}]}], 
        ")"}]}], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], 
        RowBox[{"2", " ", "N"}]], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[ImaginaryI]", " ", "z"}], ")"}], 
        RowBox[{
         RowBox[{"-", "7"}], " ", "N"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Gamma", "[", 
          RowBox[{
           RowBox[{"-", "7"}], "+", 
           RowBox[{"7", " ", "N"}]}], "]"}], "-", 
         RowBox[{"Gamma", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "7"}], "+", 
            RowBox[{"7", " ", "N"}]}], ",", 
           RowBox[{"\[ImaginaryI]", " ", "a", " ", "z"}]}], "]"}]}], 
        ")"}]}]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.6204681948575087`*^9, 3.620468274214451*^9, 
  3.620469194901211*^9, 3.6205389081699867`*^9, 3.620539369815606*^9, 
  3.620540632629447*^9, 3.620545240136653*^9, 3.620551500070717*^9, 
  3.6205531770624228`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Das", " ", "hingegen", " ", "geht", " ", 
    RowBox[{"schnell", " ", ":", "D"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{
   RowBox[{"T00s", " ", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
        "T00sOrders", "\[LeftDoubleBracket]", "o", "\[RightDoubleBracket]"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"o", ",", "1", ",", "maxo"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"maxo", ",", " ", "1", ",", 
        RowBox[{"Length", "@", "T00sOrders"}]}], "}"}]}], "]"}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.620539158261279*^9, 3.620539164861763*^9}, {
  3.620539358286375*^9, 3.620539442400219*^9}}],

Cell["\<\
Check that all is real valued (it is!!), for any order and n.\
\>", "Text",
 CellChangeTimes->{{3.6204683604100237`*^9, 3.6204683721265583`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Function", "[", 
     RowBox[{"Strip", ",", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"Evaluate", "[", 
         RowBox[{
          RowBox[{"Strip", "[", 
           RowBox[{
           "T00s", "\[LeftDoubleBracket]", "order", "\[RightDoubleBracket]"}],
            "]"}], " ", "/.", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"z", "\[Rule]", " ", "z"}], ",", 
            RowBox[{"a", "\[Rule]", " ", "l"}], ",", 
            RowBox[{"N", "\[Rule]", " ", "n"}]}], "}"}]}], "]"}], " ", ",", 
        RowBox[{"{", 
         RowBox[{"z", ",", "0", ",", "10"}], "}"}]}], "]"}]}], "]"}], " ", "/@", 
    RowBox[{"{", 
     RowBox[{"Re", ",", "Im"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"l", ",", "1"}], "}"}], ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "3", ",", "7", ",", "1"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"order", ",", "1", ",", " ", 
     RowBox[{"Length", "@", "T00s"}], ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6204671126667013`*^9, 3.620467153471703*^9}, {
   3.620467243929954*^9, 3.620467296437896*^9}, {3.620467496695506*^9, 
   3.620467525836349*^9}, 3.620467561936739*^9, {3.620467871201764*^9, 
   3.620467874380294*^9}, {3.620467938502501*^9, 3.620468017677844*^9}, {
   3.6204682908645563`*^9, 3.620468315951291*^9}, {3.620468350144346*^9, 
   3.620468350801928*^9}, {3.620539454942535*^9, 3.620539478576294*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`l$$ = 1, $CellContext`n$$ = 
    3, $CellContext`order$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`l$$], 1}, 0, 10}, {
      Hold[$CellContext`n$$], 3, 7, 1}, {
      Hold[$CellContext`order$$], 1, 4, 1}}, Typeset`size$$ = {
    490., {62., 70.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`l$53130$$ = 
    0, $CellContext`n$53131$$ = 0, $CellContext`order$53132$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`l$$ = 1, $CellContext`n$$ = 
        3, $CellContext`order$$ = 1}, "ControllerVariables" :> {
        Hold[$CellContext`l$$, $CellContext`l$53130$$, 0], 
        Hold[$CellContext`n$$, $CellContext`n$53131$$, 0], 
        Hold[$CellContext`order$$, $CellContext`order$53132$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Map[
        Function[$CellContext`Strip$, 
         Plot[
          Evaluate[
           ReplaceAll[
            $CellContext`Strip$[
             
             Part[$CellContext`T00s, $CellContext`order$$]], {$CellContext`z -> \
$CellContext`z, $CellContext`a -> $CellContext`l$$, 
             N -> $CellContext`n$$}]], {$CellContext`z, 0, 10}]], {Re, Im}], 
      "Specifications" :> {{{$CellContext`l$$, 1}, 0, 10}, {$CellContext`n$$, 
         3, 7, 1}, {$CellContext`order$$, 1, 4, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{547., {146., 153.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.6204671235442266`*^9, 3.62046715378055*^9}, {
   3.6204672442302217`*^9, 3.620467296867135*^9}, {3.620467526698874*^9, 
   3.620467562300626*^9}, {3.620467908177186*^9, 3.620468017814459*^9}, 
   3.620468316465008*^9, 3.6204683512348127`*^9, 3.620469223112007*^9, {
   3.620539449881401*^9, 3.620539455775919*^9}, 3.620551503587186*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\(T00s \
\[LeftDoubleBracket] 1 \[RightDoubleBracket]\\)\[NoBreak] is longer than \
depth of object. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.620561751306513*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\(T00s \
\[LeftDoubleBracket] 1 \[RightDoubleBracket]\\)\[NoBreak] is longer than \
depth of object. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.620561751368629*^9}]
}, Open  ]],

Cell["\<\
Make some more interesting plots\
\>", "Text",
 CellChangeTimes->{{3.620468375226832*^9, 3.620468377974688*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", " ", 
    RowBox[{
     RowBox[{"Evaluate", "@", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{"-", "z"}], "]"}], "/", 
          RowBox[{"(", 
           RowBox[{"4", "\[Pi]", " ", "z"}], ")"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Re", "@", 
          RowBox[{"T00s", "\[LeftDoubleBracket]", 
           RowBox[{"1", ";;", "4"}], "\[RightDoubleBracket]"}]}], " ", "/.", 
         " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"z", "\[Rule]", " ", "z"}], ",", 
           RowBox[{"a", "\[Rule]", " ", "l"}], ",", " ", 
           RowBox[{"N", "\[Rule]", " ", "n"}]}], "}"}]}]}], 
       "\[IndentingNewLine]", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", "0", ",", "20"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"Join", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", "\"\<full\>\"", "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"ToString", "[", "n", "]"}], "<>", "\"\<. Order\>\""}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", "1", ",", 
              RowBox[{"Length", "@", "T00s"}]}], "}"}]}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"Right", ",", "Top"}], "}"}]}], "\[IndentingNewLine]", 
       "]"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"l", ",", "1"}], "}"}], ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "3", ",", "7", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.620468381284362*^9, 3.620468445456209*^9}, {
   3.620468512421328*^9, 3.6204685704586983`*^9}, {3.620468603711101*^9, 
   3.620468674550071*^9}, 3.6205413262546463`*^9, {3.620544696585331*^9, 
   3.620544726880649*^9}, {3.620551459497061*^9, 3.6205514607893744`*^9}, {
   3.6205516231935167`*^9, 3.620551683710259*^9}, 3.6205536641444902`*^9, 
   3.620554099009075*^9, 3.620554141123886*^9, {3.620554208983567*^9, 
   3.620554278093738*^9}, {3.620556517111512*^9, 3.620556521734901*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`l$$ = 0.612, $CellContext`n$$ = 3, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`l$$], 1}, 0, 2}, {
      Hold[$CellContext`n$$], 3, 7, 1}}, Typeset`size$$ = {
    450., {131., 139.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`l$107334$$ = 
    0, $CellContext`n$107335$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`l$$ = 1, $CellContext`n$$ = 3}, 
      "ControllerVariables" :> {
        Hold[$CellContext`l$$, $CellContext`l$107334$$, 0], 
        Hold[$CellContext`n$$, $CellContext`n$107335$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[
        Evaluate[
         Join[{Exp[-$CellContext`z]/(4 Pi $CellContext`z)}, 
          ReplaceAll[
           Re[
            Part[$CellContext`T00s, 
             Span[
             1, 4]]], {$CellContext`z -> $CellContext`z, $CellContext`a -> \
$CellContext`l$$, N -> $CellContext`n$$}]]], {$CellContext`z, 0, 20}, 
        PlotLegends -> Placed[
          Join[{"orig"}, 
           Table[
            StringJoin[
             ToString[$CellContext`n$$], ". Order"], {$CellContext`n$$, 1, 
             Length[$CellContext`T00s]}]], {Right, Top}]], 
      "Specifications" :> {{{$CellContext`l$$, 1}, 0, 2}, {$CellContext`n$$, 
         3, 7, 1}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{507., {227., 234.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.6204686749740953`*^9, 3.620469224764586*^9, {3.620541320978858*^9, 
   3.620541326613138*^9}, 3.620544658766129*^9, {3.620544696945475*^9, 
   3.620544727483622*^9}, 3.620551461704459*^9, 3.620551506037496*^9, {
   3.620551666760928*^9, 3.620551684561933*^9}, 3.620553665974449*^9, 
   3.620554100421541*^9, 3.620554142130525*^9, {3.62055421319063*^9, 
   3.620554278578487*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "take"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot take positions \[NoBreak]\\!\\(1\\)\[NoBreak] \
through \[NoBreak]\\!\\(4\\)\[NoBreak] in \[NoBreak]\\!\\(T00s\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Part/take\\\", \
ButtonNote -> \\\"Part::take\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.620561751512003*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Join", "::", "heads"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Heads \[NoBreak]\\!\\(List\\)\[NoBreak] and \
\[NoBreak]\\!\\(Re\\)\[NoBreak] at positions \[NoBreak]\\!\\(1\\)\[NoBreak] \
and \[NoBreak]\\!\\(2\\)\[NoBreak] are expected to be the same. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/heads\\\", \
ButtonNote -> \\\"Join::heads\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.620561751556584*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Join", "::", "heads"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Heads \[NoBreak]\\!\\(List\\)\[NoBreak] and \
\[NoBreak]\\!\\(Re\\)\[NoBreak] at positions \[NoBreak]\\!\\(1\\)\[NoBreak] \
and \[NoBreak]\\!\\(2\\)\[NoBreak] are expected to be the same. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/heads\\\", \
ButtonNote -> \\\"Join::heads\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6205617516371803`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Join", "::", "heads"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Heads \[NoBreak]\\!\\(List\\)\[NoBreak] and \
\[NoBreak]\\!\\(Re\\)\[NoBreak] at positions \[NoBreak]\\!\\(1\\)\[NoBreak] \
and \[NoBreak]\\!\\(2\\)\[NoBreak] are expected to be the same. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/heads\\\", \
ButtonNote -> \\\"Join::heads\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.620561751639165*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Join :: \
heads\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6205617518649187`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fig", "=", 
  RowBox[{"Plot", "[", " ", 
   RowBox[{
    RowBox[{"Evaluate", "@", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Exp", "[", 
          RowBox[{"-", "z"}], "]"}], "/", 
         RowBox[{"(", 
          RowBox[{"4", "\[Pi]", " ", "z"}], ")"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Re", "@", 
         RowBox[{"T00s", "\[LeftDoubleBracket]", 
          RowBox[{"1", ";;", "4"}], "\[RightDoubleBracket]"}]}], " ", "/.", 
        " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"z", "\[Rule]", " ", "z"}], ",", 
          RowBox[{"a", "\[Rule]", " ", "0.62"}], ",", " ", 
          RowBox[{"N", "\[Rule]", " ", "3"}]}], "}"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"z", ",", "0", ",", "20"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{"Join", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", "\"\<full\>\"", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"ToString", "[", "n", "]"}], "<>", "\"\<. Order\>\""}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "1", ",", 
             RowBox[{"Length", "@", "T00s"}]}], "}"}]}], "]"}]}], "]"}], ",", 
       
       RowBox[{"{", 
        RowBox[{"Right", ",", "Top"}], "}"}]}], "\[IndentingNewLine]", 
      "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotRangePadding", "\[Rule]", " ", "None"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotStyle", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Thick", ",", "Black"}], "}"}], ",", "Red", ",", 
       RowBox[{"Darker", "@", "Green"}], ",", 
       RowBox[{"Darker", "@", "Yellow"}], ",", " ", "Blue"}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"AxesLabel", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<r/L\>\"", ",", " ", 
       "\"\<\!\(\*SubscriptBox[\(T\), \(00\)]\)\>\""}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "\[Rule]", " ", 
     RowBox[{"15", "cm"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.620556524849887*^9, 3.6205566756369762`*^9}, 
   3.6205567370807877`*^9}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {}, 
     {GrayLevel[0], Thickness[Large], LineBox[CompressedData["
1:eJwVl3c8198Xx41IlJ2VvbfPKIre9x4NmyKEpKyMCu2USgjZISSVmWyJsipE
2dkjlMxI2Zv8vr9/zn2cx+ve57mvx72Px71HzM7dxJGOhoYm57/w/9Gd9fp5
CYYuXCvXSSrYqMaHX4r9vHi2CxtRZhXuP6zGivxsgX+quzA9azTDYbZq/O/f
ROdUaDf+ZkKvGy7zCSfVv7j0W6QXb8pNvMl8UIkX4orkf4T04t1yO16+FarE
Wk4Nw22rvfiF9MPzp0oq8BT9sllp+zfsdb/oy53Fjxi37WTLhT6sdgYuWMBH
HJkoXpuU04dfuwtbCz/6gPcTRuoPA/qxLf/vR1aH3+NgFod5r4V+LPn7oZhJ
ajn+3uuZ7WE7gI3ICWuqzOXY73qasIXGd2zFSGs9O1yKW/I26GSmf2CU6ntu
vK4Yc+IdNruUB/G1Y9Hl0wbFWEM6Wj3AYRBvUDXkvdrf4bCFjPlbrYN4UuV8
d8zkW7z3UaejXdZPzMJJtDgRRdjm5tlD/T9/Ytct58u8vYU44MxvYXO+ISys
OFVnc6MQf1Oi7dF9MIRv3CIHnyx7g+/VK+qRzwxjEynSyRc2BfjV63fSWY+H
8chxAcOCnQW4Le4QvVTjML5dwTpYVv4aSzpZlPMdGMFTlxtZL4u/xvX0fso0
XKPYs1Mir44uHy9MsrLc0h3F55aXv3TdycNCbU/G5++N4vRvSS6Sq7nYIzEv
cXxqFGueLrC8v5KDeYg+zq+fx/DM/fCJcd5sDJLnpnU2x/BoHN4j+DILu7DM
NlRRx/FB3vldb1WzcHkv44O3ieP4YtLJ1i6bTGx3nbL87NYv3JvrGsBa9wrn
5j3su6A8iSknaLDYahqe5JwM0bP9L6e82b83Ow3LXNdDstGTuKC/ciPlbBpO
PMiSNLw6ibuNf5d7NqXiyLqQc1Y1v7HZTDCz/NsU3Kz4h3f/ym9cBxw3Da+k
YJYIw7rdClPYwnhaIYqcgv3MWRVbI6YwyohaP/86GV8fDp/Vtv6Dz7AoMGW9
T8IFWjPJUuF/cLutuoiabxKezjhuSl/1B7sZLP17q5uEnT043n2Q+YsVlaw/
3ulNxFabkV775v/i6RSmg4n0ifgFS4Mvx9EZnCm/trd+IwEj4ra1t80MdlAn
PeBLTsD9bgr7pm/MYNHjfd8/6yRgvrbgscbMGeyplPVBNv4pfhRnoBvIPosL
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
       "]]}, 
     {RGBColor[1, 0, 0], LineBox[CompressedData["
1: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
RHYO6xN5eDYlP7+8TOi9+K96N5GX/wGWQMcG
       "]]}, 
     {RGBColor[0, 
       NCache[
        Rational[2, 3], 0.6666666666666666], 0], LineBox[CompressedData["
1:eJwVlnk8VO8Xx1GpJLQv9hk7M5YpKctzIruEEMLYDSahREyZkShbspdEJSml
ksj6IJE1FZEkIUqKJFny9bu/f+59vV/n3rN8zjnPvZJux608ebi4uMSJy//v
2WfdeFU9snQOfDTeK26KUcNbCbMjEqeRy1kLpgjBy4015yQkLqJEGcM1mwkW
SC59xNebjKZjTPl5Cc6uTRBfJXEF/RN2D502wUhp0iNx2TsHbU5JM3tP8EeB
6//967mJHrZOXKggWCp/rfrC4m0U8OEkJZ1gpnbwsb/id9H91Vr7mAQ/6RrM
m9G7j3ybrB5qEbzgZ9b/y/sh0njRGr+a4Fzu/ot/9R8jnY+Vb9qMMTrQfll6
tqcYnRTex4kn+GumYd2MTwkyr6VnGhAc77Hk+HvxKdqsbbR90Qijt4uM1Cnx
csQM67M6TPCpJjGVyccVKHpr4/q/hhjtTOlq/aFXhYLQnGoawW4KsOK7N0Zc
G9pKaw0w4lkMezXDqkUiEnXbzAnuGrQRndGvQ70Xbw1162MUen9d+XRPPRqw
nyztOoCRSfIo73Tuc9TwsLrWlGCR0DrrXz4NKA70dlfrYVSrFzI1ufgCpa+z
pV/SxWj1hyHZH+LNiKdUt2YKYdRbWx088bUZ+cy7S2kSfC8/8/n3xy2o6/De
vxE6GJkHmdPH9dqQhancyJwWRulrK9LHvF+hkit3h+/sxagkxCToxPZOVJv5
s+yFBkbXxvfs+M3qREEhAYsf92Dk37nRe1r/NWp4nPl6aTdGG6+95PnV8wax
9802LKhitChQejdA6y0y2JgoOqGC0QjnlsVU7lt0UCnka48yRqXeZ69P+nQh
KJl6d52CkQNt176fi91I4+4waVwOoxstOYHfxd+j56uWBk+JYTST+VThU/x7
pNo4K/JLBCMD79bhN/PvkRpJ+4OHMEYTK/7aVLztQ/f/xn/W2I6Rhrb5vosx
/ejP4oR8ygaMOh/+45Gd/ISsQwTtN6wg8kVrnddTB9Hm0+NbpLgx0pRJ3Rfj
MYjyBQddVZZrUOLM3d9hrweRumzpvd2LNWjX5W5Pt8LPaNri147f0zUookXJ
RJU+TOjtYbjvcw0qeFwmU5g2jLp/KDNGB2rQm0zdFdJtw+gSs0c2vr8GSXnb
VW3fO4J8xTZeaOipQS0roqhcm74gLv+937+216Ct2h82vmocRTvX/9TmLq9B
RQ8vfmBSx9HWY5blobE1aHzjeLyJ6zg6dtN1c1JMDZI9ZaIjlzqO9Jou8dyM
qkG5WutuDM+PI13uuWtPz9ag5OZ4L4cX35H9lPn3rKAadGr40i9Dxx8o9V/L
sqd9DcpZ13pug/4Ukmt8uHKeVIN0tMMd2c5TyIP9WdVTvAb1+yvungyZQpmt
LcJtwjVo+5u40bZ7U2gz+Zxi7OYadDnTzPiC0C9kqrrHvWlVDTon3SGw/OEX
WtjYEGE4Vo280esrE0G/kcn2QA2f/GrEdXO24kPcbzQY9I+if7MaZa4U6W/J
+420WoIOiFyvRi+bvcTuvvuNPBmsvsq0aiRn/e+m574Z9GzbRE9tVDX6ypC9
P8D9B/lWuZ8fdq1GvslnajqTZpHXf6MBGdurkf8X+eGSonlUPJ7MEA2tQoPO
79fUNc+juRvLX44GVaHDvReo7SPz6Opiv3IaswpptI6d/rJzAe1UotHmXKrQ
ise3hbbGLKCu9BZgG1ehTJakTgh9EeF3t+qv7qhCdZt2XNkrtIQOLFrK8ZdW
Ij7JKNlPGlyQ+mLR98xgBUoUalW44bICJMbkc4dI5cjtgzVe0cYLW9T7l/1W
laHAF1Fux2X5QG6VsUZYQwl6HMB/eLvxejisqB/zKbEY3Qj3G1c5IgQhekp7
ZHY+QpE5/yxnJjaA5vqljpGsQsT1dhCqwjZBqZCc5pTyHSRz0ivUWmELHLGr
bd2YehON/MmwXVe9FWzX8R0f3ZCNTL74nkkO3A5uftSEEyvTkPlIkqKY2E5Q
yH3Wt2U8Do0/d2O/fCAMqCzeytqXjcQv9/omlghDXfKUrpwWG1k7m9tYVwpD
IW+hp4gAG9XM7VUYfCkMJ1+V3W/xiEDJlA1df4eFwV1Aun9m7gzSzMCysjtF
oLNgYLUfJRzF+4q8Oh8tAjK2Pwq2NQUj6oZ3onp0UQg2m3gTccYbjSaMRqZ5
ikKQYNf+S5NeKJvv79iYnyiIht812+DmhfhXbi+ODxUFjVUXNI8ZeaLxWXuD
d5dFASksZkTtdEe3+z/6+zSIgjlvRodbgRMSKfiCL8mLwdc9YYdGgk1Ql9Ss
1JCyGAhddvH0DTFCcTd4Y3epi0GSXtB8eZgBWrgqa/1eVwwsrK/oP43WRb0J
Pl9JjoQdaTXQGLtRyokfQqWJYlC7Z+765DES5kN/XPt/i8Hmr44J56YtcOh+
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
/w2PsaM4WKk38tt/0WT479pyfFUkB6euU+y1SyCDhrzqL25iH9yDwp/yXyUD
/2Wx3MZTxL6oDTyVzyZDrvJPqasnOZhvGkoNcskwxPN8pXMQBz8K5C1j5xPz
WaK1tuwYB/8LuPxsppgMMmbaSQ+J/X2lMvNsQykZIh/8OrLalYNvTtmWU8vJ
8EfXb+iQMwcbB4hUMDAZ2hMrTjyx4+D043cq+1vJULY9e+aFGQf7KPNVzXeQ
IcxDB9025mCtSWbV1jdkcD45WxJswMHD/mrVFr1kKD+yaDOOiPnyr65pGCH6
yTPfT1bj4Gbm27r7S2Q4se3z6eFNHHxNSb2+mUsKLN5C1gdBDg6YyKwfXSEF
KqId5S/WcfBWpvNzCT4piHZXJQcQ56Wb37eG1K1SUI/ubxefZuN/PstNLGUp
WGPvL/6rjY2VvRU7zFylYNXrGpf6UDYe8BE//sBDCvTIUh0ZQWwcz9wkJMCQ
AtK2lmJnJht/C1y0fOUvBWb1b6Xr6Gx8i9XabcmSAs2dI4l9+my8Ldnvo22G
FPwZLzP3F2Tj5arCCZd2KQguC9knqRqBi3BOQl2nFKyo7mj3k4zAjvUpVFKX
FAgMKiZlb4jA5U3hAcN9RLzMYfmyX2fxiTemM55fpcBOwIHR+OgsHhv7vui7
Qhp+B6U+D1I4i19tVFoXvFcarm8t4pniP0OcT8e+ZWlJg+2Lpq25iyxc1FTU
VI+kIaYUaeqMs3AiSzVKyEAaWB6XSPpNLGw2qr5UaCUNmmPdXmw2C7eU758c
8pMGgZ0FWQ2T4fiFy5G3FtelYdejpfT99WG4sigyS2mFDEjfePDkh1YoDudW
sGj7KAMajSbtoBmE+frDjPxLZKEr6VFqAhcDf8mXTM1hyUHXGvnKLwL2OFVu
x8pyG3moDVpXineKYUdnmTvDdvKQWzbwtZhrB5ZKpZkIOMoD25K3QvvbJlyy
fDDJ3U0eXG58kjsUtQJ3vYsUETguD4OFfJZFvSvRpvMTu9wvyEOoRgr3MFke
JX/Gnusr5YFrergtew6hpKteTa4SCiCcvlBgKmGJQk5FnmCRFeD5vYXBxx6W
yNnquniGjAJ4l5ww+FJgiZT43oW0KSmA7ucm/icqVqj5tL7cnr0KENKIn41q
H0Y89lIX+a0UQG+l/ackcxsUvG3IpOycAtjYBZAEjeyR4++l2dfRCmDr5yny
4bw9OvBqx62JiwrwoeS1WcBze7QxxnJRMkkBnlwv/vxH2wEVzdYWxl9TgKnY
6X5flaPoa3cOv9tTBTDqxl9G+JyQQ6pTB/+YAiSFnux9auKCRJ7wCfuNK8DM
MZtYH4YL+vS6zLv5hwLIzp5VXjzvgjwEN3JHzyjAbQdr8We1Lsg/tpG2zK0I
grf8lTN2uaJItvKVXyKKwJ0vyPi0xQ3dZXJ7vLNShAdqwyKmNe6IGVf0aJet
IiydOtSZ3+OOqPeOLiXbK8Kcqp7Epyl3VDz2NP2QiyLwrdcK/kLyQFVuvs0v
jylCzCab7UbnPVCn3Vtq5QVFSHZhfXPW80RzB27P59QoQqiJzqs7eV6IVZlz
rqFOEQIqWVTpZ16IS+3q+m8NRD7TX0XOtXqh1eKXJNVaFcHH+si1wV9eaOt8
qHFDjyL0kTZ9ktT2RrQHZle+TinCjdyEa5Xt3qiUbEheP6MI32mBg/DJG+27
uv+B6l9FsF4VmJo/5Y10Y9TrwpYUYVdOp9GmTQxk4SrxjZ9PCTozvdoDbRnI
f8uMhipZCcJa86d1exhoOu5nvY2MEmj+Cl/oGGWgYJ5vZmHySnCkc+VxzVkG
Yk1+dHmurAQjM+tvPN3sg+Kamy7YaClB6JvPusoWPqjgTFbvaRslKHlPy9Oo
80HDX3RD62OUQGoqNqw4zhfp5nTcVIhTghPHtL8ZZvqiXDuH9uREJRCcn0l+
lueLnFsDSe5pSqB3s6lQsdoX9T3KbVtxSwn2CA9fsJ/wRW/C/5PQr1GCH9lG
G97r+SHV3bGmD+qU4Mu5+++lzP1Q0s8tp7a8UIKitv+0zez8kLkrpfVLqxIk
HTn4l8L0Qy0GjsHR75Xg2dnZJe1kP1S/oaK5aUYJUgxlD2f0+CHJVv0Z5Tkl
yFypzMn95IfYUa/FMheV4LNxRvv5MT+k8/frCQYPBQZ5royOzPqhiv5tYmuF
KODQ00ye3cREO9JvGQVuosDlHU7mn3cyUegh5RPvt1KArF44UiDJROr1Bi/v
ilJAtJd1pp3KRMV3goNMFCnw2vTb+WOGTLTBlTu7mEqByUpfmvZBJgrYmdC0
U40Cu617b3yzYiJqQp7Idw3CPmn/s9eJie4FvW2MM6DAN9nW6I1BTLRWif7r
tzEFdh4sDG8+xUSML+PCjgcpcEnsUKJTOBPJ2PEEKllTYE7sgrZoFBPd1FYV
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
P+wSxQ==
       "]]}, 
     {RGBColor[
       NCache[
        Rational[2, 3], 0.6666666666666666], 
       NCache[
        Rational[2, 3], 0.6666666666666666], 0], LineBox[CompressedData["
1:eJwV13k8VN8bB3BUKqlIqWSdmawzY5k2W+fJnnZLi6wzsm+DLJEwo0Jkq0SS
EJWlKGXJGRIhS5bSN21UsiTZspXf/f0z83q/7uvMfc7nPOfcuXJMb7NTAnx8
fArEx/+/M8KYguqO6bvV/dSf6f/iobpO2f3HZIPRWI0iXY/wYn01R1Y2Gql5
p0XqEl6TVPZAqCcJ7StdXbGdcAYvTmaZ7HVkdi+qS5kw9Zdj/KJzJhouFuyQ
JPxhzc1/C29vIwGbqyWrCFPurNwxN5+LHsVqB/wZ5SEP3dOef2Tuoknzf5Kf
CZd2fc6Z1C9AeNWPOy8Iz7nv7/3tXIwGTJaszyd8i783+o/hQ5T36aTjBcIG
LYlbp9+WoPtf/l1jEf6Ralwz6foIPbg1V6RD+JLjX+uJ+ccovsD27jrCnfMu
KWMy5ShDLsfk8U8eCmiQVvv1sAJp9t/7GUFYIrmr+ad+FXLJcgzYR5ipDEuG
nTGK9NvL6B7hIYH5M22ToTwU3pHtfIVw12dLqUnDGnS3bm24GeGgglXl429r
UeidizbPh3nINOm74Pit56izo5UUSFgyqMbit2sd0hG+/kqBME8/cOzX/As0
3ajZem6Ih5a/71P4KdOIiiZ944QGeaiH9+z0yI9GlH7i2pncHzx0707q8+GH
TcjwhP0BXcIHfQ/aDem/Qtl8F3NYAzx0dWXF1QHnNvRWV0g69hsPPQo09fXb
1I4MNiroriZ8Y2jn5onQdpTmc1z/0lce8mpf5zxu+Bq92/xyWUQ/D6278VLg
99sOpP3slYvhFx6aX1N210enEyWwAuqLPvPQ14jsw2O3OtHo1QnhDYTLnMNu
/nLtQk9u2ln2fOQhK8Y2rdH5brROeOl7zV4eymrKZA/LvEMvv5RNubzhocnU
x8qfLr1Dm2zdhRK6ecjIubm/Y/YdGpoOjizt4qGRJX8sKzr/Q057DW/+6uCh
XboHtaIv9CLF1CMJOm081F68IKDw6xPSUS2pUWog6kUrbVfTP6P9qgAb63lI
Wz5F64LjZ9Q67qbE/4KH4ifvTpx5/Rlt2nZbt6mWh7Yldp9i3v+CBI0NQ9Wr
eehcE9VU3a4fDRzVb7F4xEP5D5/I37/Sj8abXHasLOWhjlS9JVtf9aO/whJi
FQ+J/nU+XrVJ8yuitV1REi3moaYlXDqf2DdUHXihN+UuD4nrvl/XVv8duUsx
R8YzeKioOPq9B30IZTzRTlvD5aGhdUOXTB2GkPXRV3t9InlIIcB0t2LKEFJW
UJhqDSf6W2dVVv/sEPJ6+3UP5ywPJTVecrJ6MYyc053qGwKIfu2//NvY+ie6
Qb8vXuPCQ5mrmjmihmNon6XNSLApD+3WDbEOtx1D1coCAaEmPNTrpbL9V+AY
UmtbJhZqxEObOmK/v7o3hqZN3WN89XgoMXX/3osiv5FMfFWUjhYPcba2rll8
/xtF/il2M1TiIWf0+vqI7wT6HI1XqS/jIb7b0xXvYyfQDtOnZ/sFeCh1qWRv
U84EUhky0E7m46GXjU7Sd99MoIZUF83uPxgpWizcPqU1iTovVVHGv2L0w0Wh
4CP/FGq2u6yqUo2RW9LZ6vaEadQue8MzzwMjr29K/Y+KZlHGxLtSzYpq9Nn2
3Yqaxll0SnjJzc7SamTec5He8nUWTVleqXMurEa7mgeCv0nMofVJNzrCblWj
JQ9zRcQvzKHLAkcMXM5Xo9RQud2BdvPItVBlo8qRalQjtvm6pshfNLRRAUf1
PUNCclyFT7v44InHsVcwVYXiRZqVs+yXgHXxmXqOYCVivrfAS14JwrjYQO/S
oqeI/YLL9FYQAr/ogK3rVMvQQx9h8017V8PB1015D5+VoqwQ9yG1YyKwAX0Q
/bL8IYrMXDgyOSIKw7aKUSl8hYiv8zNUnRGDa+Yul25vzUfy/k5BFsob4LNo
mdxBiWz0dera0VXPxOHciL3VM1YGMv3mdjaJvQn0ns9/dcpLQQe/JqhIS0tA
0D/K9MiGGPRK5WuXNUUCrKr1RFZ8iUb7/HaGpStLQFny0jQoiEYmAh/bN+2U
APWDlVuE9KORnqxKgNhhCfgb4V+8yL6Itlu/4K2IlABWcsitkO7zSLJr1nLi
mwRkgEvJQAkHDT1nhr8s3ALMvG8ZTYkhSCaxxy3+0RaQrm9RDFQNQRa2By0t
KrfAlkJ/L4+WM6h6RlP588stIJDy4Ii60BmURBPt+tO/BXxWm3G3XghC2tew
goKEJPzLLvfB8afRJTfJtqjzkuBxMSvr411vRBd9I6VvJwXBQvk7L81aoO9x
3yOvnJIC9I/PaFWbOcoQ+jMw4C4FW1hF32JzzZDw0k0ll4KkQNqZ8TrR8jBx
jpwwepMoBaPve1fbc4xRbu8HL9c6KeBJl+yIPyKPJPO/4ctK0rDjqmzRp4b9
uIsyTelTlYan9SdWXus9iGOzBGO27ZCG82q0pjuBh/FcmoLFOz1pSJdsd7C+
YIZ74lx/kKylgZqUyHuRdhQn+/0UKYuXBoNdpfduJ9piITTl0DshDffOW7LX
f3bCQXsUV5TNScO/mGVWG+2c8Xf9k0WX+WWgrIsZFfXBGdea1MzprZWB7/cC
p7J7XPAZs7jku8oyUNp1Lmq4wQ0Pn9r6IsBBBhQvmJQ/jfHCry5ZKoq2ycCg
8aOpuXZfrHX5YutQtwwkWg1SjJf74fzESv+6XhlI0vTmmur6Ye5VuZrAIRlQ
erFNJDDfD0u3T1N/CchCDJu2zDXEH795V/vCUloWmoz01KvFArDxT6s/JEtZ
aF47ZpO9JhjfXM/pPHdcFowTozJJ2sF4Uvt+ce9J4vpJoRob52B8K2be+SpT
FnL1Dv9cjoPxnMKNnpU+snBUuW6C5n4GFzA/lI/FyILZw33Or8tCsEiPXWg1
TxZaJqbK+SXDsNPiheNb6mTh6mnnHhKE4Sr5B9uCGmRh9SNDGwHHMOx6mu+n
eqss7CmdGl+4F4Zr12XZ5L6Xhbw/O2v6tp/D/gf6dl+algV/iRU+tTLhuKfW
kd+KKgfdtluOOIpG4LE9/0mcVZWDvcnxzhHSEXh5zaFttzQIn+LoclQi8A6s
5fx9lxz0sy4e2W4YgVMqRVp8DeXghoMhsgiMwIceVaXG2spBA/lxyPk3EdiJ
oVFS5CAH4ltIYZNfInBYSV7za0c5iFrfOWT8MwIXPEj6t9FdDsYfLtIzl0Ri
oUIXx5xAOQg9zkkVUY3E9bnr1Z4lyMHURbvqFRGR+CMlZu/nZDmQ0FrI7IiJ
xFPZi8wl1+TgbeViZmRKJKbcHrqyN0MOwr3ClK7kReLIm7z57rtykP9XIj/q
VSTefc2jYbRWDgoC5W/eFOXgo+J9n0Xr5WCZ77/+ts0c7Hnl2Ny2RjlY06a2
7IccB99I1qOFtMlBNH2FUIs6B89d3pS8vFcOKOFLfN0Pc/Dji3W2slNycFjs
XvDSaA7ON23edGGG+P3Ve/btTODgNOGOjp/zcmCpnhR44BoHhyd8MqoUIIHn
f2mylFwO3p86Rz8qQoKV+huDQjEHIyv+wSoxEljmCvY3v+BgDckV2eSNJBC4
QFdebObgjbc2bPwtRYKAzrvxoj0c3JenthirQoKyA2vODoxycLfrzvJxOgmu
r9G6emySg1+q7PY7oUGCD6zctQWzHFxYvG9AXpMEo7yZUwJLuTjoiVNbjREJ
yp16Tztt5GL3YM9oRVMS6D4UcprfwsW22v76lw+QIPHdsM5pWS7WxxFPrC1I
wDxU0rdRiYvXNNzI/ONAAvVPeFhCk4v5o7NP2J4iwSeRR6M9Olw8aXpP7IUL
CTb3SzmEAhe/a31yIcmbBKayNu/8jLn4VUL1nllfEswUtvC/NOXiarMX83YB
RP1Lhz7yH+TinDcd3rSzxO8PVyzIW3DxtdR3SinhJLCRPWS/7hgXx1h97p/j
kODVvoPV/Se42Pvjz2MvY0hgP5hfvMuOi5m3JkVV40kw/FDeqcqBiy2Y881X
EklwjM/CRt6Ri7W+rwBWKgkY/ictCl24mJa/dq4xnQQDramBTW5cLOsm/kgt
kwSdC/tIrR5cvGyUrPgvlwQ0c3XLaB8unilW7nO8S4L4qmX8e3y5eIitfqO5
gATPbFJCPvlxcfvUbpHrpSSwsw6mvA7g4udPDJsWy4j6NIoDKEFcXBa8n+tU
QYJ5MdtPtsFcnK9tvrvlGQkeul70CT/Dxel/T8wwakiQP7tTJzqEi+OxfUla
HQlE3521CA7l4vAIZw/+lySIsfFtPnyWi/30veRdmkmA1mwvXRvGxU7LTn9u
bSVB4JURqTLCEjKNb+dfk2CjZJyf9jkubt0l1abYTYKnRmPx9wlHmrHrLYmT
5WDqSJhgOBfv8HjxLPI9CQS7bcz2Ex6K2vy4+CMJGv5QNp0lfDPTs6D3Cwnq
FRQ/pRI2K6/JXvmNBOQis7JMwoKdG9J3/CCB83BKQSLhihHXJNYwCaQOfG33
IuwlWB2dMEoCW31tjZ2ESbLrIp79JsHpHdc/DRH1vNF0ChqaJIFWqMCPaMIx
5hXeG2dI0H8g3Go94d2ea5wN5klg8UzWKIaY3/h5pi37Hwm67k2XDxN55N4q
s7zJT4a4is0vdhE+XiF0oHkpGTaa3glgE/kJd9kazCwng4DTsw9XiHx5P0u0
t64igyfmrrxD5O+/fDnDbA0xPkt+5W1ifRTlTiqfEyWD2sDr4Whi/Xq1iuUK
1pPBdKycZxPIxQZex0QEt5BhqSIlrNGf6I8L95czpMlwzIwc5UD0Q0HW4j87
OTLkk05UfmNz8fruvJ/lCoS9k8ZLvLj45ej81+/KZKB4b1+3QPRb6IrDvWJ0
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
/w+a/DZx
       "]]}, 
     {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJwV1Xk8lF8XAHBbilSUVGSZGSFmRkypVO5JFCpRyZIwsmYbshWyTPYICZFI
pFVItnCHZM2SJYrkF1GSpchavc/7z8zn+3me+9xzzzn3XpK120lbHi4uLjLx
8///9CvW/Co2aRr+w331+dc4qLZT5pixzCUkfjNe+xnhf3VVbBmZSLSicT/n
EeG1CcX5gr0JSGPYZvc9wumcGOkVMreQybDQ4xTC1Emb2H/2GWh0YY9ENOGP
a+/8Xe7JQq1hE+GXCcveF1BbXMpB6aSd03aEnQ94ucxJP0RZCSLGBoSfdw1m
zxx6gr50Xi9TI7zodKx/2v4Zml1ftlmccCZ3f+ScdgG6+yzFczGag7Ra4rf9
7ilEjer7WnoIf005Uj3jWITULuWRCwlfs/lj/mvpBQpgcntFEu5cckicki5D
2/gihJUJe9dL7ZgsKEfKuZ9M/0RxkPiNruYfhyqQfq1FZgNha0Xg/W6PUZKd
wrYzhHmWLrfN+HOQqG3m+c2EuwaNJGe0q1FLe2pGTyQH+T5ZXfazpwb1CwQK
HyeslzDC/zPzFdo3mKHNS3irb/Xpacda5KdW4FscwUGcQz5Tk0uvETtF5v0G
wiv7Psv/kG5EpyM7wx6FcVAvp9Jr/GsjMjcWeaZD+NH9lFffC5rQoy1G74ZC
OUjfQ99y7NAbpDNwnSxCOEmgPGnUvg0lfrhSfITNQUU+eh4XN7cj9vm4vpYQ
Dro9tnvLL/929DRDgNuQsGv7evuf2m/R6rzF4/rBHLT+dgPPdE8H6hGLnZUN
5KCltcUPWfs70cf30ZQbVzhoOPiewVRmJ1KiZpz6G8BBxfZX7kw6diHjhV/l
zURezBg71SeWupH0hNhTzcscdLcpw/279HvEWKFoeteTg2ZSXih+uvYetY22
nG27yEGH7ZuHOhbeo+JVOp8WPDhonHfOqLzzAxrv0r+g5c5Bew7oq0eG9yPr
vVNpz1w4qP3ZMo/85Cc0tobUMmBLxIsELNbQB5FptcW6bhsO2ieXqB5uM4jK
x1ze15/noNiZh78uvx1E5j/n+O8xOWhnfLet9eP/UIdEb7fyOQ4KbKLqqVgO
IXLHbOm9Uxz0oKBE7vHNIXT7Y0qx9UkO6kjR5N32Zghtic3WkjIk+tfepGLz
3mG0LuSUaLQ+BzXxXqVzbfiCeFfNJ+zT5SCxA33r2+pG0NrHrbfmD3BQ3rPI
Pmf6GOrz72KPynLQ2Pqxa3rMMVQ/9Nn2DIWD5L31NBQSx9CjXLJ5DYno7/2r
7w4tjCHJ26/D46U4KKHxmp3Z6+9IqPf1D6HNRL8OXZ8+Yv4Die0ejvQV5KCM
1c1sEe0p1OnBfnviA0YaB/zMgyymkBE9XMfrHUb9rkq7Jn2m0LWdOhtvdmC0
uSN65M2jKaTSpV38qgmj+JRjuhHC08gyNEzzYzlG7G2ta//1TaOOp7ITPKkY
2aO3t8Y9fqH/6luNZE9jxJX1u7wv+he6NP39dt4JjFL4tvY3Zf9CP0Z17zOO
YtTQaCf18N0vJPCqmJ+uiZHC6eUsW/UZtFh7RHlYGaOvDvJPBrhnkYew3lNj
QYwuJARUtcf9Ro9/yKs6vKxCrl+2DxXlLaB1Xoa7b6+tQoMW71dVNy6gvUqK
VY6rqtCp3gh6y/ACariilafCU4X2NI9e+iK+iAwKLnbnz1Yi3oIcYbHwReTd
Whrr3F+JUvxJGj6WS0jhoDe1/0Elqt6w5dZe4T9IXuFmVP6BSiRIuir/aQ8X
aFbUNvYaV6BY4WbFu1a84Fybgy75liPrvtOY9w0/mBTN+tioliL311et3eQF
YdZ+8WxZ3QtUwBI6tVl3DQQ/m/vbb/8c3fVzGtthLAw/X7D0peryUUjGsuHM
uAhssop39L37BHF1DkLF5Q1wb39yluHXXCTnaed7WnEjuAy8upT5NwsNzyaf
WV0pBsU9w5fX2KQjvS8XAhLcN8PA52fNIn2JSH84TklKShyKuc9sordGobFX
1kENTyUgPjHt6lrPACQd33shtkgCUn7gYpMNAei0hb7R6ZcSQFq2X/pa6I+q
5vcqDjZIwNDdO8N9P/1QAk2ka25IAhqltugIeV9G+5KxvLz4VrhZq2+cEemD
rl3Y2hYathXCc9W16764I7rIO8lDlpIwabs4rd5yDo3EjITctJWEYKfZcIP7
5ihdcG501EkS9mXpV1kEnUVCfJsLr/lKglpO3mrb3aZo7Lfp4XfxklCpsLx6
S8FplNP/0dWxVhKu1ey32XP/CNr64Au+vl0KRF1b5zzKd+Iu2d+yn5WlYM+9
dtOp93tw9F3+qJ1qUmDSmNYWO7sfL6bKn36vKQVSbz9PJ8dp4t4Yx69kcynY
MT1Vz5ejh29c/CFcHCsF7yJzFm7uMcKCaJbZ/0sKjjXl5M1ss8a+BxVWFS9K
AS7reamabY1HDp3Nu84tDZt3G04Pks7jGp3qRc110lD3YEIqVsIGXz4Zc+Oh
ojRgCbVU2io7/N1222tvpjSMhMU8T6hzxG+uGSmItEnD0dmsrzrOLKx+PaJ1
rFsawg12bgnMYuEH8S89a/ulwfz4yTeuvSx8NYlU7TMmDWss4qcvH3LHUu2/
qZM8MmDH7/nqiJgHfve+5rWRlAys/vL0FCfvIj7yw2yObCQDFjs8Xqc+9sZ3
RNmdgSYyMC7RLne01xvP7Hv8rP+sDOxVuRdUxueDM6OW7JOsZcC41cS63dwH
L8rf7hVgyYDvp4jXXwV88RPrj2VTUTIwf1n6cafxJSzca+lfxZGB37lfN298
5Yft/oWbSNTKABf3pVUPRv1whVz+Tt96GThcLX1iabU/dvTi+qHSKgP6xuRd
Q6f8cc36u+dy+mTgb8WBwvJBf+x5/LPGtd8y0HFPUiNtIgD31thwm1FJEMzf
c6eqLxBPHfwgHqBMgn79r46pvwPxyuoTOzNVSZD5fV9G5qogrIbV7Uf2kKDp
8unt8+QgnPhSuMVDmwQNBp0KTmeC8ImiipRoCxLcS7ZLdywNwnYM1cI8Jglu
mdsF7KwNwlcKc5vf2pBgf38a+0tbEH6Sn/B3kxMJTurqURdHgrDgUwebbB8S
wClp0ckNwbguR3RHZRwJ+M6cCRN2DMYDslG6gzdI0HfxcKXmxWA8e++fNW8y
CT4jrtdnA4KxbNbYTd10EliO5HpoxgfjkDucpe6HJDh6ItRvqCQYayQ710/U
EPHOLfFd4QrBZ8Q+D4rUkUBwghZAFgjBLjeNF3c2kqCYfPJSnkgIvn1Dk+bX
RgJdLzOlAHIIXry++cbKfhLEy0SW/dYMwS8iai1kZknw0mpzgU1gCH6g17w5
fJ4EHi6MaOnwEJwq1NHxY4kE/j22l6tiQ3BQ3KfDL3nIUH5euPtBegg+lrJI
PyNMBlOrYgWV8hCMzLi/VWwgA34cYLK2OgSrbl11j7KJDKUfz29urw/BmzI3
bpqWJIPP9rYw7u4Q/Dl3x79oJTK8qN7YJTkRgrsdd5f9pJOBMRqiTpoJwQ1K
GhdNVckwnhWXJ7AYgp8+Ozoqt5cMVNEV/yJXsLFviV1b9WEyhFy6+09Xgo2d
LrlEKuiRoWm7TLyPDBtb7PM8dP04GZ6tk8mP2sbGh3BwiflpMtgJafYwldl4
bf3tjDkmGc61mcZ1H2Rj7sh7pha2ZIhz/XFK5TAbz+g92vDagQzJTnLyF/XY
+H1rSXiCGxlMckHj4Uk2zn7X4UZkHn5Tl5cHmWycnPJ+e2IQ8ZzbZrWbLRtH
mQ0OLbLJkHqy8umQAxu7DfwwbogiA8d41XSQGxurj6yC8ylk8FshcyTGj41p
D9YtNqaRYVhmsdHwChvLXBAr2pFBhphNUvZ/gth4xQRF4W8OGWKtVuwUDGPj
+WeKn20ekkGpuSLUKYKNx9xVbjc/IUPStvu7iqLYuH1WQ/jWczL8lNebWYpl
41cl2k3/ion8q+3athTHxsWXjl21KyfD4pfC+f8S2Djtj+k8o5oMrL5Nb+yS
2DgWWxWm1pLhodiFCb4UNg4KtnfmbiDD1WrZ+ahbbGy3wmuwtZUMOa1z/Cdu
s7G4dGPP0lsyXH/Q1+6bzsateyTbFLrJsM3tTVfMHTYOOeleZ9RLBsqFKZnY
DDZWc35dGdJHhub1F4kLi4g/dMuLZwNkGBAIbTK4y8Z3Mlye9P9HhkdrzLU2
ZLHxybLqewJfyCAxpYqqCfN3bkxT+0qG4mu6jWb32Lh83DHh/Hcy3KsanvpE
2JW/KjJuggxFZ/RrDbLZmCyzPrhymgxskW7Dp4Tf7bXzHZshA4p5kztLOOpU
udumeaKeKKZrew4ba7istddaIoOVi+eILuGfYdYW7n/JsEpy+LsR4ZzMYqM7
3BTQFD706zhhk3LB4818FFAuXRZUJSzUZaE1v5ICFUrBB3kIc34U7tu2mgLF
kto5VcR8nitXMk6upUBlR7WWPWEF0lnFQBEKHNvkRV8m4u9Xf0Z6IkqBJ7v+
YwUQjjvNu+X9JgpIjl8T/06sX8vVWJhfggKPrHnVtQnPhz9eyZCigD6p62M0
kb8nd//9tSRRYGDFDVFM5Nfq5anf12QpIK7eOz5A5F+0O/dHmTwFsreD13ei
Pg0TS8MjihTg83WqGCbq57/KoH8DnQJFv/+2NxH1Hd433+SykwL2nvzp51LZ
OMXoWE3qbgqM3O11FyT64ZhbZlm9OgVKdNr0s5PZuChL5wHpIAWSfNebZySy
sUPF7Qx9LQpkrvv4kOsGG299N5Xkd4QCf+Ub1E/Es/FVgVuh3ccpoG0mxyyK
YeM9lB/+PIYUGCOpiTZHs/H4/oOeyqcpcLYwQ7stko1Ps75ZR5pRQJbx2SIz
lI1le/bCAXsiH1tvr7b3Z+PeqZjdFy5Q4NCtHsPvl9j4muBnerILBbYox8Sc
8yH294EoyemLFJjU2EMS8mDj2uwPi9lBFOj4wnXuhh1xvlTRf75lU8DAxOFn
xHk2pvaGfPsbRgEHdHDW2YqNE1cr9ZrEUGA4/Uoglxkbn/fweyGUSoFOM4Nj
xseI/lYdeLE9nQLej3eTunTYWPAnFB/OpEA7n2YYaLNxvjt/SdB9ChxP7tj7
9QAbL7PiS2cKKTBnMfXOk87GSW65L/ubKXD+zD7360Js7KgsWLHQSoHlZ6w/
q1ex8f5J5wqxDuL7o6R/vrxsPOSqWmnQS4GC5ZTbssR5ucO1sqp2mAIP/R93
vhoJwY3OndVP/lBAar7lHb2SuB+oajWNXLKg8cQ6sKwkBLPGU2pGeGXB3bL2
6q7CECzmbPFKRlAW+KwXP3HnhmBrp2+1iWKyYBHQ4vrjeghedvxX768sC9Eb
eHK3WoZgZXul1mNMWSANdl05+Iu47xyl3Z7ayMLjo8buPt+D8TXnDcJrHWSh
o0DA4M5QMP7mvmTY5ioLqiLZW3FnML7n39xt6C8Lf2N0/+g/D8abEpw+nkmW
BZkjHJVSt2D8r+LxuFWLLPgt3V/NGAjCbeupq732boNq7+O25UqBxH51+Za2
fxs8PGi4V31TIM6rz6uvQdvgm9zvT7k8gTjWX+Wq8OFtQN0bt/X4+yv42Ija
n8cnt8F9Q7GkmtAruKns4ORnp21wOvNa4sW+APzayrjT4M42ECP/Fq287I9f
5oWkUXnlQKDC69qZ65ewH7eiwZuPcpDdmNzDKfbAgv2XdVyL5IHnatylgxft
8Zf7pMQMfwVwbHVyWHPZCCcqbOErM9oO+aydPBlIGZlbyOUOmWyH/QK238R5
VZBsIkNvrfl2GIj1uplpq4qK/h2PO2+9HcS+1e82VtiFut6FbF3rth1qtVee
Nc1WRxtCx3eej9gOBybadi6Ua6KE/7DtmpfbwXLjRbGB/cdRXKpdPVNGEcax
wtg5bxPk4x1y0Z+iCNTGb/+1YhNkcfKOdLKcItTUuczyCZgiquA7nzdURVA8
5P4Jp5qixkvaCrv3KsKk/LM+55dmiMdUNlLopCKUF1CVQ6fNkdemz3olbEU4
/Fjo8JdkK2T+68/vt2GKIH9NY7611ApptW25Nx6pCD0iJbtuvbdC68MNl0hx
iqCVVybeJs5Eeb85j6/dJua707UGpzHR1+4MIesXipAeHSeQnWyNzBLPtQqN
KsLw+rFQqo8N2vpcUMJpTBGuDDi9DkmyQZ/eltg3/lAEwdDWXYUvbJDNuvXc
YTOK4PGrwPv2LxvkGlXH+MetBB3jf2XSXWxRSJDyremtSvC3qv2rlpkdeujM
bfPupBIIaJc1f9nogJyj8/J3nlGCbTPJP47tcED0R2f/JJgqgajC63/Reg6o
cPRF0gkrJeAzNuyNv+KAKqwvNDa4KIEgyTv15bADajfppL+MUILuoOap4IeO
aF4rZyGjSgmstYaXi0WdkP/LDHZttRLcr/9yOVvBCXGppq75VqsE/oHaya77
ndBK6esk1WYlGJytzE4574TEFnx1a3uUwGPDk/FD+U6I8fTYra9TSrDC55Dd
b01nVEw5QlkzowQB9lf1np52RuqpB5+qzCnBVHN0Ndg5I81wterLf5QgdUjV
8U+EMzJgynwTEqSCaaJ5XssbZ+S6cWaPCoUKvu3aE03HXdDP6IkaIzkq/Jwg
nz96zgV58Xw7dnk7FT4UXAh44OyC/Cc/Wr1SpkLk4NSj+SgXFN1YH2G0nwrB
phq06dcu6EFAWu8lIyrsFI3Q1d7liqgzN63vmFAhs6b5TLymK8q/EDdec5YK
e+8E7i0/4YpKjEO5hKypkOcnfz3L0RXVqbgp3HGlgvyLPdMtaa5o6Iumb004
FRLeNafeWHBFmhmtWYrRVIhYU3j19go3lGli1pIQS4WO7w5e/iJuyKLZnXz+
JhWC7OMiqhXc0If8zDe896iwi4frKNPIDe29QJ1zuk8Fz+JURLFyQymUUlLX
QyL+tw6XKi64oTNJbd7Z+VRgaicPeAa6oQ6/vzLaVVTw85S0/XvfDansijr6
tJoKpRl0X798NxQ3sdF742siP2bkze1lbkifSWv+0kwF4x+wjeuNG2o6bO4V
9p4K7ftVo/wn3FCNSHlj/QwVknUL385tZCFSs/aM8jwVwhnT2722sFDQ1bdS
KUtUiJ38mD6wlYU05r5edOChgeDJS1NeFBYq798kJSBMg6TmqLFiZRbaknRP
x30DDW7tjW+8qcpCvieUL74XowG/oves1S4WUqs53PBQkgY/XEuPV6izUGGu
l4eeEjE+rbc0XIuFRJjc6YV0GvCtEStpPMxCLPGYenFVGtQ4Zu6e12Ehekz2
1u97aBB98Xqf+HEWijm848ip/TToWr1pzboTLDT+76X7S0SDFl2Vj5MGLPTI
o7Mu+jAN2NabvH1Os5AA1XL6ly4N1B9FHJc6w0IOX8YkzI/TYI9Rz2CBMQvJ
mfC4U0/T4MBGAdMMMxYKFYlNSzQmfGr98YWzLDTctKVu2YwGb7drS8A5Fso6
oCLRwqTBwhDZNtGShWr0BdlLNjSYn9N5GmfFQp8th8a2O9Dg2Szdwp/JQjzu
FSdNnGhQu2x4xdiahSghN8vDXGnwauU+UfJ5FtK64Up+4U6Dtv+uyPUTtsk+
EjXkSQPtrVUvQ21Y6OoLmZ8ivjSw4sv5IGXLQtl1C6bgR4PelO+RuYRrezqq
Xa/QwCvQqF3ajoj36+Pt6cE0yFgsKAonzLd4Nb75Kg0mBvoOfCIsu9piYSGc
BqURZR5y9sT8W3czFaJpEPZ2v9k5wjY04cYzsTRIX3F+iU34qsa3HaHxNPB/
v/NcKuGcEzUpzxNpoGZZF5ZJuM4qjetzMg3+LKkFJhEecfd0EE6jQfi5guP+
hPnZx9s17tDA2s1pwZCwXKLcHpe7NGAZ3I/cRPhwzr+MtGwaKOjkrWgh4rMr
7l3ZlEuDvy8/eHoQDqsvcJt/RIPnsrEDKwnf743qkcujQRqvml4Msf66b+eR
UQEN5nr0MA/hkcX9uewiGiiKGmg7EPnjFxJbV1hCPF/fNVRJ5FdectJ7sJyo
pxAri5ewDr1hYG0VDZaFGiL2EvVxQHcPH6gm8jsSdceSqN8D5imx1HoaHN2q
6eNP1LvBg3qloYkGFjmNuhctWOgre8XI7xZiPcc/XzAj+kPhfsmLU11Evb4w
SxeIftIpiZMM6aGBaHz+TIEp8f0Gx9D8DzTwqbTMMDNhoYdjEkZr/iP6G5Os
AoxYqGlppmLfMA2Kg93C5k6x0JhQq+yFURoEh9/YZ32ShRSVg2bqftAghFf7
ogDR/48uDt8IWqTBLvkurswjxPirlUt5f2hQEr0+LEObGH8z6fxHLjo49y/2
Xz/EQkqlOgz1lXTIT50iHUIs9GT5ScevDXSgOjxYmCH265s1YerkTXTwSlD4
48cg9peUZZaBOB12Pr2zaWYHC1EPing8laEDvtVYVKLEQk9DvUTsaXRYaf8i
MkaGeH//uZDQHXQ48DZg61NJ4v0ZrV/3GHTIipHNqBIn4rUW7R7cSwe5Bp+k
ElEiv+h5itlhOjxQm0M8q4j+XpiS1rekw8A6cUu+Xjc0nN8b52xNh+To/ueR
7W6I4sDhjralA3tKkXemwQ1lvbs+VO9EB4UThh98iPMv4zk996AvHXj83Z01
brmhVBdn+q54OrjtdrLsOUWcx7KnM04l0kGiK2rlCz03tKV/n7BHMh1CXj3r
8j1InMd6q3/mpdOhSfOJ4nO6G7op/+iFwiM68P9ZHpxZSZy3/43u3/qKDpRL
m4MrX7iicKPzR3ln6WAaQMuc+OuCsk70m9vO08Gf13Ld02kXVKFr5Fq/RKy3
0ZrPYJi43w4ciY/mUQaJ93++HWp0QeZySj0bhJVh9GZ9zEi8C1Kd+2ktq6QM
45ubKuhSLmggJeSyNlMZ1g98HY2kOKOFhKXoXBtlqKMuJ67Z4IxEYzzTBRyU
oVRwZuclHmekG2zHaXFVhjju0qpV/zmhIkc9/jP+yrAheK+oULoTilJfn2CX
rAzV2xVqKoSd0K7+uw/DW5Rhs92aXXGjjkiY7jD/rF0ZaJJfkm90O6LxQPqR
3k5l0LspRw195YiyKS+HFT4ow7tTczqMDEck6tQl3TSiDKIdibOVRo5o0Z/3
KD/XDth3q3RfFnZA71erVets2QEL7aKJBuH2KGV72tOWozsg+110edZ3GxTI
iUk5WrYDXBoqNm+1P4eOSxjlNMmqgHmQXNCwpwE66Fp/ViRSBUxujkpwrVBF
GVutZd/MqsBcEKfPf48GVmco0a3nCJu7inN91sBdujO75+dVIDlENFEhGuFV
PmFHZZdVwJY1n85wBcx6+8jDn0cVNNNaGg9XHsQQ9otDXacK3mct+yNOauHP
k1fPxSiowuUtmwveGeti2Ve5SfpnVWH+z0/NHCtD3Eqdz+43V4UZ8fMmHLYh
9k3SeX7BQhUq7Bt+V903xM2O39rCmKpglRnjbTduiD2ElQSwvSrEPBskmXuf
xPhcnp+ypyrY9XbEt109hc3mi6yEY1Qh1441rBNthPmsV7jdiVWFX36BU08e
GeG8ZqMAapwqLJVO8f1sNMLcGb9v6dxQhdnc6/+kVp3BD7T3dAbdUoUtapQT
POwzeDbhpfZ0jiokqx+w+uRhjONoNYodVapgaSfuFKJuih/sOSsQwiG+p+x3
a6+JKcaHZkZValRB19b4T6OXKZ4wlcuJf60KG02apL3zTfHRsChpwzeqYGJY
O71AMcP8n06Ktr9XhZOr6J53ec9iv7ihPy0zqvBVta6dP8ccJ6T59wf8VoVt
fkdM6yrN8aP7G1/S5lXhTbi25rl35ri34ohvzJIqKPpprhRZeQ6rfXv88xgP
A65soZKv253DUwc9R5vXMaDj76RZv6QFtvvF97ZRkQGbxWlHLrtYYotHWq3m
VAaMST+8XRtoic8wrzZP0hjwzlTn9li8JT7cxlu3UYUBsjeawxpfWGK5xzwv
mbsZsHzDKapjyRJ/sebKWTjEAMuDfsNhYIX7t0DWNW0GNIpV2kToWOGu9sAM
6SMMqLsfk+ZjYIVrNf7d0tZjwPXNcfLSVlY4W/xvbLwBA9wza5MTrlhhm44l
3+3nGHC2n7NCsNQKm0fu866wYEDDxM6LI1VW+DT4XTxhxQBX+ovI/NdWWCtv
0cXrPAPetL7OX9NphWWjFqyrHRmgkaox9H3cCg8dnDtm6s2AohX1U7slmfjD
vJreuA8DFBxXTE+QmbjjmfeRwEsMyI9kp99QYOIayd8Hc/wZMPX62N8cBhNn
LcyoTYcwwIeff35Ch4mtC37KRF5nQHELV+N6FhM7h5xa1otngDpr9aySFxN7
nSrqEbrBgPH03efpl5k4YtYrNi6JAR5JX9ZNspk4b+/CUnI6Aw78SZ61TGLi
UkGzHtMMBlh85gp4lcrE1X3lhRJ3GSDKN2kunMHEXQH+jhnZDLjLsmTY5TLx
QvW/d/cfM0DKji+Np4SJeW5YFTo8ZYC8hOXhgnImFrKpjlF8xgDvSWynW8XE
UvxsrbxCBohxMsTUXjOxQs+QNKuIAYV3rfKiGphY5YHWkkoxA3ROPW5uaGZi
LT3+whdlDPj83uEBdwcT60vYx/i8ZEBqWD9ruYuJjcfrHfZWMkAxpa99sIeJ
L8RGSldyGKCvEXLB7iMTx3UIxdTWM6BizetY21EmTr3n4hDWyAADo4PpT78x
8T3P1kM6zQzgiSh1+vSdiYvF4habWxmguSXagmuKiTmjU90x7QwQEhGPnZxm
4sZSw4ITHQzYJLg6seEXE/ebbXDo7GYAf4mP+p45Jh5R8jx0s4cBWRKfRlrn
mXhyuUvK+D0Dul8HBp9YZOL5ll2Lm/sYUHI3Qrh8ichXRlL3h34GFBih1LV/
mHg1ay7/9gADyhhc247/ZWLRgybXLAYZEKaoUeL1j8jf+jJ7mc8MwMUhxhFc
1lh+aMuhz0NEP3a6CIVyW+MdRZelsr8w4Nv4i34nHmusHtq3YDvKgHWt8m37
ea3xoTP7u+W/EfEl3h+bI3xMPj3/2xgDtDKV1NL5rPGZ+T/Rj8cZ4MWuK6Wu
sMaWjRb2LhMMEJ+5fek+YYdUrKk8xYCNFWOBgvzW2MNJRmp6mgH3HnJ3mhD2
3x+8UPiLAa8CdS/HEw5d87nLc5YB4SMooIhw7IBmvtocA+Cs71A14ZRn96Ln
5xmQK3O7qIxwVhCfffkiA/7SL8ynEX5saKvpv8wAQdmSYgfCReQ6SY2/DBBg
uMxJE676Jbfw7x8Droleq6km4vsfxSQoFA==
       "]]}}, InsetBox[
     TemplateBox[{
      "\"full\"","\"1. Order\"","\"2. Order\"","\"3. Order\"","\"4. Order\"",
       "\"5. Order\"","\"6. Order\"","\"7. Order\""},
      "LineLegend",
      DisplayFunction->(StyleBox[
        StyleBox[
         PaneBox[
          TagBox[
           GridBox[{{
              TagBox[
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Thickness[Large], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Thickness[Large], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> 1, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> 1, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {}}}, 
                   AspectRatio -> Full, ImageSize -> {20, 10}, 
                   PlotRangePadding -> None, ImagePadding -> 1, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {}}}, 
                   AspectRatio -> Full, ImageSize -> {20, 10}, 
                   PlotRangePadding -> None, ImagePadding -> 1, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> 1, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}],
                "Grid"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
           "Grid"], Alignment -> Left, AppearanceElements -> None, 
          ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"],
          LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
        Background -> Automatic, StripOnInput -> False]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   RowBox[{"GrayLevel", "[", "0", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{"RGBColor", "[", 
                   RowBox[{"1", ",", "0", ",", "0"}], "]"}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{"RGBColor", "[", 
                   RowBox[{"0", ",", 
                    FractionBox["2", "3"], ",", "0"}], "]"}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["2", "3"], ",", 
                    FractionBox["2", "3"], ",", "0"}], "]"}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{"RGBColor", "[", 
                   RowBox[{"0", ",", "0", ",", "1"}], "]"}], "]"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8}], "}"}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.99, 0.99}], ImageScaled[{1, 1}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->True,
   AxesLabel->{
     FormBox["\"r/L\"", TraditionalForm], 
     FormBox[
     "\"\\!\\(\\*SubscriptBox[\\(T\\), \\(00\\)]\\)\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   ImageSize->425.1968503937008,
   Method->{},
   PlotRange->{{0, 20}, {-0.01369128336616424, 0.16396167168052345`}},
   PlotRangeClipping->True,
   PlotRangePadding->None],
  InterpretTemplate[Legended[
    Graphics[{{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Thickness[Large], 
        GrayLevel[0], 
        Line[CompressedData["
1:eJwVl3c8198Xx41IlJ2VvbfPKIre9x4NmyKEpKyMCu2USgjZISSVmWyJsipE
2dkjlMxI2Zv8vr9/zn2cx+ve57mvx72Px71HzM7dxJGOhoYm57/w/9Gd9fp5
CYYuXCvXSSrYqMaHX4r9vHi2CxtRZhXuP6zGivxsgX+quzA9azTDYbZq/O/f
ROdUaDf+ZkKvGy7zCSfVv7j0W6QXb8pNvMl8UIkX4orkf4T04t1yO16+FarE
Wk4Nw22rvfiF9MPzp0oq8BT9sllp+zfsdb/oy53Fjxi37WTLhT6sdgYuWMBH
HJkoXpuU04dfuwtbCz/6gPcTRuoPA/qxLf/vR1aH3+NgFod5r4V+LPn7oZhJ
ajn+3uuZ7WE7gI3ICWuqzOXY73qasIXGd2zFSGs9O1yKW/I26GSmf2CU6ntu
vK4Yc+IdNruUB/G1Y9Hl0wbFWEM6Wj3AYRBvUDXkvdrf4bCFjPlbrYN4UuV8
d8zkW7z3UaejXdZPzMJJtDgRRdjm5tlD/T9/Ytct58u8vYU44MxvYXO+ISys
OFVnc6MQf1Oi7dF9MIRv3CIHnyx7g+/VK+qRzwxjEynSyRc2BfjV63fSWY+H
8chxAcOCnQW4Le4QvVTjML5dwTpYVv4aSzpZlPMdGMFTlxtZL4u/xvX0fso0
XKPYs1Mir44uHy9MsrLc0h3F55aXv3TdycNCbU/G5++N4vRvSS6Sq7nYIzEv
cXxqFGueLrC8v5KDeYg+zq+fx/DM/fCJcd5sDJLnpnU2x/BoHN4j+DILu7DM
NlRRx/FB3vldb1WzcHkv44O3ieP4YtLJ1i6bTGx3nbL87NYv3JvrGsBa9wrn
5j3su6A8iSknaLDYahqe5JwM0bP9L6e82b83Ow3LXNdDstGTuKC/ciPlbBpO
PMiSNLw6ibuNf5d7NqXiyLqQc1Y1v7HZTDCz/NsU3Kz4h3f/ym9cBxw3Da+k
YJYIw7rdClPYwnhaIYqcgv3MWRVbI6YwyohaP/86GV8fDp/Vtv6Dz7AoMGW9
T8IFWjPJUuF/cLutuoiabxKezjhuSl/1B7sZLP17q5uEnT043n2Q+YsVlaw/
3ulNxFabkV775v/i6RSmg4n0ifgFS4Mvx9EZnCm/trd+IwEj4ra1t80MdlAn
PeBLTsD9bgr7pm/MYNHjfd8/6yRgvrbgscbMGeyplPVBNv4pfhRnoBvIPosL
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
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        RGBColor[1, 0, 0], 
        Line[CompressedData["
1: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
RHYO6xN5eDYlP7+8TOi9+K96N5GX/wGWQMcG
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        RGBColor[0, 
         Rational[2, 3], 0], 
        Line[CompressedData["
1:eJwVlnk8VO8Xx1GpJLQv9hk7M5YpKctzIruEEMLYDSahREyZkShbspdEJSml
ksj6IJE1FZEkIUqKJFny9bu/f+59vV/n3rN8zjnPvZJux608ebi4uMSJy//v
2WfdeFU9snQOfDTeK26KUcNbCbMjEqeRy1kLpgjBy4015yQkLqJEGcM1mwkW
SC59xNebjKZjTPl5Cc6uTRBfJXEF/RN2D502wUhp0iNx2TsHbU5JM3tP8EeB
6//967mJHrZOXKggWCp/rfrC4m0U8OEkJZ1gpnbwsb/id9H91Vr7mAQ/6RrM
m9G7j3ybrB5qEbzgZ9b/y/sh0njRGr+a4Fzu/ot/9R8jnY+Vb9qMMTrQfll6
tqcYnRTex4kn+GumYd2MTwkyr6VnGhAc77Hk+HvxKdqsbbR90Qijt4uM1Cnx
csQM67M6TPCpJjGVyccVKHpr4/q/hhjtTOlq/aFXhYLQnGoawW4KsOK7N0Zc
G9pKaw0w4lkMezXDqkUiEnXbzAnuGrQRndGvQ70Xbw1162MUen9d+XRPPRqw
nyztOoCRSfIo73Tuc9TwsLrWlGCR0DrrXz4NKA70dlfrYVSrFzI1ufgCpa+z
pV/SxWj1hyHZH+LNiKdUt2YKYdRbWx088bUZ+cy7S2kSfC8/8/n3xy2o6/De
vxE6GJkHmdPH9dqQhancyJwWRulrK9LHvF+hkit3h+/sxagkxCToxPZOVJv5
s+yFBkbXxvfs+M3qREEhAYsf92Dk37nRe1r/NWp4nPl6aTdGG6+95PnV8wax
9802LKhitChQejdA6y0y2JgoOqGC0QjnlsVU7lt0UCnka48yRqXeZ69P+nQh
KJl6d52CkQNt176fi91I4+4waVwOoxstOYHfxd+j56uWBk+JYTST+VThU/x7
pNo4K/JLBCMD79bhN/PvkRpJ+4OHMEYTK/7aVLztQ/f/xn/W2I6Rhrb5vosx
/ejP4oR8ygaMOh/+45Gd/ISsQwTtN6wg8kVrnddTB9Hm0+NbpLgx0pRJ3Rfj
MYjyBQddVZZrUOLM3d9hrweRumzpvd2LNWjX5W5Pt8LPaNri147f0zUookXJ
RJU+TOjtYbjvcw0qeFwmU5g2jLp/KDNGB2rQm0zdFdJtw+gSs0c2vr8GSXnb
VW3fO4J8xTZeaOipQS0roqhcm74gLv+937+216Ct2h82vmocRTvX/9TmLq9B
RQ8vfmBSx9HWY5blobE1aHzjeLyJ6zg6dtN1c1JMDZI9ZaIjlzqO9Jou8dyM
qkG5WutuDM+PI13uuWtPz9ag5OZ4L4cX35H9lPn3rKAadGr40i9Dxx8o9V/L
sqd9DcpZ13pug/4Ukmt8uHKeVIN0tMMd2c5TyIP9WdVTvAb1+yvungyZQpmt
LcJtwjVo+5u40bZ7U2gz+Zxi7OYadDnTzPiC0C9kqrrHvWlVDTon3SGw/OEX
WtjYEGE4Vo280esrE0G/kcn2QA2f/GrEdXO24kPcbzQY9I+if7MaZa4U6W/J
+420WoIOiFyvRi+bvcTuvvuNPBmsvsq0aiRn/e+m574Z9GzbRE9tVDX6ypC9
P8D9B/lWuZ8fdq1GvslnajqTZpHXf6MBGdurkf8X+eGSonlUPJ7MEA2tQoPO
79fUNc+juRvLX44GVaHDvReo7SPz6Opiv3IaswpptI6d/rJzAe1UotHmXKrQ
ise3hbbGLKCu9BZgG1ehTJakTgh9EeF3t+qv7qhCdZt2XNkrtIQOLFrK8ZdW
Ij7JKNlPGlyQ+mLR98xgBUoUalW44bICJMbkc4dI5cjtgzVe0cYLW9T7l/1W
laHAF1Fux2X5QG6VsUZYQwl6HMB/eLvxejisqB/zKbEY3Qj3G1c5IgQhekp7
ZHY+QpE5/yxnJjaA5vqljpGsQsT1dhCqwjZBqZCc5pTyHSRz0ivUWmELHLGr
bd2YehON/MmwXVe9FWzX8R0f3ZCNTL74nkkO3A5uftSEEyvTkPlIkqKY2E5Q
yH3Wt2U8Do0/d2O/fCAMqCzeytqXjcQv9/omlghDXfKUrpwWG1k7m9tYVwpD
IW+hp4gAG9XM7VUYfCkMJ1+V3W/xiEDJlA1df4eFwV1Aun9m7gzSzMCysjtF
oLNgYLUfJRzF+4q8Oh8tAjK2Pwq2NQUj6oZ3onp0UQg2m3gTccYbjSaMRqZ5
ikKQYNf+S5NeKJvv79iYnyiIht812+DmhfhXbi+ODxUFjVUXNI8ZeaLxWXuD
d5dFASksZkTtdEe3+z/6+zSIgjlvRodbgRMSKfiCL8mLwdc9YYdGgk1Ql9Ss
1JCyGAhddvH0DTFCcTd4Y3epi0GSXtB8eZgBWrgqa/1eVwwsrK/oP43WRb0J
Pl9JjoQdaTXQGLtRyokfQqWJYlC7Z+765DES5kN/XPt/i8Hmr44J56YtcOh+
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
/w2PsaM4WKk38tt/0WT479pyfFUkB6euU+y1SyCDhrzqL25iH9yDwp/yXyUD
/2Wx3MZTxL6oDTyVzyZDrvJPqasnOZhvGkoNcskwxPN8pXMQBz8K5C1j5xPz
WaK1tuwYB/8LuPxsppgMMmbaSQ+J/X2lMvNsQykZIh/8OrLalYNvTtmWU8vJ
8EfXb+iQMwcbB4hUMDAZ2hMrTjyx4+D043cq+1vJULY9e+aFGQf7KPNVzXeQ
IcxDB9025mCtSWbV1jdkcD45WxJswMHD/mrVFr1kKD+yaDOOiPnyr65pGCH6
yTPfT1bj4Gbm27r7S2Q4se3z6eFNHHxNSb2+mUsKLN5C1gdBDg6YyKwfXSEF
KqId5S/WcfBWpvNzCT4piHZXJQcQ56Wb37eG1K1SUI/ubxefZuN/PstNLGUp
WGPvL/6rjY2VvRU7zFylYNXrGpf6UDYe8BE//sBDCvTIUh0ZQWwcz9wkJMCQ
AtK2lmJnJht/C1y0fOUvBWb1b6Xr6Gx8i9XabcmSAs2dI4l9+my8Ldnvo22G
FPwZLzP3F2Tj5arCCZd2KQguC9knqRqBi3BOQl2nFKyo7mj3k4zAjvUpVFKX
FAgMKiZlb4jA5U3hAcN9RLzMYfmyX2fxiTemM55fpcBOwIHR+OgsHhv7vui7
Qhp+B6U+D1I4i19tVFoXvFcarm8t4pniP0OcT8e+ZWlJg+2Lpq25iyxc1FTU
VI+kIaYUaeqMs3AiSzVKyEAaWB6XSPpNLGw2qr5UaCUNmmPdXmw2C7eU758c
8pMGgZ0FWQ2T4fiFy5G3FtelYdejpfT99WG4sigyS2mFDEjfePDkh1YoDudW
sGj7KAMajSbtoBmE+frDjPxLZKEr6VFqAhcDf8mXTM1hyUHXGvnKLwL2OFVu
x8pyG3moDVpXineKYUdnmTvDdvKQWzbwtZhrB5ZKpZkIOMoD25K3QvvbJlyy
fDDJ3U0eXG58kjsUtQJ3vYsUETguD4OFfJZFvSvRpvMTu9wvyEOoRgr3MFke
JX/Gnusr5YFrergtew6hpKteTa4SCiCcvlBgKmGJQk5FnmCRFeD5vYXBxx6W
yNnquniGjAJ4l5ww+FJgiZT43oW0KSmA7ucm/icqVqj5tL7cnr0KENKIn41q
H0Y89lIX+a0UQG+l/ackcxsUvG3IpOycAtjYBZAEjeyR4++l2dfRCmDr5yny
4bw9OvBqx62JiwrwoeS1WcBze7QxxnJRMkkBnlwv/vxH2wEVzdYWxl9TgKnY
6X5flaPoa3cOv9tTBTDqxl9G+JyQQ6pTB/+YAiSFnux9auKCRJ7wCfuNK8DM
MZtYH4YL+vS6zLv5hwLIzp5VXjzvgjwEN3JHzyjAbQdr8We1Lsg/tpG2zK0I
grf8lTN2uaJItvKVXyKKwJ0vyPi0xQ3dZXJ7vLNShAdqwyKmNe6IGVf0aJet
IiydOtSZ3+OOqPeOLiXbK8Kcqp7Epyl3VDz2NP2QiyLwrdcK/kLyQFVuvs0v
jylCzCab7UbnPVCn3Vtq5QVFSHZhfXPW80RzB27P59QoQqiJzqs7eV6IVZlz
rqFOEQIqWVTpZ16IS+3q+m8NRD7TX0XOtXqh1eKXJNVaFcHH+si1wV9eaOt8
qHFDjyL0kTZ9ktT2RrQHZle+TinCjdyEa5Xt3qiUbEheP6MI32mBg/DJG+27
uv+B6l9FsF4VmJo/5Y10Y9TrwpYUYVdOp9GmTQxk4SrxjZ9PCTozvdoDbRnI
f8uMhipZCcJa86d1exhoOu5nvY2MEmj+Cl/oGGWgYJ5vZmHySnCkc+VxzVkG
Yk1+dHmurAQjM+tvPN3sg+Kamy7YaClB6JvPusoWPqjgTFbvaRslKHlPy9Oo
80HDX3RD62OUQGoqNqw4zhfp5nTcVIhTghPHtL8ZZvqiXDuH9uREJRCcn0l+
lueLnFsDSe5pSqB3s6lQsdoX9T3KbVtxSwn2CA9fsJ/wRW/C/5PQr1GCH9lG
G97r+SHV3bGmD+qU4Mu5+++lzP1Q0s8tp7a8UIKitv+0zez8kLkrpfVLqxIk
HTn4l8L0Qy0GjsHR75Xg2dnZJe1kP1S/oaK5aUYJUgxlD2f0+CHJVv0Z5Tkl
yFypzMn95IfYUa/FMheV4LNxRvv5MT+k8/frCQYPBQZ5royOzPqhiv5tYmuF
KODQ00ye3cREO9JvGQVuosDlHU7mn3cyUegh5RPvt1KArF44UiDJROr1Bi/v
ilJAtJd1pp3KRMV3goNMFCnw2vTb+WOGTLTBlTu7mEqByUpfmvZBJgrYmdC0
U40Cu617b3yzYiJqQp7Idw3CPmn/s9eJie4FvW2MM6DAN9nW6I1BTLRWif7r
tzEFdh4sDG8+xUSML+PCjgcpcEnsUKJTOBPJ2PEEKllTYE7sgrZoFBPd1FYV
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
P+wSxQ==
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        RGBColor[
         Rational[2, 3], 
         Rational[2, 3], 0], 
        Line[CompressedData["
1:eJwV13k8VN8bB3BUKqlIqWSdmawzY5k2W+fJnnZLi6wzsm+DLJEwo0Jkq0SS
EJWlKGXJGRIhS5bSN21UsiTZspXf/f0z83q/7uvMfc7nPOfcuXJMb7NTAnx8
fArEx/+/M8KYguqO6bvV/dSf6f/iobpO2f3HZIPRWI0iXY/wYn01R1Y2Gql5
p0XqEl6TVPZAqCcJ7StdXbGdcAYvTmaZ7HVkdi+qS5kw9Zdj/KJzJhouFuyQ
JPxhzc1/C29vIwGbqyWrCFPurNwxN5+LHsVqB/wZ5SEP3dOef2Tuoknzf5Kf
CZd2fc6Z1C9AeNWPOy8Iz7nv7/3tXIwGTJaszyd8i783+o/hQ5T36aTjBcIG
LYlbp9+WoPtf/l1jEf6Ralwz6foIPbg1V6RD+JLjX+uJ+ccovsD27jrCnfMu
KWMy5ShDLsfk8U8eCmiQVvv1sAJp9t/7GUFYIrmr+ad+FXLJcgzYR5ipDEuG
nTGK9NvL6B7hIYH5M22ToTwU3pHtfIVw12dLqUnDGnS3bm24GeGgglXl429r
UeidizbPh3nINOm74Pit56izo5UUSFgyqMbit2sd0hG+/kqBME8/cOzX/As0
3ajZem6Ih5a/71P4KdOIiiZ944QGeaiH9+z0yI9GlH7i2pncHzx0707q8+GH
TcjwhP0BXcIHfQ/aDem/Qtl8F3NYAzx0dWXF1QHnNvRWV0g69hsPPQo09fXb
1I4MNiroriZ8Y2jn5onQdpTmc1z/0lce8mpf5zxu+Bq92/xyWUQ/D6278VLg
99sOpP3slYvhFx6aX1N210enEyWwAuqLPvPQ14jsw2O3OtHo1QnhDYTLnMNu
/nLtQk9u2ln2fOQhK8Y2rdH5brROeOl7zV4eymrKZA/LvEMvv5RNubzhocnU
x8qfLr1Dm2zdhRK6ecjIubm/Y/YdGpoOjizt4qGRJX8sKzr/Q057DW/+6uCh
XboHtaIv9CLF1CMJOm081F68IKDw6xPSUS2pUWog6kUrbVfTP6P9qgAb63lI
Wz5F64LjZ9Q67qbE/4KH4ifvTpx5/Rlt2nZbt6mWh7Yldp9i3v+CBI0NQ9Wr
eehcE9VU3a4fDRzVb7F4xEP5D5/I37/Sj8abXHasLOWhjlS9JVtf9aO/whJi
FQ+J/nU+XrVJ8yuitV1REi3moaYlXDqf2DdUHXihN+UuD4nrvl/XVv8duUsx
R8YzeKioOPq9B30IZTzRTlvD5aGhdUOXTB2GkPXRV3t9InlIIcB0t2LKEFJW
UJhqDSf6W2dVVv/sEPJ6+3UP5ywPJTVecrJ6MYyc053qGwKIfu2//NvY+ie6
Qb8vXuPCQ5mrmjmihmNon6XNSLApD+3WDbEOtx1D1coCAaEmPNTrpbL9V+AY
UmtbJhZqxEObOmK/v7o3hqZN3WN89XgoMXX/3osiv5FMfFWUjhYPcba2rll8
/xtF/il2M1TiIWf0+vqI7wT6HI1XqS/jIb7b0xXvYyfQDtOnZ/sFeCh1qWRv
U84EUhky0E7m46GXjU7Sd99MoIZUF83uPxgpWizcPqU1iTovVVHGv2L0w0Wh
4CP/FGq2u6yqUo2RW9LZ6vaEadQue8MzzwMjr29K/Y+KZlHGxLtSzYpq9Nn2
3Yqaxll0SnjJzc7SamTec5He8nUWTVleqXMurEa7mgeCv0nMofVJNzrCblWj
JQ9zRcQvzKHLAkcMXM5Xo9RQud2BdvPItVBlo8qRalQjtvm6pshfNLRRAUf1
PUNCclyFT7v44InHsVcwVYXiRZqVs+yXgHXxmXqOYCVivrfAS14JwrjYQO/S
oqeI/YLL9FYQAr/ogK3rVMvQQx9h8017V8PB1015D5+VoqwQ9yG1YyKwAX0Q
/bL8IYrMXDgyOSIKw7aKUSl8hYiv8zNUnRGDa+Yul25vzUfy/k5BFsob4LNo
mdxBiWz0dera0VXPxOHciL3VM1YGMv3mdjaJvQn0ns9/dcpLQQe/JqhIS0tA
0D/K9MiGGPRK5WuXNUUCrKr1RFZ8iUb7/HaGpStLQFny0jQoiEYmAh/bN+2U
APWDlVuE9KORnqxKgNhhCfgb4V+8yL6Itlu/4K2IlABWcsitkO7zSLJr1nLi
mwRkgEvJQAkHDT1nhr8s3ALMvG8ZTYkhSCaxxy3+0RaQrm9RDFQNQRa2By0t
KrfAlkJ/L4+WM6h6RlP588stIJDy4Ii60BmURBPt+tO/BXxWm3G3XghC2tew
goKEJPzLLvfB8afRJTfJtqjzkuBxMSvr411vRBd9I6VvJwXBQvk7L81aoO9x
3yOvnJIC9I/PaFWbOcoQ+jMw4C4FW1hF32JzzZDw0k0ll4KkQNqZ8TrR8jBx
jpwwepMoBaPve1fbc4xRbu8HL9c6KeBJl+yIPyKPJPO/4ctK0rDjqmzRp4b9
uIsyTelTlYan9SdWXus9iGOzBGO27ZCG82q0pjuBh/FcmoLFOz1pSJdsd7C+
YIZ74lx/kKylgZqUyHuRdhQn+/0UKYuXBoNdpfduJ9piITTl0DshDffOW7LX
f3bCQXsUV5TNScO/mGVWG+2c8Xf9k0WX+WWgrIsZFfXBGdea1MzprZWB7/cC
p7J7XPAZs7jku8oyUNp1Lmq4wQ0Pn9r6IsBBBhQvmJQ/jfHCry5ZKoq2ycCg
8aOpuXZfrHX5YutQtwwkWg1SjJf74fzESv+6XhlI0vTmmur6Ye5VuZrAIRlQ
erFNJDDfD0u3T1N/CchCDJu2zDXEH795V/vCUloWmoz01KvFArDxT6s/JEtZ
aF47ZpO9JhjfXM/pPHdcFowTozJJ2sF4Uvt+ce9J4vpJoRob52B8K2be+SpT
FnL1Dv9cjoPxnMKNnpU+snBUuW6C5n4GFzA/lI/FyILZw33Or8tCsEiPXWg1
TxZaJqbK+SXDsNPiheNb6mTh6mnnHhKE4Sr5B9uCGmRh9SNDGwHHMOx6mu+n
eqss7CmdGl+4F4Zr12XZ5L6Xhbw/O2v6tp/D/gf6dl+algV/iRU+tTLhuKfW
kd+KKgfdtluOOIpG4LE9/0mcVZWDvcnxzhHSEXh5zaFttzQIn+LoclQi8A6s
5fx9lxz0sy4e2W4YgVMqRVp8DeXghoMhsgiMwIceVaXG2spBA/lxyPk3EdiJ
oVFS5CAH4ltIYZNfInBYSV7za0c5iFrfOWT8MwIXPEj6t9FdDsYfLtIzl0Ri
oUIXx5xAOQg9zkkVUY3E9bnr1Z4lyMHURbvqFRGR+CMlZu/nZDmQ0FrI7IiJ
xFPZi8wl1+TgbeViZmRKJKbcHrqyN0MOwr3ClK7kReLIm7z57rtykP9XIj/q
VSTefc2jYbRWDgoC5W/eFOXgo+J9n0Xr5WCZ77/+ts0c7Hnl2Ny2RjlY06a2
7IccB99I1qOFtMlBNH2FUIs6B89d3pS8vFcOKOFLfN0Pc/Dji3W2slNycFjs
XvDSaA7ON23edGGG+P3Ve/btTODgNOGOjp/zcmCpnhR44BoHhyd8MqoUIIHn
f2mylFwO3p86Rz8qQoKV+huDQjEHIyv+wSoxEljmCvY3v+BgDckV2eSNJBC4
QFdebObgjbc2bPwtRYKAzrvxoj0c3JenthirQoKyA2vODoxycLfrzvJxOgmu
r9G6emySg1+q7PY7oUGCD6zctQWzHFxYvG9AXpMEo7yZUwJLuTjoiVNbjREJ
yp16Tztt5GL3YM9oRVMS6D4UcprfwsW22v76lw+QIPHdsM5pWS7WxxFPrC1I
wDxU0rdRiYvXNNzI/ONAAvVPeFhCk4v5o7NP2J4iwSeRR6M9Olw8aXpP7IUL
CTb3SzmEAhe/a31yIcmbBKayNu/8jLn4VUL1nllfEswUtvC/NOXiarMX83YB
RP1Lhz7yH+TinDcd3rSzxO8PVyzIW3DxtdR3SinhJLCRPWS/7hgXx1h97p/j
kODVvoPV/Se42Pvjz2MvY0hgP5hfvMuOi5m3JkVV40kw/FDeqcqBiy2Y881X
EklwjM/CRt6Ri7W+rwBWKgkY/ictCl24mJa/dq4xnQQDramBTW5cLOsm/kgt
kwSdC/tIrR5cvGyUrPgvlwQ0c3XLaB8unilW7nO8S4L4qmX8e3y5eIitfqO5
gATPbFJCPvlxcfvUbpHrpSSwsw6mvA7g4udPDJsWy4j6NIoDKEFcXBa8n+tU
QYJ5MdtPtsFcnK9tvrvlGQkeul70CT/Dxel/T8wwakiQP7tTJzqEi+OxfUla
HQlE3521CA7l4vAIZw/+lySIsfFtPnyWi/30veRdmkmA1mwvXRvGxU7LTn9u
bSVB4JURqTLCEjKNb+dfk2CjZJyf9jkubt0l1abYTYKnRmPx9wlHmrHrLYmT
5WDqSJhgOBfv8HjxLPI9CQS7bcz2Ex6K2vy4+CMJGv5QNp0lfDPTs6D3Cwnq
FRQ/pRI2K6/JXvmNBOQis7JMwoKdG9J3/CCB83BKQSLhihHXJNYwCaQOfG33
IuwlWB2dMEoCW31tjZ2ESbLrIp79JsHpHdc/DRH1vNF0ChqaJIFWqMCPaMIx
5hXeG2dI0H8g3Go94d2ea5wN5klg8UzWKIaY3/h5pi37Hwm67k2XDxN55N4q
s7zJT4a4is0vdhE+XiF0oHkpGTaa3glgE/kJd9kazCwng4DTsw9XiHx5P0u0
t64igyfmrrxD5O+/fDnDbA0xPkt+5W1ifRTlTiqfEyWD2sDr4Whi/Xq1iuUK
1pPBdKycZxPIxQZex0QEt5BhqSIlrNGf6I8L95czpMlwzIwc5UD0Q0HW4j87
OTLkk05UfmNz8fruvJ/lCoS9k8ZLvLj45ej81+/KZKB4b1+3QPRb6IrDvWJ0
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
/w+a/DZx
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        RGBColor[0, 0, 1], 
        Line[CompressedData["
1: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
uMxJE676Jbfw7x8Droleq6km4vsfxSQoFA==
         "]]}}}, {
     AspectRatio -> GoldenRatio^(-1), Axes -> True, 
      AxesLabel -> {"r/L", "\!\(\*SubscriptBox[\(T\), \(00\)]\)"}, 
      AxesOrigin -> {0, 0}, ImageSize -> 425.1968503937008, Method -> {}, 
      PlotRange -> {{0, 20}, {-0.01369128336616424, 0.16396167168052345`}}, 
      PlotRangeClipping -> True, PlotRangePadding -> None}], {
     Placed[
      Unevaluated[
       LineLegend[{
         Directive[
          Thickness[Large], 
          GrayLevel[0]], 
         Directive[
          RGBColor[1, 0, 0]], 
         Directive[
          RGBColor[0, 
           Rational[2, 3], 0]], 
         Directive[
          RGBColor[
           Rational[2, 3], 
           Rational[2, 3], 0]], 
         Directive[
          RGBColor[0, 0, 1]]}, {
        "full", "1. Order", "2. Order", "3. Order", "4. Order", "5. Order", 
         "6. Order", "7. Order"}, LegendLayout -> "Column"]], {Right, Top}, 
      Identity]}]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.620556532479177*^9, 3.620556562822411*^9}, {
   3.620556601612307*^9, 3.62055667639883*^9}, 3.620556737704225*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<../figures/t00-regularized.pdf\>\"", ",", " ", "fig"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6205566727183113`*^9, 3.620556688426256*^9}}],

Cell[BoxData["\<\"../figures/t00-regularized.pdf\"\>"], "Output",
 CellChangeTimes->{3.620556691479076*^9, 3.620556739156177*^9}]
}, Open  ]],

Cell["\<\
Hier mach ich Schluss und bring die Metrik-Sachen gar nicht mehr mit rein in \
das Latex-Dokument. Das hat allerdings eher einen technischen Grund: Die \
Metriken beinhalten \[UDoubleDot]ble Terme, die lange auszuwerten brauchen \
und eine numerische Integration mit variabler oberer Grenze ist auch keine \
besonders gute Idee.\
\>", "Text",
 CellChangeTimes->{{3.6205575153806477`*^9, 3.620557558161583*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Massen bzw. Metrik ausrechnen", "Subsection",
 CellChangeTimes->{{3.620469166974975*^9, 3.6204691830331593`*^9}}],

Cell[CellGroupData[{

Cell["Exaktes L\[ODoubleDot]sen der Metrik", "Subsubsection",
 CellChangeTimes->{{3.6205583498420553`*^9, 3.620558352841154*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Die", " ", "Massenintegrale", " ", "ausrechnen", " ", "dauert", " ", 
     "auch", " ", "wieder", " ", "eine", " ", "Weile"}], "..."}], " ", "*)"}],
   "\[IndentingNewLine]", 
  RowBox[{"MsOrders", " ", "=", " ", 
   RowBox[{"Monitor", "[", 
    RowBox[{
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Assuming", "[", 
        RowBox[{
         RowBox[{"N", ">", "3"}], ",", 
         RowBox[{"Integrate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
            "T00sOrders", "\[LeftDoubleBracket]", "order", 
             "\[RightDoubleBracket]"}], " ", 
            SuperscriptBox["z", 
             RowBox[{"N", "-", "1"}]]}], ",", 
           RowBox[{"{", 
            RowBox[{"z", ",", "0", ",", "Z"}], "}"}]}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"order", ",", "1", ",", " ", 
         RowBox[{"Length", "@", "T00s"}]}], "}"}]}], "]"}], ",", "order"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.620468797162657*^9, 3.6204689481390676`*^9}, {
  3.6204691258195553`*^9, 3.620469126309205*^9}, {3.620469184875499*^9, 
  3.620469189014833*^9}, {3.620541386907398*^9, 3.6205414046935453`*^9}, {
  3.620542736844*^9, 3.620542741129137*^9}, {3.6205428240767927`*^9, 
  3.620542826603752*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SuperscriptBox["Z", "N"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      SuperscriptBox["Z", "2"], ")"}], 
     RowBox[{"-", "N"}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], 
        RowBox[{"2", " ", "N"}]], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "Z"}], ")"}], "N"], " ", 
       RowBox[{"Gamma", "[", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "N"}], "]"}], " ", 
       RowBox[{"Log", "[", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "a", " ", "Z"}], "]"}]}], "-", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[ImaginaryI]", " ", "Z"}], ")"}], "N"], " ", 
       RowBox[{"Gamma", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "1"}], "+", "N"}], ",", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "a", " ", "Z"}]}], "]"}], " ", 
       
       RowBox[{"Log", "[", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "a", " ", "Z"}], "]"}]}], "-", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], 
        RowBox[{"2", " ", "N"}]], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "Z"}], ")"}], "N"], " ", 
       RowBox[{"Gamma", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "1"}], "+", "N"}], ",", 
         RowBox[{"\[ImaginaryI]", " ", "a", " ", "Z"}]}], "]"}], " ", 
       RowBox[{"Log", "[", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "a", " ", "Z"}], "]"}]}], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[ImaginaryI]", " ", "Z"}], ")"}], "N"], " ", 
       RowBox[{"Gamma", "[", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "N"}], "]"}], " ", 
       RowBox[{"Log", "[", 
        RowBox[{"\[ImaginaryI]", " ", "a", " ", "Z"}], "]"}]}], "-", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[ImaginaryI]", " ", "Z"}], ")"}], "N"], " ", 
       RowBox[{"Gamma", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "1"}], "+", "N"}], ",", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "a", " ", "Z"}]}], "]"}], " ", 
       
       RowBox[{"Log", "[", 
        RowBox[{"\[ImaginaryI]", " ", "a", " ", "Z"}], "]"}]}], "-", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], 
        RowBox[{"2", " ", "N"}]], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "Z"}], ")"}], "N"], " ", 
       RowBox[{"Gamma", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "1"}], "+", "N"}], ",", 
         RowBox[{"\[ImaginaryI]", " ", "a", " ", "Z"}]}], "]"}], " ", 
       RowBox[{"Log", "[", 
        RowBox[{"\[ImaginaryI]", " ", "a", " ", "Z"}], "]"}]}], "-", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], 
        RowBox[{"2", " ", "N"}]], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "Z"}], ")"}], "N"], " ", 
       RowBox[{"Gamma", "[", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "N"}], "]"}], " ", 
       RowBox[{"Log", "[", 
        RowBox[{
         SuperscriptBox["a", "2"], " ", 
         SuperscriptBox["Z", "2"]}], "]"}]}], "-", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[ImaginaryI]", " ", "Z"}], ")"}], "N"], " ", 
       RowBox[{"Gamma", "[", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "N"}], "]"}], " ", 
       RowBox[{"Log", "[", 
        RowBox[{
         SuperscriptBox["a", "2"], " ", 
         SuperscriptBox["Z", "2"]}], "]"}]}], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[ImaginaryI]", " ", "Z"}], ")"}], "N"], " ", 
       RowBox[{"Gamma", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "1"}], "+", "N"}], ",", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "a", " ", "Z"}]}], "]"}], " ", 
       
       RowBox[{"Log", "[", 
        RowBox[{
         SuperscriptBox["a", "2"], " ", 
         SuperscriptBox["Z", "2"]}], "]"}]}], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], 
        RowBox[{"2", " ", "N"}]], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "Z"}], ")"}], "N"], " ", 
       RowBox[{"Gamma", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "1"}], "+", "N"}], ",", 
         RowBox[{"\[ImaginaryI]", " ", "a", " ", "Z"}]}], "]"}], " ", 
       RowBox[{"Log", "[", 
        RowBox[{
         SuperscriptBox["a", "2"], " ", 
         SuperscriptBox["Z", "2"]}], "]"}]}], "-", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[ImaginaryI]", " ", "Z"}], ")"}], "N"], " ", 
       RowBox[{"MeijerG", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "N"}]}], "}"}], ",", 
           RowBox[{"{", "}"}]}], "}"}], ",", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "a", " ", "Z"}]}], "]"}]}], 
      "-", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], 
        RowBox[{"2", " ", "N"}]], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "Z"}], ")"}], "N"], " ", 
       RowBox[{"MeijerG", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "N"}]}], "}"}], ",", 
           RowBox[{"{", "}"}]}], "}"}], ",", 
         RowBox[{"\[ImaginaryI]", " ", "a", " ", "Z"}]}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"2", " ", "N"}]], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "Z"}], ")"}], "N"]}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"\[ImaginaryI]", " ", "Z"}], ")"}], "N"]}], ")"}], " ", 
       RowBox[{"Gamma", "[", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "N"}], "]"}], " ", 
       RowBox[{"PolyGamma", "[", 
        RowBox[{"0", ",", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "N"}]}], "]"}]}]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "N"}]], 
    RowBox[{
     SuperscriptBox["Z", "N"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"2", " ", "N"}]]}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[ImaginaryI]", " ", "Z"}], ")"}], 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "N"}]}]], " ", 
        RowBox[{"Gamma", "[", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"2", " ", "N"}]}], "]"}]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "Z"}], ")"}], 
         RowBox[{
          RowBox[{"-", "2"}], " ", "N"}]], " ", "Z", " ", 
        RowBox[{"Gamma", "[", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"2", " ", "N"}]}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"1", "/", "a"}], 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "Z"}], ")"}], 
          RowBox[{
           RowBox[{"-", "2"}], " ", "N"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "a", " ", "Z"}], ")"}], 
             "N"], " ", 
            RowBox[{"Gamma", "[", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "N"}], "]"}]}], "-", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "a", " ", "Z"}], ")"}], 
             "N"], " ", 
            RowBox[{"Gamma", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "1"}], "+", "N"}], ",", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "a", " ", "Z"}]}], 
             "]"}]}], "-", 
           RowBox[{"\[ImaginaryI]", " ", "a", " ", "Z", " ", 
            RowBox[{"Gamma", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], "+", 
               RowBox[{"2", " ", "N"}]}], ",", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "a", " ", "Z"}]}], 
             "]"}]}]}], ")"}]}]}], "+", 
       RowBox[{
        RowBox[{"1", "/", "a"}], 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"2", " ", "N"}]], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"\[ImaginaryI]", " ", "Z"}], ")"}], 
          RowBox[{
           RowBox[{"-", "2"}], " ", "N"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"\[ImaginaryI]", " ", "a", " ", "Z"}], ")"}], "N"], " ", 
            RowBox[{"Gamma", "[", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "N"}], "]"}]}], "-", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"\[ImaginaryI]", " ", "a", " ", "Z"}], ")"}], "N"], " ", 
            RowBox[{"Gamma", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "1"}], "+", "N"}], ",", 
              RowBox[{"\[ImaginaryI]", " ", "a", " ", "Z"}]}], "]"}]}], "+", 
           RowBox[{"\[ImaginaryI]", " ", "a", " ", "Z", " ", 
            RowBox[{"Gamma", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], "+", 
               RowBox[{"2", " ", "N"}]}], ",", 
              RowBox[{"\[ImaginaryI]", " ", "a", " ", "Z"}]}], "]"}]}]}], 
          ")"}]}]}]}], ")"}]}]}], ",", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    SuperscriptBox["Z", "N"], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "Z"}], ")"}], 
         RowBox[{
          RowBox[{"-", "3"}], " ", "N"}]], " ", 
        SuperscriptBox["Z", "2"], " ", 
        RowBox[{"Gamma", "[", 
         RowBox[{
          RowBox[{"-", "3"}], "+", 
          RowBox[{"3", " ", "N"}]}], "]"}]}], 
       RowBox[{"1", "-", "N"}]], "-", 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], 
         RowBox[{"2", " ", "N"}]], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[ImaginaryI]", " ", "Z"}], ")"}], 
         RowBox[{
          RowBox[{"-", "3"}], " ", "N"}]], " ", 
        SuperscriptBox["Z", "2"], " ", 
        RowBox[{"Gamma", "[", 
         RowBox[{
          RowBox[{"-", "3"}], "+", 
          RowBox[{"3", " ", "N"}]}], "]"}]}], 
       RowBox[{
        RowBox[{"-", "1"}], "+", "N"}]], "+", 
      RowBox[{
       FractionBox["1", 
        RowBox[{
         SuperscriptBox["a", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "N"}], ")"}]}]], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "Z"}], ")"}], 
         RowBox[{
          RowBox[{"-", "3"}], " ", "N"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "a", " ", "Z"}], ")"}], 
             RowBox[{"2", " ", "N"}]]}], " ", 
           RowBox[{"Gamma", "[", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "N"}], "]"}]}], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "a", " ", "Z"}], ")"}], 
            RowBox[{"2", " ", "N"}]], " ", 
           RowBox[{"Gamma", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "1"}], "+", "N"}], ",", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "a", " ", "Z"}]}], "]"}]}],
           "+", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           SuperscriptBox["Z", "2"], " ", 
           RowBox[{"Gamma", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "3"}], "+", 
              RowBox[{"3", " ", "N"}]}], ",", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "a", " ", "Z"}]}], 
            "]"}]}]}], ")"}]}]}], "+", 
      RowBox[{
       FractionBox["1", 
        RowBox[{
         SuperscriptBox["a", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "N"}], ")"}]}]], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], 
         RowBox[{"2", " ", "N"}]], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[ImaginaryI]", " ", "Z"}], ")"}], 
         RowBox[{
          RowBox[{"-", "3"}], " ", "N"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"\[ImaginaryI]", " ", "a", " ", "Z"}], ")"}], 
             RowBox[{"2", " ", "N"}]]}], " ", 
           RowBox[{"Gamma", "[", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "N"}], "]"}]}], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"\[ImaginaryI]", " ", "a", " ", "Z"}], ")"}], 
            RowBox[{"2", " ", "N"}]], " ", 
           RowBox[{"Gamma", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "1"}], "+", "N"}], ",", 
             RowBox[{"\[ImaginaryI]", " ", "a", " ", "Z"}]}], "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           SuperscriptBox["Z", "2"], " ", 
           RowBox[{"Gamma", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "3"}], "+", 
              RowBox[{"3", " ", "N"}]}], ",", 
             RowBox[{"\[ImaginaryI]", " ", "a", " ", "Z"}]}], "]"}]}]}], 
         ")"}]}]}]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"3", " ", 
      SuperscriptBox["a", "3"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "N"}], ")"}]}]], 
    RowBox[{
     SuperscriptBox["Z", "N"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       SuperscriptBox["Z", "2"], ")"}], 
      RowBox[{
       RowBox[{"-", "4"}], " ", "N"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"\[ImaginaryI]", " ", "Z"}], ")"}], 
            RowBox[{"4", " ", "N"}]], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "a", " ", "Z"}], ")"}], 
            RowBox[{"3", " ", "N"}]]}], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"2", " ", "N"}]], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "Z"}], ")"}], 
            RowBox[{"4", " ", "N"}]], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"\[ImaginaryI]", " ", "a", " ", "Z"}], ")"}], 
            RowBox[{"3", " ", "N"}]]}]}], ")"}], " ", 
        RowBox[{"Gamma", "[", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "N"}], "]"}]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["a", "3"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"-", "1"}], ")"}], 
               RowBox[{"2", " ", "N"}]], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "\[ImaginaryI]"}], " ", "Z"}], ")"}], 
               RowBox[{"4", " ", "N"}]]}], "-", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"\[ImaginaryI]", " ", "Z"}], ")"}], 
              RowBox[{"4", " ", "N"}]]}], ")"}], " ", 
           SuperscriptBox["Z", "3"], " ", 
           RowBox[{"Gamma", "[", 
            RowBox[{
             RowBox[{"-", "4"}], "+", 
             RowBox[{"4", " ", "N"}]}], "]"}]}], "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"\[ImaginaryI]", " ", "Z"}], ")"}], 
            RowBox[{"4", " ", "N"}]], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "a", " ", "Z"}], ")"}], 
            RowBox[{"3", " ", "N"}]], " ", 
           RowBox[{"Gamma", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "1"}], "+", "N"}], ",", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "a", " ", "Z"}]}], "]"}]}],
           "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"2", " ", "N"}]], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "Z"}], ")"}], 
            RowBox[{"4", " ", "N"}]], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"\[ImaginaryI]", " ", "a", " ", "Z"}], ")"}], 
            RowBox[{"3", " ", "N"}]], " ", 
           RowBox[{"Gamma", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "1"}], "+", "N"}], ",", 
             RowBox[{"\[ImaginaryI]", " ", "a", " ", "Z"}]}], "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["a", "3"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"\[ImaginaryI]", " ", "Z"}], ")"}], 
            RowBox[{"4", " ", "N"}]], " ", 
           SuperscriptBox["Z", "3"], " ", 
           RowBox[{"Gamma", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "4"}], "+", 
              RowBox[{"4", " ", "N"}]}], ",", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "a", " ", "Z"}]}], "]"}]}],
           "-", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"2", " ", "N"}]], " ", 
           SuperscriptBox["a", "3"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "Z"}], ")"}], 
            RowBox[{"4", " ", "N"}]], " ", 
           SuperscriptBox["Z", "3"], " ", 
           RowBox[{"Gamma", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "4"}], "+", 
              RowBox[{"4", " ", "N"}]}], ",", 
             RowBox[{"\[ImaginaryI]", " ", "a", " ", "Z"}]}], "]"}]}]}], 
         ")"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"4", " ", 
      SuperscriptBox["a", "4"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "N"}], ")"}]}]], 
    RowBox[{
     SuperscriptBox["Z", "N"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       SuperscriptBox["Z", "2"], ")"}], 
      RowBox[{
       RowBox[{"-", "5"}], " ", "N"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"\[ImaginaryI]", " ", "Z"}], ")"}], 
             RowBox[{"5", " ", "N"}]], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "a", " ", "Z"}], ")"}], 
             RowBox[{"4", " ", "N"}]]}], "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"-", "1"}], ")"}], 
             RowBox[{"2", " ", "N"}]], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "Z"}], ")"}], 
             RowBox[{"5", " ", "N"}]], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"\[ImaginaryI]", " ", "a", " ", "Z"}], ")"}], 
             RowBox[{"4", " ", "N"}]]}]}], ")"}]}], " ", 
        RowBox[{"Gamma", "[", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "N"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["a", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"2", " ", "N"}]], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "Z"}], ")"}], 
            RowBox[{"5", " ", "N"}]]}], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"\[ImaginaryI]", " ", "Z"}], ")"}], 
           RowBox[{"5", " ", "N"}]]}], ")"}], " ", 
        SuperscriptBox["Z", "4"], " ", 
        RowBox[{"Gamma", "[", 
         RowBox[{
          RowBox[{"-", "5"}], "+", 
          RowBox[{"5", " ", "N"}]}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[ImaginaryI]", " ", "Z"}], ")"}], 
         RowBox[{"5", " ", "N"}]], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "a", " ", "Z"}], ")"}], 
         RowBox[{"4", " ", "N"}]], " ", 
        RowBox[{"Gamma", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "1"}], "+", "N"}], ",", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "a", " ", "Z"}]}], "]"}]}], 
       "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], 
         RowBox[{"2", " ", "N"}]], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "Z"}], ")"}], 
         RowBox[{"5", " ", "N"}]], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[ImaginaryI]", " ", "a", " ", "Z"}], ")"}], 
         RowBox[{"4", " ", "N"}]], " ", 
        RowBox[{"Gamma", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "1"}], "+", "N"}], ",", 
          RowBox[{"\[ImaginaryI]", " ", "a", " ", "Z"}]}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox["a", "4"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[ImaginaryI]", " ", "Z"}], ")"}], 
         RowBox[{"5", " ", "N"}]], " ", 
        SuperscriptBox["Z", "4"], " ", 
        RowBox[{"Gamma", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "5"}], "+", 
           RowBox[{"5", " ", "N"}]}], ",", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "a", " ", "Z"}]}], "]"}]}], 
       "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], 
         RowBox[{"2", " ", "N"}]], " ", 
        SuperscriptBox["a", "4"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "Z"}], ")"}], 
         RowBox[{"5", " ", "N"}]], " ", 
        SuperscriptBox["Z", "4"], " ", 
        RowBox[{"Gamma", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "5"}], "+", 
           RowBox[{"5", " ", "N"}]}], ",", 
          RowBox[{"\[ImaginaryI]", " ", "a", " ", "Z"}]}], "]"}]}]}], 
      ")"}]}]}], ",", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"5", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "N"}], ")"}]}]], 
    RowBox[{
     SuperscriptBox["Z", "N"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[ImaginaryI]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "Z"}], ")"}], 
         RowBox[{
          RowBox[{"-", "6"}], " ", "N"}]], " ", 
        SuperscriptBox["Z", "5"], " ", 
        RowBox[{"Gamma", "[", 
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"6", " ", "N"}]}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], 
         RowBox[{"2", " ", "N"}]], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[ImaginaryI]", " ", "Z"}], ")"}], 
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          RowBox[{"6", " ", "N"}]}]], " ", 
        SuperscriptBox["Z", "6"], " ", 
        RowBox[{"Gamma", "[", 
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"6", " ", "N"}]}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"1", "/", 
         SuperscriptBox["a", "5"]}], 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "Z"}], ")"}], 
          RowBox[{
           RowBox[{"-", "6"}], " ", "N"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "a", " ", "Z"}], ")"}], 
             RowBox[{"5", " ", "N"}]], " ", 
            RowBox[{"Gamma", "[", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "N"}], "]"}]}], "-", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "a", " ", "Z"}], ")"}], 
             RowBox[{"5", " ", "N"}]], " ", 
            RowBox[{"Gamma", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "1"}], "+", "N"}], ",", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "a", " ", "Z"}]}], 
             "]"}]}], "-", 
           RowBox[{"\[ImaginaryI]", " ", 
            SuperscriptBox["a", "5"], " ", 
            SuperscriptBox["Z", "5"], " ", 
            RowBox[{"Gamma", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               RowBox[{"6", " ", "N"}]}], ",", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "a", " ", "Z"}]}], 
             "]"}]}]}], ")"}]}]}], "+", 
       RowBox[{
        RowBox[{"1", "/", 
         SuperscriptBox["a", "5"]}], 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"2", " ", "N"}]], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"\[ImaginaryI]", " ", "Z"}], ")"}], 
          RowBox[{
           RowBox[{"-", "6"}], " ", "N"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"\[ImaginaryI]", " ", "a", " ", "Z"}], ")"}], 
             RowBox[{"5", " ", "N"}]], " ", 
            RowBox[{"Gamma", "[", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "N"}], "]"}]}], "-", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"\[ImaginaryI]", " ", "a", " ", "Z"}], ")"}], 
             RowBox[{"5", " ", "N"}]], " ", 
            RowBox[{"Gamma", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "1"}], "+", "N"}], ",", 
              RowBox[{"\[ImaginaryI]", " ", "a", " ", "Z"}]}], "]"}]}], "+", 
           RowBox[{"\[ImaginaryI]", " ", 
            SuperscriptBox["a", "5"], " ", 
            SuperscriptBox["Z", "5"], " ", 
            RowBox[{"Gamma", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               RowBox[{"6", " ", "N"}]}], ",", 
              RowBox[{"\[ImaginaryI]", " ", "a", " ", "Z"}]}], "]"}]}]}], 
          ")"}]}]}]}], ")"}]}]}], ",", 
   RowBox[{
    FractionBox["1", "6"], " ", 
    SuperscriptBox["Z", "N"], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "Z"}], ")"}], 
         RowBox[{
          RowBox[{"-", "7"}], " ", "N"}]], " ", 
        SuperscriptBox["Z", "6"], " ", 
        RowBox[{"Gamma", "[", 
         RowBox[{
          RowBox[{"-", "7"}], "+", 
          RowBox[{"7", " ", "N"}]}], "]"}]}], 
       RowBox[{"1", "-", "N"}]], "-", 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], 
         RowBox[{"2", " ", "N"}]], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[ImaginaryI]", " ", "Z"}], ")"}], 
         RowBox[{
          RowBox[{"-", "7"}], " ", "N"}]], " ", 
        SuperscriptBox["Z", "6"], " ", 
        RowBox[{"Gamma", "[", 
         RowBox[{
          RowBox[{"-", "7"}], "+", 
          RowBox[{"7", " ", "N"}]}], "]"}]}], 
       RowBox[{
        RowBox[{"-", "1"}], "+", "N"}]], "+", 
      RowBox[{
       FractionBox["1", 
        RowBox[{
         SuperscriptBox["a", "6"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "N"}], ")"}]}]], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "Z"}], ")"}], 
         RowBox[{
          RowBox[{"-", "7"}], " ", "N"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "a", " ", "Z"}], ")"}], 
             RowBox[{"6", " ", "N"}]]}], " ", 
           RowBox[{"Gamma", "[", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "N"}], "]"}]}], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "a", " ", "Z"}], ")"}], 
            RowBox[{"6", " ", "N"}]], " ", 
           RowBox[{"Gamma", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "1"}], "+", "N"}], ",", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "a", " ", "Z"}]}], "]"}]}],
           "+", 
          RowBox[{
           SuperscriptBox["a", "6"], " ", 
           SuperscriptBox["Z", "6"], " ", 
           RowBox[{"Gamma", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "7"}], "+", 
              RowBox[{"7", " ", "N"}]}], ",", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "a", " ", "Z"}]}], 
            "]"}]}]}], ")"}]}]}], "+", 
      RowBox[{
       FractionBox["1", 
        RowBox[{
         SuperscriptBox["a", "6"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "N"}], ")"}]}]], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], 
         RowBox[{"2", " ", "N"}]], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[ImaginaryI]", " ", "Z"}], ")"}], 
         RowBox[{
          RowBox[{"-", "7"}], " ", "N"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"\[ImaginaryI]", " ", "a", " ", "Z"}], ")"}], 
             RowBox[{"6", " ", "N"}]]}], " ", 
           RowBox[{"Gamma", "[", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "N"}], "]"}]}], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"\[ImaginaryI]", " ", "a", " ", "Z"}], ")"}], 
            RowBox[{"6", " ", "N"}]], " ", 
           RowBox[{"Gamma", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "1"}], "+", "N"}], ",", 
             RowBox[{"\[ImaginaryI]", " ", "a", " ", "Z"}]}], "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["a", "6"], " ", 
           SuperscriptBox["Z", "6"], " ", 
           RowBox[{"Gamma", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "7"}], "+", 
              RowBox[{"7", " ", "N"}]}], ",", 
             RowBox[{"\[ImaginaryI]", " ", "a", " ", "Z"}]}], "]"}]}]}], 
         ")"}]}]}]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.62046883411595*^9, 3.620468864153984*^9, 
  3.620469091900085*^9, 3.6204693713920393`*^9, 3.620541442002019*^9, 
  3.620542815939472*^9, 3.620542864660736*^9, 3.6205575975862303`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "summieren", " ", "der", " ", "ORdnungen", " ", "geht", " ", "fix"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Ms", " ", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
        "MsOrders", "\[LeftDoubleBracket]", "o", "\[RightDoubleBracket]"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"o", ",", "1", ",", "maxo"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"maxo", ",", " ", "1", ",", 
        RowBox[{"Length", "@", "MsOrders"}]}], "}"}]}], "]"}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.620541781670817*^9, 3.620541797852171*^9}}],

Cell["\<\
Das Problem an diesen Ms ist, dass da haufenweise MeijerG-Funktionen drin \
stehen, die enorm lange zum Auswerten (beim Plotten) brauchen. Wir \
integrieren daher mal numerisch, was kein Problem ist, da es eine \
\[OpenCurlyDoubleQuote]gew\[ODoubleDot]hnliche\[CloseCurlyDoubleQuote] rein \
reelle Integration ist und \[Rho] schnell ausgewertet ist. Es geht ja \
letztlich auch nur ums Plotten.\
\>", "Text",
 CellChangeTimes->{{3.620543786923245*^9, 3.620543805778269*^9}, {
  3.62054403587798*^9, 3.620544068761676*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Bestimmung von g00 durch Interpolation von T00\
\>", "Subsubsection",
 CellChangeTimes->{{3.620558360589284*^9, 3.620558366577094*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"T00sOrders", "\[LeftDoubleBracket]", "1", 
  "\[RightDoubleBracket]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "z"}], ")"}], 
    RowBox[{"-", "N"}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Gamma", "[", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "N"}], "]"}]}], "+", 
     RowBox[{"Gamma", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "1"}], "+", "N"}], ",", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "a", " ", "z"}]}], "]"}]}], 
    ")"}]}], "+", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}], 
    RowBox[{"2", " ", "N"}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"\[ImaginaryI]", " ", "z"}], ")"}], 
    RowBox[{"-", "N"}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Gamma", "[", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "N"}], "]"}]}], "+", 
     RowBox[{"Gamma", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "1"}], "+", "N"}], ",", 
       RowBox[{"\[ImaginaryI]", " ", "a", " ", "z"}]}], "]"}]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{3.6205584342582693`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"test44", "=", 
  RowBox[{"FunctionInterpolation", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{
       "T00sOrders", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
       " ", 
       SuperscriptBox["z", 
        RowBox[{"N", "-", "1"}]]}], "]"}], " ", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"N", "\[Rule]", " ", "3"}], ",", " ", 
       RowBox[{"a", "\[Rule]", " ", "0.6"}]}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"z", ",", "0", ",", "20"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6205583725335627`*^9, 3.620558541643878*^9}, {
  3.620558603774351*^9, 3.620558603855056*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/\\((\\(\\(0.` \
\[VeryThinSpace]\\)\\) + \\(\\(0.`\\\\ \[ImaginaryI]\\)\\))\\)\\^3\\)\
\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.62055842591971*^9, 3.620558449569571*^9}, {
   3.620558488420977*^9, 3.620558557987639*^9}, 3.620558604421102*^9, 
   3.6205589027993183`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Indeterminate expression \[NoBreak]\\!\\(0.`\\\\ \
ComplexInfinity\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/indet\\\", ButtonNote -> \
\\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.62055842591971*^9, 3.620558449569571*^9}, {
   3.620558488420977*^9, 3.620558557987639*^9}, 3.620558604421102*^9, 
   3.620558902836228*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/\\((\\(\\(0.` \
\[VeryThinSpace]\\)\\) + \\(\\(0.`\\\\ \[ImaginaryI]\\)\\))\\)\\^3\\)\
\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.62055842591971*^9, 3.620558449569571*^9}, {
   3.620558488420977*^9, 3.620558557987639*^9}, 3.620558604421102*^9, 
   3.6205589028741217`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Indeterminate expression \[NoBreak]\\!\\(0.`\\\\ \
ComplexInfinity\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/indet\\\", ButtonNote -> \
\\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.62055842591971*^9, 3.620558449569571*^9}, {
   3.620558488420977*^9, 3.620558557987639*^9}, 3.620558604421102*^9, 
   3.620558902912034*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Thread", "::", "tdlen"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Objects of unequal length in \
\[NoBreak]\\!\\(\\({\\(\\(-2.5`\\)\\), \\(\\(-0.8333333333333333`\\)\\), \
0.8333333333333335`, 2.5`}\\)\\^\\({}\\)\\)\[NoBreak] cannot be combined. \\!\
\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Thread/tdlen\\\", \
ButtonNote -> \\\"Thread::tdlen\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.62055842591971*^9, 3.620558449569571*^9}, {
   3.620558488420977*^9, 3.620558557987639*^9}, 3.620558604421102*^9, 
   3.620558902948419*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Thread", "::", "tdlen"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Objects of unequal length in \[NoBreak]\\!\\(\\(\\({\\(\\(\
\\(\\(0.9162907318741551` \[VeryThinSpace]\\)\\) + \\(\\(3.141592653589793`\\\
\\ \[ImaginaryI]\\)\\)\\)\\), \\(\\(\\(\\(-0.1823215567939547`\\)\\) + \
\\(\\(3.141592653589793`\\\\ \[ImaginaryI]\\)\\)\\)\\), \
\\(\\(-0.18232155679395445`\\)\\), 0.9162907318741551`}\\)\\)\\\\ \\(\\({}\\)\
\\)\\)\[NoBreak] cannot be combined. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Thread/tdlen\\\", \
ButtonNote -> \\\"Thread::tdlen\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.62055842591971*^9, 3.620558449569571*^9}, {
   3.620558488420977*^9, 3.620558557987639*^9}, 3.620558604421102*^9, 
   3.62055890299095*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Thread", "::", "tdlen"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Objects of unequal length in \
\[NoBreak]\\!\\(\\(\\({\\(\\(-2.5`\\)\\), \\(\\(-0.8333333333333333`\\)\\), \
0.8333333333333335`, 2.5`}\\)\\)\\\\ \\(\\({}\\)\\)\\)\[NoBreak] cannot be \
combined. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Thread/tdlen\\\", ButtonNote -> \
\\\"Thread::tdlen\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.62055842591971*^9, 3.620558449569571*^9}, {
   3.620558488420977*^9, 3.620558557987639*^9}, 3.620558604421102*^9, 
   3.6205589029922237`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Thread :: \
tdlen\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.62055842591971*^9, 3.620558449569571*^9}, {
   3.620558488420977*^9, 3.620558557987639*^9}, 3.620558604421102*^9, 
   3.620558903037096*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FunctionInterpolation", "::", "nreal"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Near \[NoBreak]\\!\\(z\\)\[NoBreak] = \[NoBreak]\\!\\(2.5`\
\\)\[NoBreak], the function did not evaluate to a real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FunctionInterpolation/nreal\\\", \
ButtonNote -> \\\"FunctionInterpolation::nreal\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{{3.62055842591971*^9, 3.620558449569571*^9}, {
   3.620558488420977*^9, 3.620558557987639*^9}, 3.620558604421102*^9, 
   3.620558903038375*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FunctionInterpolation", "::", "nreal"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Near \[NoBreak]\\!\\(z\\)\[NoBreak] = \
\[NoBreak]\\!\\(2.6555555555555554`\\)\[NoBreak], the function did not \
evaluate to a real number. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FunctionInterpolation/nreal\\\", \
ButtonNote -> \\\"FunctionInterpolation::nreal\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{{3.62055842591971*^9, 3.620558449569571*^9}, {
   3.620558488420977*^9, 3.620558557987639*^9}, 3.620558604421102*^9, 
   3.6205589030838223`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"InterpolatingFunction", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "20.`"}], "}"}], "}"}], ",", "\<\"<>\"\>"}], "]"}],
  False,
  Editable->False]], "Output",
 CellChangeTimes->{{3.620558426138628*^9, 3.620558449782946*^9}, {
   3.620558488574835*^9, 3.620558558312985*^9}, 3.6205586048057127`*^9, 
   3.62055890319025*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Re", "[", 
     RowBox[{
     "T00sOrders", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
     " ", "]"}], " ", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"N", "\[Rule]", " ", "3"}], ",", " ", 
      RowBox[{"a", "\[Rule]", " ", "0.6"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "0", ",", "30"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.620558822950211*^9, 3.620558849906481*^9}, 
   3.6205588975652637`*^9, 3.620558932126049*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
bPH4RYdgviZtMKzJl9QV3oeXjU+XGLRrA71eJXHc2A7Lxwj9Pf1aG8hlWz4r
ZjrgyJGt7RZcFChRTWGIDLrgzg7GncurKeBSPj6eKeqKZa5duMXDTYGTSR4v
rtq74q54+pWujRQ4G8kuXXjqignyPqctBClgUri/LKvVDb/wvR5gocQZ/+pz
bQHbHStZ/fK+rEyBG9a6XvX33fER6i4GjxoFkoXtpsNX3LEy9xubLg0KKFjV
5XwJ8MAJF7joFjQK0FHbp8vgiTW/7t1sYUUBh2s9YlXhXjj1RdG6y3sokPq7
u2qU7YWHmj5w8dhSYLCngD59zgunZxxceOxAAX8JAfnjfV74nVr5iLknBbyn
hv/E6XjjnLDpevNICpjqhFbVTHvj73NZDuaFFLizL6yCYeiLhwYqHUuLKXB6
1fU0axtf3HWn0Wn2LOd956cufl9fXJ32zqWokgJLp/5pbEj3xa6SVI+vlynw
wr5D6NFzX/zQ5C2TfYcC8UGbWFGOfrhh20zAMKaAGvnXWRbTD1ds5g7SaqPA
hMC5mN0xfjiun7z/TQcFmi/ekmac9sOawYkHVHoo8Gq1btyeF364JFfl0OP3
FGhvcc62AH+cHmMUK/2RAhk7dafsrP1xjJtdXMRnChgJb7lKcvXHNopHj4h/
o8C9udad+6L88bqmnoSgBQp0m4dc86zyx/OlH4/fWaJAUZjGl8k6fzyW+DNR
4CcF9uVOxpo1++NWK4WUpr8UWBVuUxvZ448j3h1kb9xAhfhVn0Izf/pjj4dZ
Ge48VPDyUDxVvJaJrS5XZl7fTIX8SSohjo+JlVhPsl0EqHDapCTpsjwTD62X
zauRoEJdodLzHs73Utc3Sv4fKSoMbCWd993DxLdemJ2ylaXCuv+81z9yZOK8
ksgzK0Qq9Az0pf9jMrGpRkexOYkKSZnPDfVTmNh5nZl9jwYVJhLDs75kMXHw
8GNeJ20qmG+zAu9TTHwi82mCnx4VGr+Ur71yjokrfPbSJ2lUSKNeVT9Ww8QN
tBdzEdupnPuLzFexeibu/9zHjDfmzDdkbHeplYm/3HWUW7eTCvR1YlKlbUz8
8/TAm6zdVKC8Krnm2snE0juHrIotqVCzoSdCs5eJyZIe6+T3UOFWlyo2G2Bi
+DGKL9pQIdQkTUh1mIn9Kj5o33SggqS2v7jZJyaOOej/zcCZCqNtmyaTJ5g4
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
f4YQViR4SOXKHvw/WJVbSQ==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{0, 30}, {-0.01240859992883798, 0.06487944675760088}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.620558840228242*^9, {3.620558880359761*^9, 3.6205588979722443`*^9}, 
   3.620558932660149*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"test44", "[", "Z", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"Z", ",", "0", ",", "20"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.620558546579735*^9, 3.620558554238696*^9}, {
  3.6205587649941683`*^9, 3.620558794703992*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
PzZo3a+7eVKci/0PXMoJ9w==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{0, 20}, {-1.2159180818654192`, 1.2766803635491666`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.620558641427162*^9, {3.620558790742733*^9, 3.6205587948350677`*^9}, 
   3.620558899977206*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Monitor", "[", 
  RowBox[{
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Assuming", "[", 
      RowBox[{
       RowBox[{"N", ">", "3"}], ",", 
       RowBox[{"Integrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
          "T00sOrders", "\[LeftDoubleBracket]", "order", 
           "\[RightDoubleBracket]"}], " ", 
          SuperscriptBox["z", 
           RowBox[{"N", "-", "1"}]]}], ",", 
         RowBox[{"{", 
          RowBox[{"z", ",", "0", ",", "Z"}], "}"}]}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"order", ",", "1", ",", " ", 
       RowBox[{"Length", "@", "T00s"}]}], "}"}]}], "]"}], ",", "order"}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"erg", "[", 
   RowBox[{"Z_", ",", "A_", ",", "n_"}], "]"}], ":=", 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"Re", "@", 
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
        "T00sOrders", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        " ", 
        SuperscriptBox["z", 
         RowBox[{"N", "-", "1"}]]}], " ", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"N", "\[Rule]", " ", "n"}], ",", 
         RowBox[{"a", "\[Rule]", "A"}]}], "}"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"z", ",", "0", ",", "Z"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.620544073904928*^9, 3.6205441368058243`*^9}, {
  3.6205441685530787`*^9, 3.620544289389929*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"erg", "[", 
    RowBox[{"z", ",", "3", ",", "3"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "0", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.620544269690104*^9, 3.6205443096009703`*^9}, 
   3.620544626095821*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{0, 5}, {-5.263383440374412, 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.620544273309533*^9, 3.620544295428368*^9}, 
   3.62054433308646*^9, 3.620544631630307*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Zeichnen von g00 durch Interpolation\
\>", "Subsubsection",
 CellChangeTimes->{{3.620558323803855*^9, 3.620558330311942*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Function", "[", 
      RowBox[{"Strip", ",", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{"Strip", "[", 
            RowBox[{"1", "-", 
             RowBox[{"2", 
              RowBox[{
               RowBox[{
               "Ms", "\[LeftDoubleBracket]", "order", 
                "\[RightDoubleBracket]"}], "/", 
               SuperscriptBox["z", 
                RowBox[{"N", "-", "2"}]]}]}]}], "]"}], " ", "/.", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Z", "\[Rule]", " ", "z"}], ",", 
             RowBox[{"a", "\[Rule]", " ", "l"}], ",", 
             RowBox[{"N", "\[Rule]", " ", "n"}]}], "}"}]}], "]"}], " ", ",", 
         RowBox[{"{", 
          RowBox[{"z", ",", "0", ",", "10"}], "}"}], ",", 
         RowBox[{"WorkingPrecision", "\[Rule]", "10"}]}], "]"}]}], 
      "\[IndentingNewLine]", "]"}], " ", "/@", 
     RowBox[{"{", 
      RowBox[{"Re", ",", "Im"}], "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"l", ",", "1"}], "}"}], ",", "0", ",", "10"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "3", ",", "7", ",", "1"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"order", ",", "1", ",", " ", 
      RowBox[{"Length", "@", "Ms"}], ",", "1"}], "}"}]}], "]"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.6204691144734163`*^9, 3.620469118390188*^9}, {
   3.6204691955534687`*^9, 3.620469213344884*^9}, 3.6204693934928083`*^9, 
   3.6205418726050386`*^9, {3.62054225945975*^9, 3.620542272434759*^9}, {
   3.6205588851573057`*^9, 3.620558888316762*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Evaluate", "[", 
  RowBox[{
   RowBox[{"Re", "[", 
    RowBox[{"1", "-", 
     RowBox[{"2", 
      RowBox[{
       RowBox[{"Ms", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
       "/", 
       SuperscriptBox["z", 
        RowBox[{"N", "-", "2"}]]}]}]}], "]"}], "/.", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"z", "\[Rule]", " ", "z"}], ",", 
     RowBox[{"a", "\[Rule]", " ", "1"}], ",", " ", 
     RowBox[{"N", "\[Rule]", " ", "5"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.620542104485585*^9, 3.6205421079878063`*^9}}],

Cell[BoxData[
 RowBox[{"1", "-", 
  RowBox[{"2", " ", 
   RowBox[{"Re", "[", 
    RowBox[{
     FractionBox["1", 
      SuperscriptBox["z", "3"]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        FractionBox["1", 
         RowBox[{"4", " ", 
          SuperscriptBox["Z", "15"]}]], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           SuperscriptBox["Z", "15"], " ", 
           RowBox[{"Gamma", "[", 
            RowBox[{"4", ",", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "Z"}]}], "]"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           SuperscriptBox["Z", "15"], " ", 
           RowBox[{"Gamma", "[", 
            RowBox[{"4", ",", 
             RowBox[{"\[ImaginaryI]", " ", "Z"}]}], "]"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           SuperscriptBox["Z", "11"], " ", 
           RowBox[{"Gamma", "[", 
            RowBox[{"8", ",", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "Z"}]}], "]"}]}], "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           SuperscriptBox["Z", "11"], " ", 
           RowBox[{"Gamma", "[", 
            RowBox[{"8", ",", 
             RowBox[{"\[ImaginaryI]", " ", "Z"}]}], "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        FractionBox["1", "8"], " ", 
        SuperscriptBox["Z", "5"], " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"6", " ", 
               SuperscriptBox["Z", "10"]}], "-", 
              RowBox[{
               SuperscriptBox["Z", "10"], " ", 
               RowBox[{"Gamma", "[", 
                RowBox[{"4", ",", 
                 RowBox[{
                  RowBox[{"-", "\[ImaginaryI]"}], " ", "Z"}]}], "]"}]}], "+", 
              
              RowBox[{
               SuperscriptBox["Z", "2"], " ", 
               RowBox[{"Gamma", "[", 
                RowBox[{"12", ",", 
                 RowBox[{
                  RowBox[{"-", "\[ImaginaryI]"}], " ", "Z"}]}], "]"}]}]}], 
             ")"}]}], 
           SuperscriptBox["Z", "15"]], "-", 
          FractionBox[
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"6", " ", 
               SuperscriptBox["Z", "10"]}], "-", 
              RowBox[{
               SuperscriptBox["Z", "10"], " ", 
               RowBox[{"Gamma", "[", 
                RowBox[{"4", ",", 
                 RowBox[{"\[ImaginaryI]", " ", "Z"}]}], "]"}]}], "+", 
              RowBox[{
               SuperscriptBox["Z", "2"], " ", 
               RowBox[{"Gamma", "[", 
                RowBox[{"12", ",", 
                 RowBox[{"\[ImaginaryI]", " ", "Z"}]}], "]"}]}]}], ")"}]}], 
           SuperscriptBox["Z", "15"]]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"1", "/", 
         SuperscriptBox["Z", "5"]}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"6", " ", "\[ImaginaryI]", " ", 
           SuperscriptBox["Z", "5"], " ", 
           RowBox[{"Log", "[", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "Z"}], "]"}]}], "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           SuperscriptBox["Z", "5"], " ", 
           RowBox[{"Gamma", "[", 
            RowBox[{"4", ",", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "Z"}]}], "]"}], " ", 
           RowBox[{"Log", "[", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "Z"}], "]"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           SuperscriptBox["Z", "5"], " ", 
           RowBox[{"Gamma", "[", 
            RowBox[{"4", ",", 
             RowBox[{"\[ImaginaryI]", " ", "Z"}]}], "]"}], " ", 
           RowBox[{"Log", "[", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "Z"}], "]"}]}], "-", 
          RowBox[{"6", " ", "\[ImaginaryI]", " ", 
           SuperscriptBox["Z", "5"], " ", 
           RowBox[{"Log", "[", 
            RowBox[{"\[ImaginaryI]", " ", "Z"}], "]"}]}], "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           SuperscriptBox["Z", "5"], " ", 
           RowBox[{"Gamma", "[", 
            RowBox[{"4", ",", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "Z"}]}], "]"}], " ", 
           RowBox[{"Log", "[", 
            RowBox[{"\[ImaginaryI]", " ", "Z"}], "]"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           SuperscriptBox["Z", "5"], " ", 
           RowBox[{"Gamma", "[", 
            RowBox[{"4", ",", 
             RowBox[{"\[ImaginaryI]", " ", "Z"}]}], "]"}], " ", 
           RowBox[{"Log", "[", 
            RowBox[{"\[ImaginaryI]", " ", "Z"}], "]"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           SuperscriptBox["Z", "5"], " ", 
           RowBox[{"Gamma", "[", 
            RowBox[{"4", ",", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "Z"}]}], "]"}], " ", 
           RowBox[{"Log", "[", 
            SuperscriptBox["Z", "2"], "]"}]}], "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           SuperscriptBox["Z", "5"], " ", 
           RowBox[{"Gamma", "[", 
            RowBox[{"4", ",", 
             RowBox[{"\[ImaginaryI]", " ", "Z"}]}], "]"}], " ", 
           RowBox[{"Log", "[", 
            SuperscriptBox["Z", "2"], "]"}]}], "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           SuperscriptBox["Z", "5"], " ", 
           RowBox[{"MeijerG", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", "4"}], "}"}], ",", 
               RowBox[{"{", "}"}]}], "}"}], ",", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "Z"}]}], "]"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           SuperscriptBox["Z", "5"], " ", 
           RowBox[{"MeijerG", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", "4"}], "}"}], ",", 
               RowBox[{"{", "}"}]}], "}"}], ",", 
             RowBox[{"\[ImaginaryI]", " ", "Z"}]}], "]"}]}]}], ")"}]}]}], 
      ")"}]}], "]"}]}]}]], "Output",
 CellChangeTimes->{{3.6205420993075047`*^9, 3.620542108674019*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"1", "-", 
       RowBox[{"2", 
        RowBox[{
         RowBox[{"Ms", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}],
          "/", 
         SuperscriptBox["z", 
          RowBox[{"N", "-", "2"}]]}]}]}], "]"}], "/.", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"z", "\[Rule]", " ", "z"}], ",", 
       RowBox[{"a", "\[Rule]", " ", "1"}], ",", " ", 
       RowBox[{"N", "\[Rule]", " ", "3"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"WorkingPrecision", "\[Rule]", "10"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6205420488678007`*^9, 3.6205420934237223`*^9}, {
  3.6205421603941936`*^9, 3.620542168362712*^9}, {3.620542219758444*^9, 
  3.620542223731365*^9}}],

Cell[BoxData[
 GraphicsBox[{},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{0, 1}, {0., 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.6205420787218723`*^9, 3.620542084072184*^9}, 
   3.620542116063188*^9, 3.620542161370706*^9, 3.620542220110148*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1240, 921},
WindowMargins->{{37, Automatic}, {Automatic, 2}},
ShowSelection->True,
Magnification:>1.25 Inherited,
FrontEndVersion->"9.0 for Linux x86 (64-bit) (February 7, 2013)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 128, 1, 187, "Title"],
Cell[710, 25, 119, 1, 38, "Text"],
Cell[832, 28, 4284, 107, 364, "Input"],
Cell[CellGroupData[{
Cell[5141, 139, 125, 3, 100, "Section"],
Cell[5269, 144, 189, 4, 39, "Text"],
Cell[CellGroupData[{
Cell[5483, 152, 279, 8, 66, "Input"],
Cell[5765, 162, 238, 7, 59, "Output"]
}, Open  ]],
Cell[6018, 172, 109, 1, 38, "Text"],
Cell[CellGroupData[{
Cell[6152, 177, 1211, 34, 118, "Input"],
Cell[7366, 213, 540, 16, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7943, 234, 3706, 90, 551, "Input"],
Cell[11652, 326, 1066, 26, 61, "Output"],
Cell[12721, 354, 25723, 471, 270, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38481, 830, 191, 4, 38, "Input"],
Cell[38675, 836, 178, 3, 38, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[38902, 845, 150, 2, 100, "Section"],
Cell[CellGroupData[{
Cell[39077, 851, 668, 17, 72, "Input"],
Cell[39748, 870, 711, 18, 87, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40496, 893, 506, 13, 38, "Input"],
Cell[41005, 908, 243, 4, 38, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41285, 917, 116, 1, 56, "Subsection"],
Cell[41404, 920, 2529, 64, 191, "Input"],
Cell[CellGroupData[{
Cell[43958, 988, 2597, 65, 214, "Input"],
Cell[46558, 1055, 63223, 1094, 332, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[109818, 2154, 189, 4, 38, "Input"],
Cell[110010, 2160, 199, 3, 38, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[110246, 2168, 123, 2, 38, "Input"],
Cell[110372, 2172, 3987, 140, 213, "Output"]
}, Open  ]],
Cell[114374, 2315, 1714, 46, 118, "Input"],
Cell[CellGroupData[{
Cell[116113, 2365, 2274, 57, 230, "Input"],
Cell[118390, 2424, 58608, 1019, 360, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[177035, 3448, 189, 4, 38, "Input"],
Cell[177227, 3454, 125, 1, 38, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[177413, 3462, 140, 3, 100, "Section"],
Cell[177556, 3467, 856, 16, 218, "Text"],
Cell[CellGroupData[{
Cell[178437, 3487, 1371, 31, 143, "Input"],
Cell[179811, 3520, 519, 16, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[180367, 3541, 1033, 23, 164, "Input"],
Cell[181403, 3566, 269, 4, 38, "Output"],
Cell[181675, 3572, 354, 8, 40, "Output"],
Cell[182032, 3582, 358, 8, 40, "Output"],
Cell[182393, 3592, 379, 9, 40, "Output"]
}, Open  ]],
Cell[182787, 3604, 2296, 62, 193, "Input"],
Cell[185086, 3668, 1184, 26, 38, "Input"],
Cell[CellGroupData[{
Cell[186295, 3698, 202, 4, 56, "Subsection"],
Cell[186500, 3704, 371, 7, 90, "Text"],
Cell[CellGroupData[{
Cell[186896, 3715, 120, 2, 38, "Input"],
Cell[187019, 3719, 612, 20, 60, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[187668, 3744, 425, 10, 64, "Input"],
Cell[188096, 3756, 1379, 45, 85, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[189512, 3806, 228, 6, 47, "Input"],
Cell[189743, 3814, 520, 15, 73, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[190300, 3834, 1416, 36, 205, "Input"],
Cell[191719, 3872, 21157, 355, 251, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[212913, 4232, 193, 4, 47, "Input"],
Cell[213109, 4238, 101, 1, 47, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[213259, 4245, 204, 6, 70, "Subsection"],
Cell[CellGroupData[{
Cell[213488, 4255, 972, 25, 111, "Input"],
Cell[214463, 4282, 259, 4, 47, "Output"],
Cell[214725, 4288, 10170, 334, 513, "Output"]
}, Open  ]],
Cell[224910, 4625, 776, 22, 80, "Input"],
Cell[225689, 4649, 155, 3, 47, "Text"],
Cell[CellGroupData[{
Cell[225869, 4656, 1607, 37, 142, "Input"],
Cell[227479, 4695, 2609, 52, 398, "Output"],
Cell[230091, 4749, 510, 11, 33, "Message"],
Cell[230604, 4762, 510, 11, 33, "Message"]
}, Open  ]],
Cell[231129, 4776, 122, 3, 47, "Text"],
Cell[CellGroupData[{
Cell[231276, 4783, 2401, 57, 298, "Input"],
Cell[233680, 4842, 2616, 55, 601, "Output"],
Cell[236299, 4899, 502, 10, 33, "Message"],
Cell[236804, 4911, 564, 11, 33, "Message"],
Cell[237371, 4924, 566, 11, 33, "Message"],
Cell[237940, 4937, 564, 11, 33, "Message"],
Cell[238507, 4950, 530, 11, 33, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[239074, 4966, 2421, 64, 392, "Input"],
Cell[241498, 5032, 130217, 2221, 417, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[371752, 7258, 197, 4, 47, "Input"],
Cell[371952, 7264, 129, 1, 47, "Output"]
}, Open  ]],
Cell[372096, 7268, 420, 7, 113, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[372553, 7280, 119, 1, 70, "Subsection"],
Cell[CellGroupData[{
Cell[372697, 7285, 129, 1, 55, "Subsubsection"],
Cell[CellGroupData[{
Cell[372851, 7290, 1353, 34, 120, "Input"],
Cell[374207, 7326, 34182, 1016, 1427, "Output"]
}, Open  ]],
Cell[408404, 8345, 711, 21, 80, "Input"],
Cell[409118, 8368, 532, 9, 113, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[409687, 8382, 145, 3, 55, "Subsubsection"],
Cell[CellGroupData[{
Cell[409857, 8389, 105, 2, 47, "Input"],
Cell[409965, 8393, 1162, 42, 85, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[411164, 8440, 688, 19, 53, "Input"],
Cell[411855, 8461, 649, 13, 70, "Message"],
Cell[412507, 8476, 598, 12, 33, "Message"],
Cell[413108, 8490, 649, 13, 70, "Message"],
Cell[413760, 8505, 598, 12, 33, "Message"],
Cell[414361, 8519, 680, 13, 40, "Message"],
Cell[415044, 8534, 885, 16, 62, "Message"],
Cell[415932, 8552, 698, 14, 33, "Message"],
Cell[416633, 8568, 651, 13, 33, "Message"],
Cell[417287, 8583, 672, 14, 33, "Message"],
Cell[417962, 8599, 689, 14, 33, "Message"],
Cell[418654, 8615, 395, 11, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[419086, 8631, 547, 15, 47, "Input"],
Cell[419636, 8648, 14641, 248, 353, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[434314, 8901, 291, 7, 47, "Input"],
Cell[434608, 8910, 11530, 197, 351, "Output"]
}, Open  ]],
Cell[446153, 9110, 718, 21, 122, "Input"],
Cell[446874, 9133, 782, 22, 53, "Input"],
Cell[CellGroupData[{
Cell[447681, 9159, 299, 8, 47, "Input"],
Cell[447983, 9169, 16721, 281, 362, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[464753, 9456, 135, 3, 55, "Subsubsection"],
Cell[464891, 9461, 1769, 44, 192, "Input"],
Cell[CellGroupData[{
Cell[466685, 9509, 575, 16, 53, "Input"],
Cell[467263, 9527, 6693, 173, 463, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[473993, 9705, 875, 23, 88, "Input"],
Cell[474871, 9730, 438, 13, 360, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

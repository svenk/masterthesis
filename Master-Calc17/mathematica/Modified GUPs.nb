(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    451501,       9456]
NotebookOptionsPosition[    447417,       9319]
NotebookOutlinePosition[    447806,       9336]
CellTagsIndexPosition[    447763,       9333]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Modified GUPs", "Title",
 CellChangeTimes->{{3.613378869879654*^9, 3.6133788782352247`*^9}}],

Cell["\<\
A clean worksheet for Calc17. And extended for corrected compations in \
Calc18, until Aug 29. 2014.

This worksheet is documented in a german-english fashion :)  It covers the \
complete discussion starting from the T00-Integral solving until temperature \
calculations. In the later parts, most computations are done (or at least \
supported) by numerical predictions. Much code is not so well documented, \
just ask me for details.

-- Sven Koeppel @ FIAS.\
\>", "Text",
 CellChangeTimes->{{3.613378880859269*^9, 3.6133788850509977`*^9}, 
   3.613378959216144*^9, {3.618296195797141*^9, 3.6182962834952908`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Die", " ", "neue", " ", "Wahl"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"V", "[", 
     RowBox[{"q_", ",", " ", "n_"}], "]"}], " ", "=", " ", 
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{"1", " ", "+", " ", 
       RowBox[{"q", "^", 
        RowBox[{"(", 
         RowBox[{"n", "+", "2"}], ")"}]}]}], ")"}]}]}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Die", " ", "alte", " ", "Wahl"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"V", "[", 
      RowBox[{"q_", ",", " ", "n_"}], "]"}], " ", "=", " ", 
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"1", " ", "+", " ", 
        RowBox[{"q", "^", "2"}]}], ")"}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vSide", "[", 
     RowBox[{"q_", ",", "n_", ",", " ", "side_"}], "]"}], ":=", " ", 
    RowBox[{
     RowBox[{"q", "^", 
      RowBox[{"(", 
       RowBox[{"1", "+", "n"}], ")"}]}], " ", "*", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"side", ">", "0"}], ",", 
       RowBox[{"V", "[", 
        RowBox[{"q", ",", "n"}], "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "^", "n"}], " ", 
        RowBox[{"V", "[", 
         RowBox[{
          RowBox[{"-", "q"}], ",", "n"}], "]"}]}]}], "]"}]}]}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vEff", "[", 
     RowBox[{"q_", ",", "n_"}], "]"}], " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"vSide", "[", 
       RowBox[{"q", ",", "n", ",", 
        RowBox[{"+", "1"}]}], "]"}], 
      RowBox[{"HeavisideTheta", "[", "q", "]"}]}], " ", "+", " ", 
     RowBox[{
      RowBox[{"vSide", "[", 
       RowBox[{"q", ",", "n", ",", 
        RowBox[{"-", "1"}]}], "]"}], 
      RowBox[{"HeavisideTheta", "[", 
       RowBox[{"-", "q"}], "]"}]}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.613378948417225*^9, 3.613379058863851*^9}, 
   3.613379096998528*^9, {3.613379162143272*^9, 3.6133791909135647`*^9}, 
   3.6133792816318083`*^9, {3.613379889065146*^9, 3.613379916942294*^9}, {
   3.613387059012801*^9, 3.613387092987187*^9}, {3.613556015591258*^9, 
   3.613556016668427*^9}, {3.61829623749219*^9, 3.618296238608848*^9}}],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{"1", "+", 
   SuperscriptBox["q", 
    RowBox[{"2", "+", "n"}]]}]]], "Output",
 CellChangeTimes->{
  3.613378954888023*^9, 3.61337905938739*^9, 3.613379191820093*^9, 
   3.613379282003701*^9, {3.613379905730218*^9, 3.613379917556305*^9}, 
   3.613387094251566*^9, {3.613556005558282*^9, 3.6135560217480097`*^9}, 
   3.613556062380074*^9, 3.613627113383654*^9, 3.618127657493232*^9, 
   3.618156163782442*^9, 3.618204372684043*^9, 3.6182050793652143`*^9, 
   3.6182387006678543`*^9, 3.618284064565322*^9, 3.6184080230253963`*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], "n"], " ", 
    SuperscriptBox["q", 
     RowBox[{"1", "+", "n"}]], " ", 
    RowBox[{"HeavisideTheta", "[", 
     RowBox[{"-", "q"}], "]"}]}], 
   RowBox[{"1", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "q"}], ")"}], 
     RowBox[{"2", "+", "n"}]]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["q", 
     RowBox[{"1", "+", "n"}]], " ", 
    RowBox[{"HeavisideTheta", "[", "q", "]"}]}], 
   RowBox[{"1", "+", 
    SuperscriptBox["q", 
     RowBox[{"2", "+", "n"}]]}]]}]], "Output",
 CellChangeTimes->{
  3.613378954888023*^9, 3.61337905938739*^9, 3.613379191820093*^9, 
   3.613379282003701*^9, {3.613379905730218*^9, 3.613379917556305*^9}, 
   3.613387094251566*^9, {3.613556005558282*^9, 3.6135560217480097`*^9}, 
   3.613556062380074*^9, 3.613627113383654*^9, 3.618127657493232*^9, 
   3.618156163782442*^9, 3.618204372684043*^9, 3.6182050793652143`*^9, 
   3.6182387006678543`*^9, 3.618284064565322*^9, 3.6184080230279408`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"vEff", "[", 
       RowBox[{"q", ",", "n"}], "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"n", ",", "0", ",", "7"}], "}"}]}], "]"}], "//", "Evaluate"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"q", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Riffle", "[", 
        RowBox[{"#", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Dashed", ",", "#"}], "}"}], "&"}], "/@", 
          RowBox[{"Reverse", "[", "#", "]"}]}]}], "]"}], "&"}], " ", "[", 
      RowBox[{"ColorData", "[", 
       RowBox[{"9", ",", "\"\<ColorList\>\""}], "]"}], "]"}], ")"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", " ", 
    RowBox[{"LineLegend", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{"n", ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "0", ",", "7"}], "}"}]}], "]"}], ",", 
      RowBox[{"LegendLabel", "\[Rule]", " ", "\"\<n=\>\""}]}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "1"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", " ", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.613379078777478*^9, 3.6133790898695717`*^9}, {
  3.613379203734962*^9, 3.613379242599251*^9}, {3.613379272996147*^9, 
  3.613379331333753*^9}, {3.613379868872353*^9, 3.613379893365645*^9}, {
  3.6133799341359777`*^9, 3.613379950852766*^9}, {3.6133870998617*^9, 
  3.6133871138380623`*^9}, {3.6133890807690277`*^9, 3.6133890875720243`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       RGBColor[0.9372549019607843, 0.6470588235294118, 0.6431372549019608], 
       LineBox[CompressedData["
1:eJwVl3k8VPv/x6WYQrTQxU23iJAKRa4tpQ2tlEsRpc2WuFSUSBelrxTZXQxC
3EtRUclrKomfSox1zMyxj3XmjH2L37l/nMfn8Xyccz7nfN7v1+t1PmfDOS/r
C6IiIiI/qOO/0aXwkWBhgcZ40VFisn07E7KzimpGczTGN4uu8RQ9Jir2P3W4
NkVjHK1YoUMzYEKN+6Z6iKQxMma6tTnGTAxIdWW2dtAYuWrx9lH7mbjqpmdX
/InGsHfadVnqFBO3VVmMi+E0Rho69rjdYSIpWSX6mzSNkUUcVn5Xx0Qacc/r
+DJxhq9ZsLV9eAPW/LA5qiEnxjjtoNV637ARVcds9taoLmH0W5ZsjBltxEEN
VV8V5cUM1/pVA5JfmmBY4JBdu02UoVLqkf44rhkzERdX62osYribaTRZhrRg
fDIr9swmEYbYjPAg789WVChH7yj3nMdj+mTWEkcWjMSCijefn4N78VPVf5za
8MRs587dgTPIKM+RbbVmwyXFrmcgbQrNN0I7XEw4qM1Zt2xR0gQGXur1em7l
wnmYscg3egJaI/5jlTpcjOi6zPRGTCDoGS9wnR4XsuU5g19vTiDcUH6syogL
uwbt7wmOE9jYnLVM0oKLThHzGO0NE4DK3zlmLlxM2F9Scs4dh9Pk2xV/xHER
nrZsDTN9HHVtSQdvJHIh35MvvT9xHDXrI4PjU7gwukoubI4YBz2FRdRmcBEc
5t856T6Oiq36PZsKuZAofpATtW0cCx+azLy/cLFO6rkOXo9h0nK6yGKCiyvd
6uyogjFstm90c5rmoryMHuacPYb3witKPnNcOHrGtC2KG0NwU5T9Q1ECKd+v
he71GwNH668AujQBhccmrdXbx9DxU/2ZlhoB2TU1wQ3PRxGr/Fopx5rAeb75
5qe5o7AsdTA9epLAy8qyRr/0UYSmxgeO/kHA5nqB5i+PRlHiWvK7tiOB6JbH
DfZeo8gu4zD9LxGQSbZTJ7aMYvvAly/7bxKQWN9b2583Ap5o1p6oNALslKU1
7RkjcI13p2XQCfyrsLmyOWkE9RWZq59nEji2+mrZ54gRFLxobX+fQyBOfCaX
7jYCNk3vbFohAeXh5SH2miPg5p/29CknMOaqHXhMeQQyRHaWHoPA517rGwcU
R3BmzjZh9AOBy+3xV/QkRuBmlf3I6TOBAuaG0ysHhNCebKqYqCFg9FZvR/Uz
IZxj/pJTbCEgtdNuG4MuhJ5+dNlfrQS4xQGaJYlC3JYYu9/PIhDyL9Y/vS+E
+cnMq3QOgap0i+V3XIVIlHllX91JIEnJY+mNs0IkCUp/W9JNwD3p4WIveyEU
aZ/KDHoISD9hTjtYCOHleNEmikfgRLhjr4GGEJWCDw3kIAG1JcEd2zYIEXBg
g970EIHJ4Ay2moIQF2aPKM4OU/MH8OpllwlxvFDBYlBAwGNy2XfJRUKIaiQH
tpIETHy1qkWnSdD7iqU+CAm0e3qD7CNx2kUoc2uUQNFAzFteO4l755KvHB0j
cPfS61fcFhIzary5X8ep55+dzf9aRUJzZuBW+gQ1/4nQhNxcEnWPXjafnCZA
n3+7XZNOwkGlxphHcVMu+T0/kUShwr+XfWYImP08LVYYQaJTyoH0myXgl/M4
XfsuidexTb/zKc47/sWo6CYJhbjrqs5zlP6ydX1eeZDIMFYp1/5JwOLY5eU7
L1DvtzzaLori2zN/55Y6ktiUK/DiUVycxTQ3tCXxSbV5xmCeQN+RZcS7IyRO
uLMEdylWmjYNMDlAQl89ZF8VxdaZvnLYRULQcHhEbIHAvcN5z80MSKwqKh4y
pvj9JGH1UZuE0Zf1mz0pHqHL8cw1SOh0TmXGUbzpkFXI5w0klsfFHX5DscNE
sNIBRRJxhlbrGil+nP66tGoViWeDZ6QGKK60HLKxlCTx/t4K6SmKZ8c2CGoW
k4h5GauwQLGzaaFs8pQA0w2Kqv9xTbSiVWq/ABmrPqn9d70+L/QOnSWAln2u
7H/zpRsJS7JqBDj4R1t3A8USjxz4OWUCdN92iSyl2Lf7y8b8fwWIEdu1JJZi
rsH20wWpAsj0nNvlRvHByNTHL6IEqGp7u8OA4qKOZVUvgwUo9tRgzVP1Wavv
N1/iLcCKnnDVcorDItp3vDsnQIhNttQ1ikmulXu5jQCqMVahahSf2l5C/7BX
gNoDeqG1VD8qwpVbKvQECGr/RdSb4q3sSOkqNQG6ElKFEhQnaE/vrflFgJ8B
7hZ/U/32bK19UTfNx6FJnaX5lB5athj1NQzw4Vy++5QaxXtCste1tPFxeHnF
QCKlpzWbAx9w3/MBDi/FldJbcFDfh44CPmgnbJ99niIwwLSZ6k7jQ293XbUC
xeW3NC8M3uHj3XrltXmUftXrYpP5PnxcVL9l0EvpO1p1Ub3QhY9zLQMmihRf
/N5sOrWPj5rMvBZXyh8/lM39ZvWp+8/utAsdIWB4vSB/fhMfq+WOxSZQfpJZ
HyovJsGHcdzva7Mp/wX4kkeWzg7DQG7+aDqfQHfV6VDJoWG4juvJRVN+LfXW
HVn5fRjr5v7a5ED52/kTUbMuehiG/da693sJHDCZusC5M4zFWvzTylQ+bC1Z
IZLiPYygbX9ue9FFYC5v9w6F48NQi5BMKmyn6hmdmbJ6xTDSHvyvawuVR0FS
Zfr1C0NIqej46EPl18Wwhh+PBEMQIx80/dNEYEeAmJh07RBcPm13EmFS6zt7
yXPpwyHkyccdV6Hyr6QtiPYlcAiD+nnbVlQTSD2ZQA/1HMLzqKhqYSXlf4vq
RtHDQyDIotHojwSW6mw2/Sk5hP37t/xp9YbAbhGB9Mj9QSRb3LgfnkXVO4D2
7Ln/IKZMsrtLqXxfMfabuZcrdT57vyg3ldIn79j1oYOD8Hq6Zt/iRKp+tUVE
L20QYbes1Ev/R+kz9drzttABHPCimb33JpAoH2WZ5DeA7yJvdqhcofofndNt
d2EA3w6d7bvpRuBIWIt8094BsCP9LcVcKD14Gt75sXgADhVbNa7ZUN8Lk/nj
n+/0oyyJ+eKDDrX+lSZaiT79oFlKH0rYQuVL701xT5d+NMXWep/TIMCKmn4r
u68fFny6et16AjGdYyrnl/bjii0da2QILLk3OC4a1YfI1pQL+v1cFDlo/mgK
6sOOn3J6u7qp/YWOa17e1T7c7JV9YUhwUcbqPWNt3Yf6fpdryxq58NvS+YUu
14fLpX35Sxhc9Na3JJql8HAkknnpQgwXT3J+8ZWN5MHHR8wlOpKLPbdsj/QF
8uCxUKz+IpyLVNUG0UdOPPx8VMv6dJOLP27UuhPKPCQ5tR8ypvYjVUqVJref
9cIuyX/BYxsXzy4Xd7x73QMZn9ootzIOGs6l/WaV3YPJvau+ybzkQMTxgSMr
tger7xcfyMjnwPa4S+uUbw8q1u4peJjEgajh6jq97T2UPyOt717n4JTkn4zC
wm6I39qS9XULB6FiTvOmad0g6VdumWzk4PmCpfH3h93wMG8MSFLkQHxMuXTI
sxs3at4+ladxUMSuL9TQ6saHlQ4tKgQbEgW6aZm5XfD3i1986QEbernrOLoJ
XRDP6bWLDmbDOUPi14/hXWhhx1Tn+rHxOq4zrv1iFzILU8rinNg4FxT9UEm1
C4fOF2v66bLx9thIYDy9E/tKLP22NrTBbfSFw4OkDpBy1xdr0tqQqC80uhTR
gUv2pgmsaRaq/LV/NQ/owGL9MnO/IRZURQpbZ+w7cHyjUsHlOhbapf6xdVPo
QH7LupD9SSycVMs+ZpHQjpCKM+sbNrFwp2jHfWktKsc52tZ8nVYqf4sPVEoS
+NU6Le/rhlYYQ0f89iAX8eovm2NWtmKiZuvd4TwupJmbo9lkCzx61AO/anCx
ftPwR9uCFtjJK3lHbOJg7o5ZaN/GFmy9LWYvrtIG64DaQCeRZii+/RHft6QN
l1P752L5TRCbSG76v14WLgS7N5ewm8D21D0RlcfC9EeZlPelTYhwdDoqr8vC
XGPd6TqvJvCM3+zT3N2KN5VBMoqsRqTPeugecWpGdih/g0laA1b7N0jGJTPh
9kp7L3uoDlML0ysFAUzY6oQUrWmoAzfsN/mD1H9C6cyrMMN3dch94rZxRp6J
l87hGab362D6XMTkTFw9Tio7hxlurIMrT+uK2uM6hKxVEF9p+wO38yXonstr
ERGkUv3E5huaz3toFnZVIkei/tTarZW4HqD5sDq2AMd8eixG/AvQFF4588PO
CapT6X7V1Pj/usGkaA==
        "]], 
       LineBox[CompressedData["
1:eJwV1nk0Ve0XB3BjN8TboBLvW6Gk0CxCvodUXq9SGVOkQVGKJKTREJJK0qCQ
IZkzNshQGYqkcHAN1z1lHu+9rinz7/z+OOusz1p7rfM8+9l7P0f+uPNBeyEB
AQGKfv7/Tr6vSbzcmIbXiit9z8uk4Z6jd72dz1d438wtmiz4gsAKwTfthV/x
/Zo5K374C3zUfB46TH7FPXfGrS0qX+Ex6LPfxa0MMlMpcX+efIXdZb9vN06V
44xestQqlzJsuh1QGGVUAd7TF41Vst9Qm3j3FWvhT0h9T9q/yqoSksPG2qkH
SLDbbZiJOdWY37T5hIcribqggiuvKqsh/Unmjv5DEkVF86zudlZDNri9qaGW
xEmJ6x5LZGqgvOqql6hVLYKTN0dKe9VA3ywl19a2Dvq79fjZ20m454hpLjjL
xIDMunkqCbW4/Ix7lHWHiRP1ESbbCmpx9WZdQEIqEzs8fI6uJWvhaxzD3MFh
wnO4veLLTC1C2jU9zlxowJq6FVpsszqkSDu8LfZoRO/nZvcrU3X45fZlq7tf
M67nEJa225lglYnKJr5sxgt72xFhYyYa/t4121jSjLy5pcKhtkxUlRSX7xBl
4ZiEs9dpXyY+SX+2FfVnoWf6seyfCiZe5OQFhgW0QHzWUT3bqgG2wxmsrCAK
GyRfT2XbNcLakPe5PZkC30yM7+zSCPOIDQlLKihUnNggvPhmI5QUmJoFor8w
vjfpmeyLRiz/Zi4sv/sX9JolwqRZjZCSNX3a/eUX1Kju3xUHmsDJ3VvkUfYb
YoYjyx6oNmO12Fe3K8zf0M3VOB+v2YwjVsSaG52/YWNbJZBg0Ixvo5uD/UVa
EXbrvrjrkWbEb5GxeES04rp2BFP5Dh2f1tqT9b4VwvZ+pEIHHR/tsYCT2Iao
D43sJ3dYEOTxigfftYFpoOft+IgFTZxxH/nSBuFN5VVrX7DwquVI81R7G76b
z0lyz2LBW1Y/XkK+Hb4RxyP1G+j4sHnb14a34x5lkv16ZQteBcTYnbzdAb/p
hx6b41tgl3kuPTW8A4l1+z3D01og27x9ZjipAwJPRkQ4b1pwb33N81vfOnDV
sXaO3ZcWuNcJMV9JdCIu3SrEsbMFuxVP7u2524mPAnld8opsCOzdGLEpqhPW
Fx+UOK5j44P7VO/l152osV+1M3oTG+u/hQWK/+yEYonH2UawseRCabHK/C6Q
4nNNrx9mo7NQSet8aBeGxxXJmPtsRHfzA9/GdiE8NkSQ9YgN64UfmTNZXYjK
ntcrGsHGD3vLS/fJLmy6orthbSIbb+cFZmRId2OLn5tb+kc2/K17lIYed0Pg
lu+mb31sEH5vLmkndGPsrs+muYNsTKR5l/i+68bTG4+ENEbZOC8oe1y6oRva
mlo2pwUoWCQaRaov60Ga7q4GaWkKq0dTFnk+78G+Pb2DmZoUZEoPKKQk98C7
K7g1T4eCeNjYRnZuD8YmHPxzCQq8TTv3GTT04B8n/vIQQwr555oC5y/uhbXN
UulUSwpmHXNnEu/14pg0VzDlIoU9Oa/nsSJ7kTz+IGTUnYKWr5ncX2m9CM60
TN3mRWGlfLTmpYpezH3Z9SnsJoW+IxoX9eb2oUOimSwPpuBTa9/d6N2Hm1Sq
hmIchUtxEmPzHvQhO1eupiCegoNrpigR3Ye0YNb3vYkU9s2fVnhVSMf3L126
L43CMuMwG9fJPqSrLTxd/ZbCPDktp3jxfpjPtDnJ5FKY6aG8Gpb140hs4Xbz
PArtASpPdTX7kXBz3+GMjxQyiotqxC/1QzR75wrOVwpxoQ6/d/j14/KgwMf2
cgqPj0nxXB72w6TkbFA13YdXZw9JMjP7YVY9Xnf3J71/7cE9cZx+aEU2h4fW
0/sXf2JRP92PeN7qQe0GCqqNOvZikgNQy3pa39xIYaFHoI+zygBcRIKvzrIo
sLNWFGg7DKDS9aM/s5VCpabrOgWPAQQNcCo3tNP5Lyx5Mtd/AAsM6mxudFB4
/s3RtS5uABmVnn4i3RSC9udTeVkD4JVc3qTVQ8GrXmpv7OcBzC7KNT3dS8Gq
NXuNMzUAhwy5VYn99Hod5jwy59Dfa9nRnTdAYRvHSkhnegD6MhF7v3IoSE9M
s+bKcaDKTV5TyqNQvcAwNNaCg+LnVw1thyl8evJsNtCeA+VzSrs3jtD5+2fA
ydmNg5EV9toTtO+tDd2jE8qB/DElDfcxCtfS23MUYjjwc6g7qPyHgpO6hoJY
BgeuOq4hNbSN9FhTdZUcqNxzev7XBIXtX9efyWdxsP5s+rVY2sp7vZmxfRw8
qExOUZuk65ckDW5PcBC2OG9DJm3GIaUsZzEuTmVtkVabojDK9lxhIcNF0Yqj
J2Jod56sCNZZw8X3tutrpKYplLi4nBbbxYVVhptGNe3s0aJarikXnl3RT9bM
UIi9uli//jgXK36ee+ROO1TIIT3/AhfRojytQtregR/+jrvJRdDaLaEztF2k
JINu3+fifMP2eI1ZCnZhR8eco7goTJu+5kjbRDbrpEUaFx16zkphtHWjRWp0
8rmwXOue+I62mpIlFCu44A/xJGtp/52alCrWxMV+1Td2PbTnbZ5axuum4y3v
J4/Rnny3L6B+jIvfQ/ojM7RHovZ72Qrz4O4VZDRLe+D3eEa1OA9bbZbm/KHd
viquy2AhD18Yodp9tFmnjZe/X8bDHSq8t552bfKImYo8D6U7S7/l0a4YiLoT
pczDwN2YjnDaRRsNixZs5GHTwmyDC7Q/XBz846fBA2fFpUE92llvn234o8vD
aSHrEQnaSeM7T53dzUOgYMWhn3R+onUGIth7ecg8rqwcTPvpjcfkAXMevjmW
O+rTDimCeOkRHmA9tYZPn0eAaA+heZJev+ccp+e0rxuGeqSc5aFSbBV0abvf
0X69/CIPvlaByU30+Z7/0d7+wIuHqCybdy60Ty24JyfqQ8c7lZ4XoG3+5Fdg
XwgPbddeCkrS9XJvT7akYDgPoxdsrl+n66ts7FbokhgeVDWcM7vH6f61UonQ
y+Thr30mDgl0fV6cO7PSMpeHK/lMoSm6nlPfV8U7feZBT0fN+1/ay5e5pz+p
5iGyVsXiJ13/luWGW9MaeXA2VS1m0A65LJdb9JvO57tEYjvdP8JNn4oGBnlQ
r9EJD+BT6H4mUb9z4SBUJ7cP1dD9J/8f2/qQ7CCUnZhL6uj+tJ7MoM4rDCJ5
o1BsFd2/3w9b9IRvHkSCXMyyHLq/M/+OmeIeHES+QvkbtU66/6O2KUY8HERZ
+8X3w810fe8TS8x8PohT3Dat0CYK/TPNql/jBnFPfLR8LT2PbI96b+NnD+JD
Xrz6Hnp+7Vz5/V/D2kEIr1O20Kmi6y/2mMuwNJ9eh46aTDGFXQe3joj9w4eo
43zG4c/0+QgxvFas5qM6vsH/KT1PecdTfY3U+bhlLBEpnE+hTnHscbQ5HxHW
LQrPcyhExQcXGD/mo/Z43inmSwpuysaxzEg+6m4E7+yPpfBvikTA8Xg+bvo3
8KeiKQxnBO33zOEjpsq3fUEkhf/yA9viavg4W1FFij+i8KfGT2xSagg7/11a
qutH4YDANfOkgCFobtzlyDpKQclXR2vr/SFIexHHPG0oTIlOLf/4eAg65Rnj
8w9TSJS40l0bP4T9T18ralrQ98WSy1cESoYgLP1W4KgxhWS1SzGWAsOYX1/V
t4i+P0UOnxsQvTyMYsUXHnqSFOT+s1i5xXsYKqMWhYQ4hc3aMLW7PQwuKcjW
YdDzQG5B7ofwYfQeGf+sIkihoDnHz/nDMOR2D/1oH2bD/ciUXOPkMO5ET18s
b2ajx+aOUer1EcR29zX5J9D/C3ZJCQf9RmEWdTtnjiYbbyRlbcac/mCP0PrH
XeYtUHom380wnkAnyvQPnmVhwt1vOsV0CmafogN7Tjejb0JOKlFzBtn/Racu
92hC9OmAWjlFAYIVUaAzTv/nhuh9D162WpDQFO6ckPRvgJRzin7xYiHidkGP
pVsaE4UG7wveygoTjHVGp/Qr6zF97ug2CykRYnzb5nMac+ohyKgJV5kWIaqM
PQ2SjOuwzdC1yEhgDuHtFbn1x91aTLBSuxfz5xBWHooiqh0kDJzKQvaOziEs
BLSVTFpJ3J1s07w1MYdYFjQx4kqRWCkrd3tYiEFs+MCMzG8kscfy9lpyEYMw
ia8Rt/pBIqza/kyIOoNYVNOhkf6OxPovy/vFLzOIxa1bK1uCSHiaa4XpX2MQ
Xgf5VksCSXxuN9fx8mYQZT5ud01ukTATvhvcc5tBRNor84pvkLhCTKqWPWMQ
HRdHnuS4kSj7wDx3K59BBPoZ7ntjS2Kh0dDigk8MYn5wkumfwySONEoVDpcw
CGHLA7Pah0hwx3ZJnaxkEAc6aw1LTUksUc95rc9mEB/DDKMpQxJ2JT8tvFoZ
hFHgVXLNbhJJpn0zmZ0M4pLc2xSXnSR0XBVM5LkMIkc93EhEl4S/oO6Y1RCD
eKHDn2+iTaIq5NCLkDF6v23pV55pkpBdeWlP2SSDqGQnBXWqkziRHsKdnWUQ
mb/f7diyhcT/AIlmQfI=
        "]]}, {
       RGBColor[0.6470588235294118, 0.5686274509803921, 0.611764705882353], 
       Dashing[{Small, Small}], 
       LineBox[CompressedData["
1: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
        "]], 
       LineBox[CompressedData["
1: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
oeFmVtDUv38UqsW+3YeVn9PwPz3XcE0=
        "]]}, {
       RGBColor[
       0.6745098039215687, 0.07450980392156863, 0.043137254901960784`], 
       LineBox[CompressedData["
1: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
        "]], 
       LineBox[CompressedData["
1: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

        "]]}, {
       RGBColor[
       0.2823529411764706, 0.21176470588235294`, 0.27450980392156865`], 
       Dashing[{Small, Small}], 
       LineBox[CompressedData["
1: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
fuH3x+YCsYHzJmZgz99evN7wyf/z/wHoHWcC
        "]], 
       LineBox[CompressedData["
1:eJwVl3k8lF8bxi0xRYmKpEKS9KPIUpLmmiRlLaRsWSppEyFSWbNvJSUKZcua
bGXfFVH2sa8zKCHbDJLlnfev5/P9nOd+nnPu+7ruc86eKza6lixMTEyXmZmY
/v9MORTntLHwCupesnR5s5eeiHwQTW8l20JLrhvvo+ZO9HXd/Bir/QAjqt83
e2vzEkWOH7lpU+MG1/Dqhi3CUkRZbY9QwXdP4PHWXrFnpzKR7Gp119vEF4VB
TKbDB3WJTh+1NCb4A1EYKLhru4M5UWBQVlyPHIK4+hBu7pe3iabrg1n6zoai
j5a9w7fuPvGjMNM97v1hyD/HfnH2jjuR6Zj9wCm2lwhsC1szI/sSdXRGtZyo
4fCblPltWv6MGHfTsDi1IgIcFCFLqclw4pzH9//6377G6XON5cZpMUSV14jk
cY3CbRmL0I5dCcSX2dmE0yYxmGv+Xlk5mUK0H9lyXGn3O5wIOPZHxjGTGHVP
c1Z/Yyw4lY93ur3NJVaveKfY/IvFlEN4CadvAXHCv8zc/3ccLEhO94jKZURe
vr/b47viMXZufqV5rpJIjJNpLK5NwMuAIU3Hmq/E64fu+LTnJcI+QsLUUbye
GFKYeGL6/Xu8+HBJ+SdPEzFPdYC2ITwJhqUp4T7UFuJgC3/6Xu9khBXfsznA
3U5cb6Z79YRDCvo7pncdeNtFlB4PFLh0NRVrdeLL+yP6iIZOX5ptddOwqmJa
5Mc8RPRkXfMLOJmOG2uWzJscqMTUpwqkBOkPOCliGTqwf5S4rvptMUEuA62h
I/bGlmNEs0X2Y7ePfsTit7KQ5KUJ4mW+PCOr3ZkwtDQTojhOEwMyf/PveJuJ
4JUHx23iZol56oIddcJZYOFUGJRkpROHh3VePo7LwhJtfbRl1AKRuKOAZzAx
G+LRhC0z3ivE2zkTjaH7c3BBZiUj7S4TIrSEQ06l5KBe5Rnt4wkWfPmpp0n/
Lxduaxo9Y4fXYdbDlyMpPRemW0L91bXYIbSrqNbg0CdcWr5d1xi6Hpqf//hw
ZH7C+r23N3kxc+L9b33WuzmfsT+xTPWePDdavfwrhOTzUBJ40sY2lwdMQiVu
zZ/zsL3PX9JYaysOFkyfeKKQj09/+M9fZOaFkZ7oslxhPti3ri0HNfPBd/JS
4ejxAoj15iZJl/Ej1zfwQURJAYJ/TvE61wtgc/Es7V95IS4eGvw1ryIEpYti
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
        "]]}, {
       RGBColor[0.8627450980392157, 0.5215686274509804, 0.34509803921568627`], 
       LineBox[CompressedData["
1:eJxdl3k4lc//xi2hZFcKRcgaWSL1EakkUrbsEaWSrSQqRWUXIkuEsrVQ9lSy
PfeRSJZIZMl6zrGUsp5jLX3P79/fXzOva55rrnnec9/3zEicuWR+joWJicmH
mYnp/1rnovtT//5xkNbZVu7sPd6JDSsiMlp/OEhDW7T5FM068UH/mf3VRQ5S
ieAe+i2LTsgMlH/6Nc1Bcs+2b5I92YmfXJQnPcMcJGW2969DL3TCy03DprSW
g9TQ0TDoHdyJW9K9pPPhHKQJPc6ajRWdSE2Tim/h4SDVPsWHZIVvyBiMuGS2
jp1kHMN94uzOLgi1nTCR38hGMvL+JBa9uxsNpif0mqTXkEhvKh12mvbAQF7a
R0qSleTpwP10XXov/iu0f96qzEJicctVUpj7juXI84Jq8swksXxx170R/aAv
PH1wSpaJ9PJabwrnvkF8kIxXJzxXEThBEj55YwhabLdLd5z9g4Tbgrst/IaR
qKupeSBgGYO/RJvmLpLBWj/V3+S7DNV5NeZSbzK8jXJDrC4uw7N7Q/Hlq2SY
WQm3uzsuYzoh/vTvADJ4PFY8kg4sY0hl1+X+aDIikpE9wbYM1tCkhdSXZPhP
HuFJillC8iDvVYcRMiauML3ZFr6E7VmPrv0bJ8Nu6d3JvNtLeKbmKJz5i4y9
axRekLyWYGIosLV/jox5YS69CfMl9CUwax9mocDrcJuf7qYlkCVmTerFKHB+
ZDPyM2MRfyo6ZI9aUXD/9Zj21+RFTJfEnV60pYBovppUGbuIgnMn4p84UCDy
N/FI9O1FEAXx6dNnKWhz+PJCyXER+tfCSM5XKNARP3rRS2wRLK0C9zNjKRDO
1lqgP1rA3/OG8qsfKNCvaDQZSFyA2fnb73Y0UODTbptbH72A/du5N1o0MeZj
uW6b7L8APuYpSuIXCsKcX1fusV/AmdWN9zr6KaBtV7pzU3QBDbcVFvfQKZDU
rup2FlyAyV87/XWLFJhaGqkeW7+AY2P+/9qXKcgLdSVvWZlHwHZuc3MmKs6M
PtMjeuexj/fSx7+cVLTmiK1jTp2H9YfBrBkxKpx+k5h94udx59nc6+0SVMyq
OS+PRs4jXILruakUFRuInInmm/Mo9T/wMV6WCpsOlc8PHebxMSA/oFqZih/C
X+vXW82j/rjC8mtVKm44+uKW8TzYuO+nPN1FxeOf5cVn989DzvzzoLsmFWSm
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
+WKDFuZWsGHiYcmQolf9f/4fApHThw==
        "]], 
       LineBox[CompressedData["
1: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
ZG7TIukefQr+B119nTU=
        "]]}, {
       RGBColor[0.09411764705882353, 0.08235294117647059, 0.2901960784313726], 
       Dashing[{Small, Small}], 
       LineBox[CompressedData["
1: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
+P8ADivkWg==
        "]], 
       LineBox[CompressedData["
1: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
hQ==
        "]]}, {
       RGBColor[0.9686274509803922, 0.6039215686274509, 0.], 
       LineBox[CompressedData["
1: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
cF3lmaKGD9v7DPQNUUsJsTgfWl74//l/yLpFJg==
        "]], 
       LineBox[CompressedData["
1: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
vw==
        "]]}, {
       RGBColor[
       0.11764705882352941`, 0.10588235294117647`, 0.3843137254901961], 
       Dashing[{Small, Small}], 
       LineBox[CompressedData["
1:eJxdl3c4lf//xyUllKxPUckum0QpFA0lFQmhUFaSkaJhr2RmlSiFBkJ2RM79
PLZo2HuPQ0ZxzjHS8D2/f39/3dfzut/X+/1+PV/X83G/bhErFwNbZiYmpvdr
mJj+72mdG/1zdZWVPHiMeonTqB18v7ftUvvDSq7WvsFub9KOau03l24vs5LP
3mOqqbzYjl0DpZ9m5ljJAjZ61p5W7ZjaOPqqe5iV/GvG1+CXSztuOKiYFFax
ko8qzztIhrfDR6KHbPeAlZz/O4bnQmU7nj4Ti/3CyUpeeWYJXuUOJA+GuJxj
W09mEWq+fl6tE1uazutJ/beOnFpzs5jtZBfq9c8fa5RgITtEnff6fbUbJ6Uk
3MRE15JnSwZca9CDgzmX0r4pMJM9deyFokT7sBJmx6sktYZcUWH1ZuRLPxaW
Xj+22M1ElvGR3uj7ahDVorHKhNM/cPSXF56rHYLaOt9CGZs/eP0jZb3ej2E8
0ty/X8t7BV73WpVKhUZhnWQyPpW8jAGrGglxyzFEF01otD5ZxqSW+eRzmzEQ
n2/Hf4xahk4S58WtDmPY9vfRiQjfZexNzRdgcx9Dk3nzWznLZRi7cDlSwsZw
SOiU842dy/C+F7vqUTwGgZdqSwtJSwiM1K6N3jgO7bIGvYFHS5CSYLIf4h6H
W4tpRm3EEpKkDJzkto6jifmu6ROvJRh6btOCyDiCrYs+ql5awthcnA72jYMu
LufnuX0J6v7RxwQuj+Nb+k62NU8Xsd4oYtk8dxyXZ8lr3GIXkdbob9RUOA6q
kvUKJWwREE+gqX8YBx+RPv3ZcxHm7H3XWSrGYdKm+DXBfBH5cSSvky3jGGE6
Gqcosogq8t/eINo4bmmPh78SWETHaIlR2NI4WCIeBG3hWcQfkl/Rg9/j2L31
s/sf5kU8Zlt1v7aWAkc5I5P6sQXI3KTvq+ahYNH0quDljAVkJTuvzVGg4EEy
25bWlAWUqwfZ79hLAf94Fqd24gLCjAXKfPdRoHZjblUmbAEP3YJOi2tQ4Bd8
b2Tp+gJU1H2lBnUo4P68vdfBZgGq5YXUH6cpeMlNtPZfWsDQZOLkvB4FNUnM
NVVnFkC4Cjk2GVHAXhieHqWwgBJ+N5Hvlyl4tiyXwizJuN+ev6/DrSmQPdSU
4C68gIy5LmshOwr0PvGFXeReALOQW7jAdQqGOEsCvrIt4I3EFmdfJwpuGpp6
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
uAplP/5//T9wHSwP
        "]], 
       LineBox[CompressedData["
1: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
        
        "]]}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True, 
    AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, ImageSize -> Medium, 
    Method -> {}, PlotRange -> {{-3, 3}, {-1, 1}}, PlotRangeClipping -> True, 
    PlotRangePadding -> {
      Scaled[0.02], Automatic}],
   TemplateBox[{"0", "1", "2", "3", "4", "5", "6", "7"}, "LineLegend", 
    DisplayFunction -> (StyleBox[
      StyleBox[
       PaneBox[
        TagBox[
         GridBox[{{
            StyleBox[
             TagBox[
              FormBox["\"n=\"", TraditionalForm], TraditionalForm, Editable -> 
              True], {FontFamily -> "Times"}, Background -> Automatic, 
             StripOnInput -> False]}, {
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[
                    0.9372549019607843, 0.6470588235294118, 
                    0.6431372549019608]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[
                    0.9372549019607843, 0.6470588235294118, 
                    0.6431372549019608]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> 1, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Dashing[{Small, Small}], 
                    RGBColor[
                    0.6470588235294118, 0.5686274509803921, 
                    0.611764705882353]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Dashing[{Small, Small}], 
                    RGBColor[
                    0.6470588235294118, 0.5686274509803921, 
                    0.611764705882353]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> 1, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[
                    0.6745098039215687, 0.07450980392156863, 
                    0.043137254901960784`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[
                    0.6745098039215687, 0.07450980392156863, 
                    0.043137254901960784`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> 1, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Dashing[{Small, Small}], 
                    RGBColor[
                    0.2823529411764706, 0.21176470588235294`, 
                    0.27450980392156865`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Dashing[{Small, Small}], 
                    RGBColor[
                    0.2823529411764706, 0.21176470588235294`, 
                    0.27450980392156865`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> 1, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[
                    0.8627450980392157, 0.5215686274509804, 
                    0.34509803921568627`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[
                    0.8627450980392157, 0.5215686274509804, 
                    0.34509803921568627`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> 1, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Dashing[{Small, Small}], 
                    RGBColor[
                    0.09411764705882353, 0.08235294117647059, 
                    0.2901960784313726]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Dashing[{Small, Small}], 
                    RGBColor[
                    0.09411764705882353, 0.08235294117647059, 
                    0.2901960784313726]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> 1, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.9686274509803922, 0.6039215686274509, 0.]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[
                    0.9686274509803922, 0.6039215686274509, 0.]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> 1, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Dashing[{Small, Small}], 
                    RGBColor[
                    0.11764705882352941`, 0.10588235294117647`, 
                    0.3843137254901961]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Dashing[{Small, Small}], 
                    RGBColor[
                    0.11764705882352941`, 0.10588235294117647`, 
                    0.3843137254901961]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> 1, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
        Alignment -> Left, AppearanceElements -> None, 
        ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
       LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
      Background -> Automatic, StripOnInput -> False]& ), Editable -> True, 
    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 
                 RowBox[{
                  "0.9372549019607843`", ",", "0.6470588235294118`", ",", 
                   "0.6431372549019608`"}], "]"}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Dashing", "[", 
                   RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                 RowBox[{"RGBColor", "[", 
                   
                   RowBox[{
                    "0.6470588235294118`", ",", "0.5686274509803921`", ",", 
                    "0.611764705882353`"}], "]"}]}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 
                 RowBox[{
                  "0.6745098039215687`", ",", "0.07450980392156863`", ",", 
                   "0.043137254901960784`"}], "]"}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Dashing", "[", 
                   RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                 RowBox[{"RGBColor", "[", 
                   
                   RowBox[{
                    "0.2823529411764706`", ",", "0.21176470588235294`", ",", 
                    "0.27450980392156865`"}], "]"}]}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 
                 RowBox[{
                  "0.8627450980392157`", ",", "0.5215686274509804`", ",", 
                   "0.34509803921568627`"}], "]"}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Dashing", "[", 
                   RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                 RowBox[{"RGBColor", "[", 
                   
                   RowBox[{
                    "0.09411764705882353`", ",", "0.08235294117647059`", ",", 
                    "0.2901960784313726`"}], "]"}]}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 
                 RowBox[{
                  "0.9686274509803922`", ",", "0.6039215686274509`", ",", 
                   "0.`"}], "]"}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Dashing", "[", 
                   RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                 RowBox[{"RGBColor", "[", 
                   
                   RowBox[{
                    "0.11764705882352941`", ",", "0.10588235294117647`", ",", 
                    "0.3843137254901961`"}], "]"}]}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
           
           RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
             ",", #8}], "}"}], ",", 
         RowBox[{"LegendLabel", "\[Rule]", "\"n=\""}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.613379242987145*^9, {3.613379273736738*^9, 3.613379331802526*^9}, {
   3.613379869767356*^9, 3.6133799513571568`*^9}, {3.613387095725472*^9, 
   3.6133871142856894`*^9}, 3.613389088111491*^9, {3.6135560059967527`*^9, 
   3.613556021959869*^9}, 3.613556062688241*^9, 3.613627113888496*^9, 
   3.61812765823945*^9, 3.618156164280795*^9, 3.618204373071774*^9, 
   3.618238701096311*^9, 3.6182840648639927`*^9, 3.6184080233729963`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Polstellen extrahieren", "Section",
 CellChangeTimes->{{3.613380323483555*^9, 3.613380325996258*^9}}],

Cell["\<\
Code zwar zusammenkopiert, aber dr\[UDoubleDot]bergeschaut.\
\>", "Text",
 CellChangeTimes->{{3.6133803317047377`*^9, 3.613380338635754*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReduceToSolutions", "[", 
   RowBox[{"reduceResult_", ",", " ", "extractVariable_"}], "]"}], " ", ":=", 
  " ", 
  RowBox[{"Cases", "[", 
   RowBox[{"reduceResult", ",", 
    RowBox[{
     RowBox[{"Equal", "[", 
      RowBox[{"extractVariable", ",", " ", "value_"}], "]"}], "\[Rule]", " ", 
     "value"}], ",", " ", "100"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"polReduce", "[", 
   RowBox[{"n_", ",", " ", "side_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Reduce", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Denominator", "@", 
      RowBox[{"vSide", "[", 
       RowBox[{"q", ",", "n", ",", " ", "side"}], "]"}]}], "\[Equal]", "0"}], 
    ",", "q"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"polstellenSide", "[", 
   RowBox[{"n_", ",", "side_"}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"polReduce", "[", 
    RowBox[{"n", ",", "side"}], "]"}], "~", " ", "ReduceToSolutions", " ", 
   "~", " ", "q"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"polstellen", "[", "n_", "]"}], " ", ":=", " ", 
  RowBox[{"Join", "@@", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"polstellenSide", "[", 
         RowBox[{"n", ",", 
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", " ", 
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "&"}], ")"}], " ", "/@", 
    " ", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"+", "1"}], " ", "\[Rule]", "  ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Re", "[", "#", "]"}], " ", "\[GreaterEqual]", " ", "0"}], 
         "&"}], ")"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"-", "1"}], " ", "\[Rule]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Re", "[", "#", "]"}], " ", "\[LessEqual]", " ", "0"}], 
         "&"}], ")"}]}]}], "\[IndentingNewLine]", 
     "}"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mitgenommenePolstellen", "[", "n_", "]"}], " ", ":=", " ", 
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"polstellen", "[", "n", "]"}], ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Im", "[", "#", "]"}], "\[GreaterEqual]", " ", "0"}], "&"}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.613380341788217*^9, 3.613380389906023*^9}, {
  3.613380422125086*^9, 3.613380526609692*^9}, {3.613380592015663*^9, 
  3.61338062766226*^9}, {3.613380668716003*^9, 3.613380671957746*^9}, {
  3.613380726911405*^9, 3.613380728318241*^9}, {3.6133807709006367`*^9, 
  3.613380806663052*^9}, {3.613380907429926*^9, 3.613380909990964*^9}, {
  3.613384289330755*^9, 3.613384366001041*^9}, {3.613556059030363*^9, 
  3.613556059284698*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Zeichne", " ", "die", " ", 
    RowBox[{"Polstellen", ".", "\[IndentingNewLine]", "Diese"}], " ", 
    RowBox[{"Funktion", "/", "Zelle"}], " ", "ist", " ", "aus", " ", 
    RowBox[{"Polstellen", ".", "nb"}], " ", "kopiert", " ", "und", " ", 
    "etwas", " ", 
    RowBox[{"modifiziert", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Daten", "[", "n_", "]"}], " ", ":=", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Re", "[", "#", "]"}], ",", " ", 
          RowBox[{"Im", "[", "#", "]"}]}], "}"}], " ", "&"}], " ", "/@", " ", 
       
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Solve", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"z", "^", 
             RowBox[{"(", 
              RowBox[{"2", "+", "n"}], ")"}]}], " ", "\[Equal]", " ", "1"}], 
           ",", "z"}], "]"}], " ", "/.", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"z", "\[Rule]", " ", "a_"}], "}"}], "\[Rule]", " ", "a"}],
           "}"}]}], ")"}]}], " ", ",", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"in", " ", 
        StyleBox["Blau",
         FontColor->RGBColor[0, 0, 1]]}], " ", "*)"}], "\[IndentingNewLine]", 
      
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Re", "[", "#", "]"}], ",", " ", 
          RowBox[{"Im", "[", "#", "]"}]}], "}"}], " ", "&"}], " ", "/@", " ", 
       
       RowBox[{"polstellenSide", "[", 
        RowBox[{"n", ",", " ", 
         RowBox[{"+", "1"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Re", "[", "#", "]"}], ",", " ", 
          RowBox[{"Im", "[", "#", "]"}]}], "}"}], " ", "&"}], " ", "/@", " ", 
       
       RowBox[{"polstellenSide", "[", 
        RowBox[{"n", ",", " ", 
         RowBox[{"-", "1"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Re", "[", "#", "]"}], ",", " ", 
          RowBox[{"Im", "[", "#", "]"}]}], "}"}], " ", "&"}], " ", "/@", " ", 
       
       RowBox[{"polstellen", "[", "n", "]"}]}], " ", 
      RowBox[{"(*", " ", "schwarz", " ", "*)"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Re", "[", "#", "]"}], ",", " ", 
          RowBox[{"Im", "[", "#", "]"}]}], "}"}], " ", "&"}], " ", "/@", " ", 
       
       RowBox[{"mitgenommenePolstellen", "[", "n", "]"}]}]}], 
     "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"MakePlot", "[", 
      RowBox[{"n_", ",", "\[IndentingNewLine]", 
       RowBox[{"label_:", "\"\<Left and right hand poles\>\""}]}], 
      "\[IndentingNewLine]", "]"}], " ", ":=", 
     RowBox[{"Show", "[", 
      RowBox[{
       RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Daten", "[", "n", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"AxesOrigin", "\[Rule]", " ", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"PlotRange", " ", "\[Rule]", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1.2"}], ",", "1.2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1.2"}], ",", "1.2"}], "}"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"AspectRatio", "\[Rule]", " ", "1"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Frame", " ", "\[Rule]", " ", "True"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Im", ",", "None"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Re", ",", "label"}], " ", "}"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotMarkers", " ", "\[Rule]", " ", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Graphics", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Lighter", "@", "Blue"}], ",", " ", 
                 RowBox[{"Opacity", "[", "0.3", "]"}], ",", 
                 RowBox[{"Disk", "[", "]"}]}], "}"}], "]"}], ",", " ", 
              "0.05"}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Graphics", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Darker", "@", "Yellow"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Circle", "[", "]"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"Disk", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", "1", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "Pi"}], "/", "2"}], ",", 
                    RowBox[{"Pi", "/", "2"}]}], "}"}]}], "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Text", "[", 
                  RowBox[{
                   RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<R\>\"", ",", "\"\<Title\>\"", ",", "15", ",", "Bold",
                     ",", 
                    RowBox[{"Darker", "@", 
                    RowBox[{"Darker", "@", "Brown"}]}]}], "]"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"+", "0.5"}], ",", " ", "Center"}], "}"}]}], 
                  "]"}]}], "}"}]}], ",", "\[IndentingNewLine]", " ", "0.1"}], 
             "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Graphics", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Lighter", "@", "Magenta"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Circle", "[", "]"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"Disk", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", "1", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Pi", "/", "2"}], ",", 
                    RowBox[{
                    RowBox[{"3", "/", "2"}], "*", "Pi"}]}], "}"}]}], "]"}], 
                 ",", "\[IndentingNewLine]", 
                 RowBox[{"Text", "[", 
                  RowBox[{
                   RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<L\>\"", ",", "\"\<Title\>\"", ",", "15", ",", "Bold",
                     ",", 
                    RowBox[{"Darker", "[", "Magenta", "]"}]}], "]"}], ",", 
                   " ", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.5"}], ",", " ", "Center"}], "}"}]}], 
                  "]"}]}], "}"}]}], ",", "\[IndentingNewLine]", " ", "0.1"}], 
             "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Graphics", "[", 
               RowBox[{"{", 
                RowBox[{"Black", ",", 
                 RowBox[{"Thickness", "[", "0.15", "]"}], ",", 
                 RowBox[{"Circle", "[", "]"}]}], "}"}], "]"}], ",", "0.12"}], 
             "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Graphics", "[", 
               RowBox[{"{", 
                RowBox[{"Red", ",", 
                 RowBox[{"Thickness", "[", "0.15", "]"}], ",", 
                 RowBox[{"Circle", "[", "]"}]}], "}"}], "]"}], ",", "0.18"}], 
             "}"}]}], "\[IndentingNewLine]", "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Opacity", "[", "0.2", "]"}], ",", 
          RowBox[{"Circle", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", "1"}], "]"}]}], "}"}], 
        "]"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{"Show", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"MakePlot", "[", "n", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"StringForm", "[", 
              RowBox[{"\"\<n=``\>\"", ",", "n"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"Black", ",", " ", "20"}], "}"}]}], "]"}], ",", " ", 
           RowBox[{"Offset", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"120", ",", "130"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], "]"}], 
         RowBox[{"(*", 
          RowBox[{",", "\[IndentingNewLine]", 
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{
               RowBox[{"StringForm", "[", 
                RowBox[{"\"\<# Residuen=``\>\"", ",", 
                 RowBox[{
                  RowBox[{"ResidueList", "[", "n", "]"}], "//", "Length"}]}], 
                "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"Black", ",", " ", "20"}], "}"}]}], "]"}], ",", " ", 
             RowBox[{"Offset", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"+", "30"}], ",", 
                 RowBox[{"-", "30"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], "]"}]}], "*)"}], 
         "}"}], "\[IndentingNewLine]", "]"}]}], "]"}], "\[IndentingNewLine]", 
     ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "15", ",", "1"}], "}"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.613380841454142*^9, 3.613380854118729*^9}, {
  3.613381189584875*^9, 3.613381198289716*^9}, {3.613384314809441*^9, 
  3.613384344655158*^9}, {3.6133872227159767`*^9, 3.61338727257493*^9}, {
  3.618128806827162*^9, 3.6181288189883432`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`n$$], 0, 15, 1}}, Typeset`size$$ = {
    450., {227., 235.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`n$6057$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`n$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`n$$, $CellContext`n$6057$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[
        $CellContext`MakePlot[$CellContext`n$$], 
        Graphics[{
          Text[
           Style[
            StringForm["n=``", $CellContext`n$$], {Black, 20}], 
           Offset[{120, 130}, {0, 0}]]}]], 
      "Specifications" :> {{$CellContext`n$$, 0, 15, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{507., {295., 302.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.613387262530192*^9, 3.613387273155538*^9}, {
   3.6135560060983257`*^9, 3.613556022053794*^9}, 3.613556062777*^9, 
   3.613627114016922*^9, 3.618127658334996*^9, {3.618128790778185*^9, 
   3.6181288193588753`*^9}, 3.61815616437379*^9, 3.618204373147214*^9, 
   3.618238701187428*^9, 3.618284064940653*^9, 3.6184080234888573`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Join", " ", "@@", " ", 
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{"Blue", ",", " ", "Bold", ",", " ", "12"}], "}"}]}], 
          "]"}], "&"}], " ", "/@", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<n\>\"", ",", " ", "\"\<# unique poles\>\"", ",", " ", 
          "\"\<# poles\>\"", ",", "\"\<Unique Poles\>\""}], "}"}]}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "\[IndentingNewLine]", 
          RowBox[{"Length", "@", 
           RowBox[{"Union", "@", 
            RowBox[{"polstellen", "[", "n", "]"}]}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Length", "@", 
           RowBox[{"polstellen", "[", "n", "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Union", "@", 
            RowBox[{"polstellen", "[", "n", "]"}]}], " ", "//", " ", 
           "Sort"}]}], "\[IndentingNewLine]", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "0", ",", "7"}], "}"}]}], "]"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Frame", " ", "\[Rule]", " ", "All"}], ",", " ", 
   RowBox[{"Alignment", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"Left", ",", "Left"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.613387146080203*^9, 3.613387199245233*^9}, {
  3.618128856437305*^9, 3.618128895918874*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"n\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontSize->12,
      FontWeight->Bold,
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["\<\"# unique poles\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontSize->12,
      FontWeight->Bold,
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["\<\"# poles\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontSize->12,
      FontWeight->Bold,
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["\<\"Unique Poles\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontSize->12,
      FontWeight->Bold,
      FontColor->RGBColor[0, 0, 1]]},
    {"0", "2", "4", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], ",", "\[ImaginaryI]"}], "}"}]},
    {"1", "4", "4", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], 
         RowBox[{"1", "/", "3"}]]}], ",", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], 
        RowBox[{"1", "/", "3"}]], ",", 
       RowBox[{"-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], 
         RowBox[{"2", "/", "3"}]]}], ",", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], 
        RowBox[{"2", "/", "3"}]]}], "}"}]},
    {"2", "4", "4", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], 
         RowBox[{"1", "/", "4"}]]}], ",", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], 
        RowBox[{"1", "/", "4"}]], ",", 
       RowBox[{"-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], 
         RowBox[{"3", "/", "4"}]]}], ",", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], 
        RowBox[{"3", "/", "4"}]]}], "}"}]},
    {"3", "4", "4", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], 
         RowBox[{"1", "/", "5"}]]}], ",", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], 
        RowBox[{"1", "/", "5"}]], ",", 
       RowBox[{"-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], 
         RowBox[{"4", "/", "5"}]]}], ",", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], 
        RowBox[{"4", "/", "5"}]]}], "}"}]},
    {"4", "6", "8", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], ",", "\[ImaginaryI]", ",", 
       RowBox[{"-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], 
         RowBox[{"1", "/", "6"}]]}], ",", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], 
        RowBox[{"1", "/", "6"}]], ",", 
       RowBox[{"-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], 
         RowBox[{"5", "/", "6"}]]}], ",", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], 
        RowBox[{"5", "/", "6"}]]}], "}"}]},
    {"5", "8", "8", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], 
         RowBox[{"1", "/", "7"}]]}], ",", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], 
        RowBox[{"1", "/", "7"}]], ",", 
       RowBox[{"-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], 
         RowBox[{"3", "/", "7"}]]}], ",", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], 
        RowBox[{"3", "/", "7"}]], ",", 
       RowBox[{"-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], 
         RowBox[{"4", "/", "7"}]]}], ",", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], 
        RowBox[{"4", "/", "7"}]], ",", 
       RowBox[{"-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], 
         RowBox[{"6", "/", "7"}]]}], ",", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], 
        RowBox[{"6", "/", "7"}]]}], "}"}]},
    {"6", "8", "8", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], 
         RowBox[{"1", "/", "8"}]]}], ",", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], 
        RowBox[{"1", "/", "8"}]], ",", 
       RowBox[{"-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], 
         RowBox[{"3", "/", "8"}]]}], ",", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], 
        RowBox[{"3", "/", "8"}]], ",", 
       RowBox[{"-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], 
         RowBox[{"5", "/", "8"}]]}], ",", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], 
        RowBox[{"5", "/", "8"}]], ",", 
       RowBox[{"-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], 
         RowBox[{"7", "/", "8"}]]}], ",", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], 
        RowBox[{"7", "/", "8"}]]}], "}"}]},
    {"7", "8", "8", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], 
         RowBox[{"1", "/", "9"}]]}], ",", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], 
        RowBox[{"1", "/", "9"}]], ",", 
       RowBox[{"-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], 
         RowBox[{"1", "/", "3"}]]}], ",", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], 
        RowBox[{"1", "/", "3"}]], ",", 
       RowBox[{"-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], 
         RowBox[{"2", "/", "3"}]]}], ",", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], 
        RowBox[{"2", "/", "3"}]], ",", 
       RowBox[{"-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], 
         RowBox[{"8", "/", "9"}]]}], ",", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], 
        RowBox[{"8", "/", "9"}]]}], "}"}]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Left}}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.613387191097538*^9, 3.6133872002152357`*^9}, 
   3.613387285527083*^9, {3.613556007198762*^9, 3.613556022493833*^9}, 
   3.613556063344672*^9, 3.613627115342071*^9, 3.61812765927706*^9, {
   3.618128863125305*^9, 3.618128896224928*^9}, 3.6181561651453342`*^9, 
   3.618204373713253*^9, 3.618238701888522*^9, 3.618284065505204*^9, 
   3.618408023999276*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Join", " ", "@@", " ", 
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{"Blue", ",", " ", "Bold", ",", " ", "12"}], "}"}]}], 
          "]"}], "&"}], " ", "/@", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"\"\<n\>\"", ",", " ", "\"\<interesting poles\>\""}], 
         "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "\[IndentingNewLine]", 
          RowBox[{"Length", "@", 
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"Arg", "@", 
              RowBox[{"mitgenommenePolstellen", "[", "n", "]"}]}], ",", 
             RowBox[{
              RowBox[{"#", "\[LessEqual]", " ", 
               FractionBox["\[Pi]", "2"]}], "&"}]}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Select", "[", 
           RowBox[{
            RowBox[{"Arg", "@", 
             RowBox[{"mitgenommenePolstellen", "[", "n", "]"}]}], ",", 
            RowBox[{
             RowBox[{"#", "\[LessEqual]", " ", 
              FractionBox["\[Pi]", "2"]}], "&"}]}], "]"}]}], 
         "\[IndentingNewLine]", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "0", ",", "7"}], "}"}]}], "]"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Frame", " ", "\[Rule]", " ", "All"}], ",", " ", 
   RowBox[{"Alignment", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"Left", ",", "Left"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.618128902820333*^9, 3.6181289095805597`*^9}, {
  3.618128991772491*^9, 3.618129025191526*^9}, {3.618129915681439*^9, 
  3.6181299220544662`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"n\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontSize->12,
      FontWeight->Bold,
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["\<\"interesting poles\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontSize->12,
      FontWeight->Bold,
      FontColor->RGBColor[0, 0, 1]], ""},
    {"0", "2", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["\[Pi]", "2"], ",", 
       FractionBox["\[Pi]", "2"]}], "}"}]},
    {"1", "1", 
     RowBox[{"{", 
      FractionBox["\[Pi]", "3"], "}"}]},
    {"2", "1", 
     RowBox[{"{", 
      FractionBox["\[Pi]", "4"], "}"}]},
    {"3", "1", 
     RowBox[{"{", 
      FractionBox["\[Pi]", "5"], "}"}]},
    {"4", "3", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["\[Pi]", "2"], ",", 
       FractionBox["\[Pi]", "6"], ",", 
       FractionBox["\[Pi]", "2"]}], "}"}]},
    {"5", "2", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["\[Pi]", "7"], ",", 
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "7"]}], "}"}]},
    {"6", "2", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["\[Pi]", "8"], ",", 
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "8"]}], "}"}]},
    {"7", "2", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["\[Pi]", "9"], ",", 
       FractionBox["\[Pi]", "3"]}], "}"}]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Left}}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.618128910808754*^9, {3.618129013650972*^9, 3.618129025550729*^9}, {
   3.61812991882918*^9, 3.61812992225486*^9}, 3.618156165216836*^9, 
   3.618204373838215*^9, 3.618238701952177*^9, 3.618284065556279*^9, 
   3.61840802408114*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Integralberechnung", "Section",
 CellChangeTimes->{{3.613384224215826*^9, 3.6133842267390623`*^9}}],

Cell[TextData[{
 "Achtung wegen der Vorfaktoren:\n* Die Integralresiduenliste beinhaltet die \
kompletten Residuen, also auch den res ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["f", "\[PlusMinus]"], TraditionalForm]]],
 " = ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", 
    RowBox[{"2", "+", "n"}]], TraditionalForm]]],
 "-Fakt.\n*  AValue beinhaltet den ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", 
    RowBox[{
     RowBox[{"-", "2"}], " ", "i", " ", "z"}]], TraditionalForm]]],
 "-Faktor und damit einen Teil von ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["f", "0"], TraditionalForm]]],
 ". Grund: AValue[0] wird so sehr einfach."
}], "Text",
 CellChangeTimes->{{3.61823379111325*^9, 3.618233944051524*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"IntegralResidueList", "[", "n_", "]"}], " ", ":=", " ", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", " ", "Pi", " ", "I"}], ")"}], " ", "*", " ", 
     RowBox[{"(", 
      RowBox[{"+", "1"}], ")"}], "  ", "*", " ", 
     RowBox[{"Residue", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"vSide", "[", 
         RowBox[{"q", ",", " ", "n", ",", " ", 
          RowBox[{"Sign", "@", 
           RowBox[{"Re", "@", "#"}]}]}], "]"}], " ", "*", " ", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"+", "I"}], " ", "q", " ", "z"}], "]"}]}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"q", ",", "#"}], "}"}]}], "]"}]}], "&"}], " ", "/@", " ", 
   RowBox[{
   "mitgenommenePolstellen", "[", "n", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"IntegralValue", "[", "n_", "]"}], " ", ":=", " ", 
  RowBox[{"Total", "@", 
   RowBox[{
   "IntegralResidueList", "[", "n", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AValue", "[", "n_", "]"}], " ", ":=", "  ", 
  RowBox[{
   RowBox[{
    RowBox[{"-", " ", "I"}], "/", 
    RowBox[{"(", 
     RowBox[{"2", "z"}], ")"}]}], "  ", "*", " ", 
   RowBox[{"IntegralValue", "[", "n", "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.6092254301927433`*^9, 3.609225469565383*^9}, {
   3.609228308160513*^9, 3.609228501989505*^9}, {3.613384238606926*^9, 
   3.613384275074913*^9}, {3.613384419525065*^9, 3.6133844564646606`*^9}, {
   3.61338450480608*^9, 3.613384505069084*^9}, {3.613384561782366*^9, 
   3.613384584739393*^9}, {3.613384671898591*^9, 3.613384672327824*^9}, {
   3.6133856060517817`*^9, 3.6133856158569107`*^9}, {3.6133889652024307`*^9, 
   3.613388966857243*^9}, 3.613571327622941*^9, {3.613572099946684*^9, 
   3.613572100142413*^9}, {3.618127725945924*^9, 3.618127743714266*^9}, {
   3.618233901107379*^9, 3.6182339247696733`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"n", ",", "\[IndentingNewLine]", 
       RowBox[{"Grid", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"mitgenommenePolstellen", "[", "n", "]"}], "}"}], ",", " ", 
         
         RowBox[{"Frame", "\[Rule]", " ", "All"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Grid", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"IntegralResidueList", "[", "n", "]"}], " ", "/", " ", 
           RowBox[{"(", 
            RowBox[{"2", " ", "Pi", " ", "I"}], ")"}]}], "}"}], ",", 
         RowBox[{"Frame", "\[Rule]", " ", "All"}]}], "]"}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "7"}], "}"}]}], "]"}], ",", " ", 
   RowBox[{"Frame", "\[Rule]", " ", "All"}], ",", " ", 
   RowBox[{"Alignment", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"Left", ",", "Left"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.618127845274633*^9, 3.618127882953354*^9}, {
  3.618127969982903*^9, 3.618128019721013*^9}, {3.6181280751233253`*^9, 
  3.618128079389248*^9}, {3.618128164275016*^9, 3.6181281665203*^9}, {
  3.618128713317827*^9, 3.618128725853333*^9}, {3.61840974717585*^9, 
  3.618409777424066*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"0", 
     TagBox[GridBox[{
        {"\[ImaginaryI]", "\[ImaginaryI]"}
       },
       AutoDelete->False,
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {
         FractionBox[
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", "z"}]], "2"], 
         FractionBox[
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", "z"}]], "2"]}
       },
       AutoDelete->False,
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"1", 
     TagBox[GridBox[{
        {
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "/", "3"}]], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"2", "/", "3"}]]}
       },
       AutoDelete->False,
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {
         RowBox[{
          FractionBox["1", "3"], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"-", "1"}], ")"}], 
             RowBox[{"5", "/", "6"}]], " ", "z"}]]}], 
         RowBox[{
          FractionBox["1", "3"], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"-", "1"}], ")"}], 
              RowBox[{"1", "/", "6"}]]}], " ", "z"}]]}]}
       },
       AutoDelete->False,
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"2", 
     TagBox[GridBox[{
        {
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "/", "4"}]], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"3", "/", "4"}]]}
       },
       AutoDelete->False,
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {
         RowBox[{
          FractionBox["1", "4"], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"-", "1"}], ")"}], 
             RowBox[{"3", "/", "4"}]], " ", "z"}]]}], 
         RowBox[{
          FractionBox["1", "4"], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"-", "1"}], ")"}], 
              RowBox[{"1", "/", "4"}]]}], " ", "z"}]]}]}
       },
       AutoDelete->False,
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"3", 
     TagBox[GridBox[{
        {
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "/", "5"}]], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"4", "/", "5"}]]}
       },
       AutoDelete->False,
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {
         RowBox[{
          FractionBox["1", "5"], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"-", "1"}], ")"}], 
             RowBox[{"7", "/", "10"}]], " ", "z"}]]}], 
         RowBox[{
          FractionBox["1", "5"], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"-", "1"}], ")"}], 
              RowBox[{"3", "/", "10"}]]}], " ", "z"}]]}]}
       },
       AutoDelete->False,
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"4", 
     TagBox[GridBox[{
        {"\[ImaginaryI]", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "/", "6"}]], "\[ImaginaryI]", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"5", "/", "6"}]]}
       },
       AutoDelete->False,
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {
         FractionBox[
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", "z"}]], "6"], 
         RowBox[{
          FractionBox["1", "6"], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"-", "1"}], ")"}], 
             RowBox[{"2", "/", "3"}]], " ", "z"}]]}], 
         FractionBox[
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", "z"}]], "6"], 
         RowBox[{
          FractionBox["1", "6"], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"-", "1"}], ")"}], 
              RowBox[{"1", "/", "3"}]]}], " ", "z"}]]}]}
       },
       AutoDelete->False,
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"5", 
     TagBox[GridBox[{
        {
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "/", "7"}]], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"3", "/", "7"}]], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"4", "/", "7"}]], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"6", "/", "7"}]]}
       },
       AutoDelete->False,
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {
         RowBox[{
          FractionBox["1", "7"], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"-", "1"}], ")"}], 
             RowBox[{"9", "/", "14"}]], " ", "z"}]]}], 
         RowBox[{
          FractionBox["1", "7"], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"-", "1"}], ")"}], 
             RowBox[{"13", "/", "14"}]], " ", "z"}]]}], 
         RowBox[{
          FractionBox["1", "7"], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"-", "1"}], ")"}], 
              RowBox[{"1", "/", "14"}]]}], " ", "z"}]]}], 
         RowBox[{
          FractionBox["1", "7"], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"-", "1"}], ")"}], 
              RowBox[{"5", "/", "14"}]]}], " ", "z"}]]}]}
       },
       AutoDelete->False,
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"6", 
     TagBox[GridBox[{
        {
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "/", "8"}]], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"3", "/", "8"}]], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"5", "/", "8"}]], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"7", "/", "8"}]]}
       },
       AutoDelete->False,
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {
         RowBox[{
          FractionBox["1", "8"], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"-", "1"}], ")"}], 
             RowBox[{"5", "/", "8"}]], " ", "z"}]]}], 
         RowBox[{
          FractionBox["1", "8"], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"-", "1"}], ")"}], 
             RowBox[{"7", "/", "8"}]], " ", "z"}]]}], 
         RowBox[{
          FractionBox["1", "8"], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"-", "1"}], ")"}], 
              RowBox[{"1", "/", "8"}]]}], " ", "z"}]]}], 
         RowBox[{
          FractionBox["1", "8"], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"-", "1"}], ")"}], 
              RowBox[{"3", "/", "8"}]]}], " ", "z"}]]}]}
       },
       AutoDelete->False,
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"7", 
     TagBox[GridBox[{
        {
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "/", "9"}]], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "/", "3"}]], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"2", "/", "3"}]], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"8", "/", "9"}]]}
       },
       AutoDelete->False,
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {
         RowBox[{
          FractionBox["1", "9"], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"-", "1"}], ")"}], 
             RowBox[{"11", "/", "18"}]], " ", "z"}]]}], 
         RowBox[{
          FractionBox["1", "9"], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"-", "1"}], ")"}], 
             RowBox[{"5", "/", "6"}]], " ", "z"}]]}], 
         RowBox[{
          FractionBox["1", "9"], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"-", "1"}], ")"}], 
              RowBox[{"1", "/", "6"}]]}], " ", "z"}]]}], 
         RowBox[{
          FractionBox["1", "9"], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"-", "1"}], ")"}], 
              RowBox[{"7", "/", "18"}]]}], " ", "z"}]]}]}
       },
       AutoDelete->False,
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Left}}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.618128717037814*^9, 3.6181287263378267`*^9}, 
   3.618156165616385*^9, 3.618204374181757*^9, {3.618233887794324*^9, 
   3.618233926712*^9}, 3.618238702460306*^9, 3.618284065940639*^9, 
   3.618408024518075*^9, 3.6184097787116528`*^9}]
}, Open  ]],

Cell["\<\
\[OpenCurlyDoubleQuote]Herleitung\[CloseCurlyDoubleQuote] der obskuren \
Identit\[ADoubleDot]t, mit der die E-Funktionen zugunsten Winkelfunktionen \
verschwinden:\
\>", "Text",
 CellChangeTimes->{{3.61840934225248*^9, 3.6184093539444723`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Exp", "[", 
    RowBox[{"I", " ", 
     RowBox[{"Exp", "[", 
      RowBox[{"I", " ", "\[CurlyPhi]"}], "]"}], " ", "z"}], "]"}], " ", "+", 
   " ", 
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"-", "I"}], " ", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", " ", "I"}], " ", "\[CurlyPhi]"}], "]"}], " ", "z"}], 
    "]"}]}], " ", "//", " ", "ComplexExpand", " "}]], "Input",
 CellChangeTimes->{{3.618408382469492*^9, 3.61840844888301*^9}, {
   3.6184085148469067`*^9, 3.618408516294478*^9}, {3.618408694306226*^9, 
   3.6184087032841263`*^9}, {3.618408809179474*^9, 3.6184088599028807`*^9}, 
   3.6184091081254272`*^9}],

Cell[BoxData[
 RowBox[{"2", " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "z"}], " ", 
    RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}]}]], " ", 
  RowBox[{"Cos", "[", 
   RowBox[{"z", " ", 
    RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}]}], "]"}]}]], "Output",
 CellChangeTimes->{{3.618408397148501*^9, 3.618408449531143*^9}, 
   3.618408516478113*^9, {3.6184086957375307`*^9, 3.6184087036215687`*^9}, {
   3.6184088362034597`*^9, 3.618408861035491*^9}, {3.618409108500469*^9, 
   3.618409117402584*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Join", " ", "@@", " ", 
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{"Blue", ",", " ", "Bold", ",", " ", "12"}], "}"}]}], 
          "]"}], "&"}], " ", "/@", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<n\>\"", ",", " ", "\"\<# poles\>\"", ",", 
          "\"\<Wert f\[UDoubleDot]r A(p)\>\""}], "}"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "\[IndentingNewLine]", 
          RowBox[{"Length", "@", 
           RowBox[{"mitgenommenePolstellen", "[", "n", "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"AValue", "[", "n", "]"}], " ", ",", "\[IndentingNewLine]", 
          
          RowBox[{
           RowBox[{"AValue", "[", "n", "]"}], "//", "ComplexExpand"}]}], " ", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
            RowBox[{"AValue", "[", "n", "]"}], "//", "ComplexExpand"}], " ", "//",
            " ", "FullSimplify"}], "*)"}], "\[IndentingNewLine]", "}"}], ",", 
        
        RowBox[{"{", 
         RowBox[{"n", ",", "0", ",", "8"}], "}"}]}], "]"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Frame", " ", "\[Rule]", " ", "All"}], ",", " ", 
   RowBox[{"Alignment", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"Left", ",", "Left"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6092290939501457`*^9, 3.609229185509*^9}, {
  3.609229885364497*^9, 3.6092298903990393`*^9}, {3.609229940020246*^9, 
  3.609229940188836*^9}, {3.609826346918681*^9, 3.609826347325097*^9}, {
  3.613384436009521*^9, 3.613384445897097*^9}, {3.613384718213958*^9, 
  3.613384733859763*^9}, {3.613385581965323*^9, 3.613385611262146*^9}, {
  3.613571343622878*^9, 3.6135713451373243`*^9}, {3.613571387721778*^9, 
  3.613571387915251*^9}, {3.6135715849799747`*^9, 3.6135715955013943`*^9}, {
  3.613571641448607*^9, 3.613571646770029*^9}, {3.613627341869697*^9, 
  3.613627366264203*^9}, {3.6136333806419353`*^9, 3.613633384937496*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"n\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontSize->12,
      FontWeight->Bold,
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["\<\"# poles\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontSize->12,
      FontWeight->Bold,
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["\<\"Wert f\[UDoubleDot]r A(p)\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontSize->12,
      FontWeight->Bold,
      FontColor->RGBColor[0, 0, 1]], ""},
    {"0", "2", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "z"}]], " ", "\[Pi]"}], "z"], 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "z"}]], " ", "\[Pi]"}], "z"]},
    {"1", "2", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           FractionBox["2", "3"], " ", "\[ImaginaryI]", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"-", "1"}], ")"}], 
               RowBox[{"1", "/", "6"}]]}], " ", "z"}]], " ", "\[Pi]"}], "+", 
          RowBox[{
           FractionBox["2", "3"], " ", "\[ImaginaryI]", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"-", "1"}], ")"}], 
              RowBox[{"5", "/", "6"}]], " ", "z"}]], " ", "\[Pi]"}]}], 
         ")"}]}], 
       RowBox[{"2", " ", "z"}]]}], 
     FractionBox[
      RowBox[{"2", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           SqrtBox["3"], " ", "z"}], "2"]}]], " ", "\[Pi]", " ", 
       RowBox[{"Cos", "[", 
        FractionBox["z", "2"], "]"}]}], 
      RowBox[{"3", " ", "z"}]]},
    {"2", "2", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"-", "1"}], ")"}], 
               RowBox[{"1", "/", "4"}]]}], " ", "z"}]], " ", "\[Pi]"}], "+", 
          RowBox[{
           FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"-", "1"}], ")"}], 
              RowBox[{"3", "/", "4"}]], " ", "z"}]], " ", "\[Pi]"}]}], 
         ")"}]}], 
       RowBox[{"2", " ", "z"}]]}], 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         FractionBox["z", 
          SqrtBox["2"]]}]], " ", "\[Pi]", " ", 
       RowBox[{"Cos", "[", 
        FractionBox["z", 
         SqrtBox["2"]], "]"}]}], 
      RowBox[{"2", " ", "z"}]]},
    {"3", "2", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           FractionBox["2", "5"], " ", "\[ImaginaryI]", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"-", "1"}], ")"}], 
               RowBox[{"3", "/", "10"}]]}], " ", "z"}]], " ", "\[Pi]"}], "+", 
          
          RowBox[{
           FractionBox["2", "5"], " ", "\[ImaginaryI]", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"-", "1"}], ")"}], 
              RowBox[{"7", "/", "10"}]], " ", "z"}]], " ", "\[Pi]"}]}], 
         ")"}]}], 
       RowBox[{"2", " ", "z"}]]}], 
     RowBox[{
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            RowBox[{
             FractionBox["5", "8"], "-", 
             FractionBox[
              SqrtBox["5"], "8"]}]]}], " ", "z"}]], " ", "\[Pi]", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          FractionBox["1", "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "-", 
            SqrtBox["5"]}], ")"}], " ", "z"}], "]"}]}], 
       RowBox[{"5", " ", "z"}]], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            RowBox[{
             FractionBox["5", "8"], "-", 
             FractionBox[
              SqrtBox["5"], "8"]}]]}], " ", "z"}]], " ", "\[Pi]", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          FractionBox["1", "4"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SqrtBox["5"]}], ")"}], " ", "z"}], "]"}]}], 
       RowBox[{"5", " ", "z"}]], "+", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", 
              SqrtBox[
               RowBox[{
                FractionBox["5", "8"], "-", 
                FractionBox[
                 SqrtBox["5"], "8"]}]]}], " ", "z"}]], " ", "\[Pi]", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             FractionBox["1", "4"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "-", 
               SqrtBox["5"]}], ")"}], " ", "z"}], "]"}]}], 
          RowBox[{"5", " ", "z"}]], "+", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", 
              SqrtBox[
               RowBox[{
                FractionBox["5", "8"], "-", 
                FractionBox[
                 SqrtBox["5"], "8"]}]]}], " ", "z"}]], " ", "\[Pi]", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             FractionBox["1", "4"], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SqrtBox["5"]}], ")"}], " ", "z"}], "]"}]}], 
          RowBox[{"5", " ", "z"}]]}], ")"}]}]}]},
    {"4", "4", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           FractionBox["2", "3"], " ", "\[ImaginaryI]", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"-", "z"}]], " ", "\[Pi]"}], "+", 
          RowBox[{
           FractionBox["1", "3"], " ", "\[ImaginaryI]", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"-", "1"}], ")"}], 
               RowBox[{"1", "/", "3"}]]}], " ", "z"}]], " ", "\[Pi]"}], "+", 
          RowBox[{
           FractionBox["1", "3"], " ", "\[ImaginaryI]", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"-", "1"}], ")"}], 
              RowBox[{"2", "/", "3"}]], " ", "z"}]], " ", "\[Pi]"}]}], 
         ")"}]}], 
       RowBox[{"2", " ", "z"}]]}], 
     RowBox[{
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", "z"}]], " ", "\[Pi]"}], 
       RowBox[{"3", " ", "z"}]], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "z"}], "/", "2"}]], " ", "\[Pi]", " ", 
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{
           SqrtBox["3"], " ", "z"}], "2"], "]"}]}], 
       RowBox[{"3", " ", "z"}]]}]},
    {"5", "4", 
     RowBox[{"-", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"2", " ", "z"}]], 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           FractionBox["2", "7"], " ", "\[ImaginaryI]", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"-", "1"}], ")"}], 
               RowBox[{"1", "/", "14"}]]}], " ", "z"}]], " ", "\[Pi]"}], "+", 
          
          RowBox[{
           FractionBox["2", "7"], " ", "\[ImaginaryI]", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"-", "1"}], ")"}], 
               RowBox[{"5", "/", "14"}]]}], " ", "z"}]], " ", "\[Pi]"}], "+", 
          
          RowBox[{
           FractionBox["2", "7"], " ", "\[ImaginaryI]", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"-", "1"}], ")"}], 
              RowBox[{"9", "/", "14"}]], " ", "z"}]], " ", "\[Pi]"}], "+", 
          RowBox[{
           FractionBox["2", "7"], " ", "\[ImaginaryI]", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"-", "1"}], ")"}], 
              RowBox[{"13", "/", "14"}]], " ", "z"}]], " ", "\[Pi]"}]}], 
         ")"}]}]}]}], 
     RowBox[{
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "z"}], " ", 
          RowBox[{"Sin", "[", 
           FractionBox["\[Pi]", "7"], "]"}]}]], " ", "\[Pi]", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"z", " ", 
          RowBox[{"Cos", "[", 
           FractionBox["\[Pi]", "7"], "]"}]}], "]"}]}], 
       RowBox[{"7", " ", "z"}]], "+", 
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "z"}], " ", 
          RowBox[{"Cos", "[", 
           FractionBox["\[Pi]", "14"], "]"}]}]], " ", "\[Pi]", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"z", " ", 
          RowBox[{"Sin", "[", 
           FractionBox["\[Pi]", "14"], "]"}]}], "]"}]}], 
       RowBox[{"7", " ", "z"}]]}]},
    {"6", "4", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           FractionBox["1", "4"], " ", "\[ImaginaryI]", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"-", "1"}], ")"}], 
               RowBox[{"1", "/", "8"}]]}], " ", "z"}]], " ", "\[Pi]"}], "+", 
          RowBox[{
           FractionBox["1", "4"], " ", "\[ImaginaryI]", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"-", "1"}], ")"}], 
               RowBox[{"3", "/", "8"}]]}], " ", "z"}]], " ", "\[Pi]"}], "+", 
          RowBox[{
           FractionBox["1", "4"], " ", "\[ImaginaryI]", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"-", "1"}], ")"}], 
              RowBox[{"5", "/", "8"}]], " ", "z"}]], " ", "\[Pi]"}], "+", 
          RowBox[{
           FractionBox["1", "4"], " ", "\[ImaginaryI]", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"-", "1"}], ")"}], 
              RowBox[{"7", "/", "8"}]], " ", "z"}]], " ", "\[Pi]"}]}], 
         ")"}]}], 
       RowBox[{"2", " ", "z"}]]}], 
     RowBox[{
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "z"}], " ", 
          RowBox[{"Sin", "[", 
           FractionBox["\[Pi]", "8"], "]"}]}]], " ", "\[Pi]", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"z", " ", 
          RowBox[{"Cos", "[", 
           FractionBox["\[Pi]", "8"], "]"}]}], "]"}]}], 
       RowBox[{"4", " ", "z"}]], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "z"}], " ", 
          RowBox[{"Cos", "[", 
           FractionBox["\[Pi]", "8"], "]"}]}]], " ", "\[Pi]", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"z", " ", 
          RowBox[{"Sin", "[", 
           FractionBox["\[Pi]", "8"], "]"}]}], "]"}]}], 
       RowBox[{"4", " ", "z"}]]}]},
    {"7", "4", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           FractionBox["2", "9"], " ", "\[ImaginaryI]", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"-", "1"}], ")"}], 
               RowBox[{"1", "/", "6"}]]}], " ", "z"}]], " ", "\[Pi]"}], "+", 
          RowBox[{
           FractionBox["2", "9"], " ", "\[ImaginaryI]", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"-", "1"}], ")"}], 
               RowBox[{"7", "/", "18"}]]}], " ", "z"}]], " ", "\[Pi]"}], "+", 
          
          RowBox[{
           FractionBox["2", "9"], " ", "\[ImaginaryI]", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"-", "1"}], ")"}], 
              RowBox[{"11", "/", "18"}]], " ", "z"}]], " ", "\[Pi]"}], "+", 
          RowBox[{
           FractionBox["2", "9"], " ", "\[ImaginaryI]", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"-", "1"}], ")"}], 
              RowBox[{"5", "/", "6"}]], " ", "z"}]], " ", "\[Pi]"}]}], 
         ")"}]}], 
       RowBox[{"2", " ", "z"}]]}], 
     RowBox[{
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            SqrtBox["3"], " ", "z"}], "2"]}]], " ", "\[Pi]", " ", 
        RowBox[{"Cos", "[", 
         FractionBox["z", "2"], "]"}]}], 
       RowBox[{"9", " ", "z"}]], "+", 
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "z"}], " ", 
          RowBox[{"Sin", "[", 
           FractionBox["\[Pi]", "9"], "]"}]}]], " ", "\[Pi]", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"z", " ", 
          RowBox[{"Cos", "[", 
           FractionBox["\[Pi]", "9"], "]"}]}], "]"}]}], 
       RowBox[{"9", " ", "z"}]]}]},
    {"8", "6", 
     RowBox[{"-", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"2", " ", "z"}]], 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           FractionBox["2", "5"], " ", "\[ImaginaryI]", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"-", "z"}]], " ", "\[Pi]"}], "+", 
          RowBox[{
           FractionBox["1", "5"], " ", "\[ImaginaryI]", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"-", "1"}], ")"}], 
               RowBox[{"1", "/", "5"}]]}], " ", "z"}]], " ", "\[Pi]"}], "+", 
          RowBox[{
           FractionBox["1", "5"], " ", "\[ImaginaryI]", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"-", "1"}], ")"}], 
               RowBox[{"2", "/", "5"}]]}], " ", "z"}]], " ", "\[Pi]"}], "+", 
          RowBox[{
           FractionBox["1", "5"], " ", "\[ImaginaryI]", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"-", "1"}], ")"}], 
              RowBox[{"3", "/", "5"}]], " ", "z"}]], " ", "\[Pi]"}], "+", 
          RowBox[{
           FractionBox["1", "5"], " ", "\[ImaginaryI]", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"-", "1"}], ")"}], 
              RowBox[{"4", "/", "5"}]], " ", "z"}]], " ", "\[Pi]"}]}], 
         ")"}]}]}]}], 
     RowBox[{
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", "z"}]], " ", "\[Pi]"}], 
       RowBox[{"5", " ", "z"}]], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          FractionBox["1", "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "-", 
            SqrtBox["5"]}], ")"}], " ", "z"}]], " ", "\[Pi]", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          SqrtBox[
           RowBox[{
            FractionBox["5", "8"], "-", 
            FractionBox[
             SqrtBox["5"], "8"]}]], " ", "z"}], "]"}]}], 
       RowBox[{"5", " ", "z"}]], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          FractionBox["1", "4"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            SqrtBox["5"]}], ")"}], " ", "z"}]], " ", "\[Pi]", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          SqrtBox[
           RowBox[{
            FractionBox["5", "8"], "+", 
            FractionBox[
             SqrtBox["5"], "8"]}]], " ", "z"}], "]"}]}], 
       RowBox[{"5", " ", "z"}]]}]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Left}}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.613571480479701*^9, {3.613571585817255*^9, 3.613571595847246*^9}, 
   3.613571647128173*^9, 3.613572104371614*^9, 3.613627116317101*^9, {
   3.6136273498093653`*^9, 3.6136273733978453`*^9}, {3.613633383313632*^9, 
   3.613633385364221*^9}, 3.6181276599839363`*^9, {3.618127715574142*^9, 
   3.61812774560968*^9}, 3.6181561658443937`*^9, 3.6182043743880787`*^9, {
   3.61823391556707*^9, 3.618233932837385*^9}, 3.618238702704314*^9, 
   3.618284066154387*^9, 3.618408024743228*^9}]
}, Open  ]],

Cell[TextData[{
 "F\[UDoubleDot]r das korrekte Ergebnis ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     SuperscriptBox["\[ScriptCapitalT]", "0"], "0"], "=", 
    RowBox[{
     SubscriptBox["f", "0"], " ", 
     SubscriptBox["A", "value"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " beinhaltet das ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["f", "0"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " in diesem Worksheet die restlichen Faktoren im Vergleich zum Paper"
}], "Text",
 CellChangeTimes->{{3.618233952698284*^9, 3.6182340250144176`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[CapitalOmega]", "[", "d_", "]"}], " ", ":=", " ", 
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox["Pi", 
     FractionBox[
      RowBox[{"d", "+", "1"}], "2"]]}], 
   RowBox[{"Gamma", "[", 
    FractionBox[
     RowBox[{"d", "+", "1"}], "2"], "]"}]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f0", "[", "n_", "]"}], " ", ":=", " ", 
   FractionBox[
    RowBox[{"\[CapitalOmega]", "[", 
     RowBox[{"n", "+", "2"}], "]"}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"2", "\[Pi]"}], ")"}], 
     RowBox[{"2", "+", "n"}]]]}], 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Echte", " ", "Vorfaktoren"}], ",", " ", 
    RowBox[{
    "oben", " ", "in", " ", "AValue", " ", "schon", " ", "was", " ", "Teile", 
     " ", "mitgenommen"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"f0", "@", "n"}], " ", 
       RowBox[{"AValue", "@", "n"}]}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"n", ",", "0", ",", "2"}], "}"}]}], "]"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"z", ",", "0.1", ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Riffle", "[", 
        RowBox[{"#", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Dashed", ",", "#"}], "}"}], "&"}], "/@", 
          RowBox[{"Reverse", "[", "#", "]"}]}]}], "]"}], "&"}], " ", "[", 
      RowBox[{"ColorData", "[", 
       RowBox[{"9", ",", "\"\<ColorList\>\""}], "]"}], "]"}], ")"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", " ", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{"n", ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "0", ",", "7"}], "}"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"LegendLabel", "\[Rule]", " ", "\"\<n=\>\""}], ",", " ", 
        RowBox[{"LegendLayout", "\[Rule]", " ", 
         RowBox[{"{", 
          RowBox[{"\"\<Row\>\"", ",", " ", "3"}], "}"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"Right", ",", "Bottom"}], "}"}]}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<r / \!\(\*SubscriptBox[
StyleBox[\"L\",
FontSlant->\"Italic\"], \"*\"]\)\>\"", ",", 
      "\"\<\!\(\*SubsuperscriptBox[\(\[ScriptCapitalT]\), \(0\), \(0\)]\) / M\
\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{
   "PlotLabel", "\[Rule]", " ", 
    "\"\<Energy Density \!\(\*SubsuperscriptBox[\(\[ScriptCapitalT]\), \(0\), \
\(0\)]\) of modified GUP\>\""}], ",", "\[IndentingNewLine]", 
   RowBox[{"Frame", "\[Rule]", " ", "True"}]}], 
  RowBox[{"(*", 
   RowBox[{",", "\[IndentingNewLine]", 
    RowBox[{"PlotRange", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], "*)"}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQ/cufrzT8zSvHTWEvq0B02eb6jUVA+s6PuVtA9O6V
BYdA9Ku2YjAttjT7BYg+6FEApp98ZBAoBtIvvraA6Q9OQTYg2vqDmwOI5s1L
dgXRXm4HIkG0Agd/HIiWWz09AUR3Rf5MA9ElG6wKQfQ8v9dVIFopNqwaRAeV
mNWD6MMyWg0g+kCbzDyOr68cD21NA9M3c4pXgehLX3y3gvnTi3eCaDvOyF0g
Wjp8WQo3kD74/ziYfsVRXmENpN0m14Lpxfqvr4Fou8Oe10G05NPJUSFAupzJ
NRpEy8TrJ4PoRdG1YBoAfVOpMQ==
  "]],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {}, 
     {RGBColor[0.9372549019607843, 0.6470588235294118, 0.6431372549019608], 
      LineBox[CompressedData["
1:eJwVkn0w23cAhyNltSrtbW5G0xdnrvW6No0pt/kkxRp6MxdmpjNm3qZGxLTp
iJfS9rwfdeZQLWU9astsrqcypRiXlrW6yi+RIAjx/g3FsGL2x+eeP56/nruP
ZVg8L4JOo9E+2t3/rFJF/iRye4Fm0tn+LsOALRcIhQKfvzHwu0ZhemsPezUu
/JIi9iUGVF+uPHems7WsG5tldweR0S5eThmlsY+ElHLz/5QhyeT78nMZO7D1
UzGGdiiQwJvd5/y2ENCfUhvFUmCzq4U1H/kveu+/uWbjPwT7i8rgrJ4NGPv3
93vkKdFkvT6VareOslBRfIlYBftV03/8+tew/kH4jx/ODcP4kc/SasIqLt+s
E1hbjqK5mfZ5mcsKjjTM5FpaquEV22ers3+Fi6SiWtWmhsYhlt13dBlDkR4M
pu8YjrqA6+C8hC8sy3X3RsdAn2qWTYTp0Mk2MvROHsek6LMzDHMCn2JB1vX9
E9Ckuzp+XLuAbu6qO6mfgJGns5eZ3Ty8z1oHCz004LNyFosGZrH83XllxUsN
BqUbLNHdGVzbzquc40+CoeexZMKfhuvj7s5B+hQKlqlHwjAtdnrqz6qLpmAh
jcl0+nYK4lMNBmYOWhQ5Kjs4MZPI+OuOw3SbFoMJxk3KbA3cnv9WNhk0jduC
+QDH2gkc1pdEixamUdcuo+cpxrE/mV/sJJpB/TFf9cnDux0BnB1z81kox4Pi
qi6MYSzccKCsYRbTeYpfgn5Vo5eanXTnziHxAevWJzQ12vJ/8D8wMYf6jbgW
XcsIBpNoJ5IS52FDPM14pcOQd1a77T24gK+Ple/Lj1Fhi+PSerpmAU+oB5lO
oUow9VML008toruJqUePGgLPbuTeRt8iTmiO37ePUKAki2Vt/BXBU+7Vxvo0
OVbYQl1JKEFji9SxI1kOvy2JhPENwZ3s1ivUZTneuuTOs48msJiTRhvy5SiM
4qWdFxA01GzXJYbKkePNV2RfJzhZsRgfz5Ej42Bj/htiAp1Nz8jmHjnUfSSw
oIlg6XbK27Y0OdjZp997p5kgQz97X9BrCtt6klbrhwQ5CcNuf6xQSHkl1Xp0
Ecg8jSXZkxSEMi0nkyKQpKXLuL0U5MV2xkZDBFJOqnlWFwXnT+PlxSoCs9yO
Qx3tFNZ61+JqxggKrvoGu7ZQSHxoUPl4btdb8J4511N4keQV5bVIENJ2fO+V
OgpMZj5zQEfw7FD769ZqCroGU6l6lSDiqeAYp5yCb1RgSfQ6QYfV+z7XSimI
rSpDdJsEP3sunHlSTMFEPWor3Nr96QWR+kAhhbhKq7WdHQKrKrFHQC6F/wCs
ywB+
       "]]}, 
     {RGBColor[0.6470588235294118, 0.5686274509803921, 0.611764705882353], 
      Dashing[{Small, Small}], LineBox[CompressedData["
1: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
       "]]}, 
     {RGBColor[
      0.6745098039215687, 0.07450980392156863, 0.043137254901960784`], 
      LineBox[CompressedData["
1:eJwVkWs81IkChtVJ7rGV7Si0U9lC5BLl1uuWXKJCVvYoojgRHYaEisyQa+US
li7ukcJmWwzTjJlmxhjXKGlyb9z9aUu1ke18eH/Ph+fT83tJp4Odz6wWExOL
+r7/c+fT6Inc3HpIhJ3z8UjrgGlNzUj1w3rQvJ+UBIV3wLlSJOQ21WP3G3Zi
8ckORBce7fo4XI9zbw1VyHs60J22o+GYRgN60mvf/dbdjit+gmQpWgPmtNlr
2lTb0ftv5T2XhDSUuolWbWoTYGrDMfWbczSgvX/LWJ0AYvLx28vEGkG2izrW
WiyAhvj8pt4djeDK+dmMRwsQs8AS0z3fCEZ0zMIRbQF28wO6J5YbIeFx6Y+G
rFbERdHC3LfScU1popgRxofhqMvnD3p05H2xMxH34WPCfibylg0ddd7XlU4f
5cNps0oM/zwd6kavF3w0+dhcfyXJtJGOitlaqbiRFlQvWtz76cQztH/zlJc8
3oK5/b6+ZDsG9Ar5KnL2PPACq0ssXRjIOX56RsKYh4L7SyIFTwbkB8kLiho8
uEpm/ffRBQYGdNMUA6R5qH/1PEiUzYBJ08LGxVYuKOE7L7mLGCg7czYwxJmL
zbVTqaZxTJTYOxzfE8jBjw7xYb4pTDzYL5N44BQHP4yQPFOymCj3u2b0qzMH
kgondgvLmLDhPmps3M/BYgCXHyVgguMnK626loPu7cUSNMVm+Aw/MrYteo7k
DM9YowfNsFC62/VUxMZSSCfZsI2FkNgwV6c0FnYNrD2t85IFw09VE94UFo7b
mR3RGGRhvW1V+JVIFh5vrVBXXfjuL1GPdJ9lwUsQNyCuyEblNtnSUbDAVttn
2/sfNu6/if2z8K9mpPTd2UKeYcNnG1X2oHczVA4ENNfIcLDeeVPmlDMTOade
hAYpchBjsPOtiT0TG2NN1DS3cnA3QKY904IJabbM9WI9DurCpa566jCxaFfp
mH2Cg3o8k7Bbx0Tn8dm+6DIOlvfpm8S0MnDtfDBxyIqLHPlfnmo7MDCRH6o8
EMnDJ/PPAxdodFBJmuQPcTxobdqTcfgxHdtKR1qlU3lYjnKU0Cugw7PqWNS+
ezxsfKa0ZnMCHd3MPf03WTy8j3dV83Sho0k0nW0l24IlH7Ox0tkmpOv4bii/
04LcnfTDq9WbYMZ2lSYz+IhTE1fvraNh14rZz458PqhSLiGTlTRsNN5p+XMP
H5NdB6+tLaBhpurLpb5xPpYmszo8EmnIz7s7aSrfigQVV8UAD9r3fyZ44idb
4f1FqLbtWwMaSdEJ2V9bscsluPOhQwNMrxatoRm2QblJ+7LXch0ibcrOxBV0
QOi+jfW+7ilI0xaPPBY6wadtiYwS1aJ/SaR1WKMbkmqSsee1n6AvJCIixOkF
3G0M8vZxavAxyDf8dWAP5GWXGkNTqjG+N+HvnKJexNq28+QbHkP11G3b1Ocv
wXPIzWTRK6HhIlTuX3mFrSf8x253VMCtLbrYb+9rBCbHVkoolYP7UGpR3bUf
P/ScaXpeXAY517Y265Q3ONPrVPNJvxQ5XpeDM6uE0M/Sycn8XIzPhr7ZptNv
8bLG15hKL8LFjJIQNdIgbMy7tywVFkK1YjKZRBrCfuPVirqPCxBA5BUIm4Yg
lfvHg3/V3Uf/WWtlvaPDcGjNePuCfQ8nSL/Nlw0OQ+y2eTPV7C6azWUk7aNG
YFhi0jtXnQ+n9BBKvOworo9aVle65YFt+9GKKB9FcixnUPJTLuwt1TwjrMcw
PxwiXvIkB+/PO7zJ6xkDt9Sb2p+dDeq3lPzpC+8wozhG+xh2G8ZMdnPvahGa
yPds28OzsMIptxy6JcKzRerUuqRMVOlWiG/SGoeGusFW6ewMxLbf15poGge5
S2fJm5GOA52/57zzmAC3iEQaH70FlTU0/8uzE/iap2Vd+9MtyEZdSDe4PImU
2hKTinM38c7NYkVJaQpGj8drZz1vYNhXsiunYgoy5KCiJwpp4L6aemdlO41e
V7878vUpaEqNdJUfnca4gD5lEpGM3jCxXWGhM1D65caGbo8k9DUXHJBQmEVL
VgtS9ROxbGHUoF84ixXHqpDQ3deht+bKjRjdOZTVhN28Z5AAZ82Bsi+COejr
TJvcNIhHJmWvmtxJAjac0OdSx6j4YB4xn+lFIOOattt2Rypclmk0ZR8Cw0Kj
YjM7KtaHWznv9ieg+zDlItmCiht+zlcdQgh0ZmgtTulSkWR/4XViPAEHwYjm
1/VUxCpUpq6tIqBgYGhe1kvBkIBwT6sh4LhZakdfFwXmifo7fqwlsFyd+0yq
nYJvq2gNavUE/M0OqgRzKIj+q2XcmkVgTLgqyPJPCiJejlvEvSLQ6KQKmVwK
+tI15WT6CfQ4BycdyqJg35HgvnQhAZJXSxLlFgWL3MWgwmECZw/OloslURBa
L57PnCawNH/Ic1UUBd1hdn52cwTEs/cetrpIgZ5eql7XPIGrKz1z1FAK5is2
tgx9JCD7vwQnuUAKjvq5Z/p/JsDnWss4+1NQtT3/1Pzf33ujZaOyfSlYNzSo
EbFM4JRb7Z23XhQE5W9fXFkh8EVjfegOTwr+AZYmzp8=
       "]]}}, InsetBox[
     TemplateBox[{"0","1","2","3","4","5","6","7"},
      "LineLegend",
      DisplayFunction->(StyleBox[
        StyleBox[
         PaneBox[
          TagBox[
           GridBox[{{
              StyleBox[
               TagBox[
                FormBox["\"n=\"", TraditionalForm], TraditionalForm, Editable -> 
                True], {FontFamily -> "Times"}, Background -> Automatic, 
               StripOnInput -> False]}, {
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[
                    0.9372549019607843, 0.6470588235294118, 
                    0.6431372549019608]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[
                    0.9372549019607843, 0.6470588235294118, 
                    0.6431372549019608]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> 1, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                   "Grid"]}, {
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Dashing[{Small, Small}], 
                    RGBColor[
                    0.6470588235294118, 0.5686274509803921, 
                    0.611764705882353]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Dashing[{Small, Small}], 
                    RGBColor[
                    0.6470588235294118, 0.5686274509803921, 
                    0.611764705882353]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> 1, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                   "Grid"]}, {
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[
                    0.6745098039215687, 0.07450980392156863, 
                    0.043137254901960784`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[
                    0.6745098039215687, 0.07450980392156863, 
                    0.043137254901960784`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> 1, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                   "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
               "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
          Alignment -> Left, AppearanceElements -> None, 
          ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"],
          LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
        Background -> Automatic, StripOnInput -> False]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{"RGBColor", "[", 
                   
                   RowBox[{
                    "0.9372549019607843`", ",", "0.6470588235294118`", ",", 
                    "0.6431372549019608`"}], "]"}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.6470588235294118`", ",", "0.5686274509803921`", ",", 
                    "0.611764705882353`"}], "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{"RGBColor", "[", 
                   
                   RowBox[{
                    "0.6745098039215687`", ",", "0.07450980392156863`", ",", 
                    "0.043137254901960784`"}], "]"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8}], "}"}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"n=\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"\"Row\"", ",", "3"}], "}"}]}]}], "]"}]& )], 
     Scaled[{0.99, 0.01}], ImageScaled[{1, 0}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->True,
   AxesOrigin->{0.2, 0},
   Frame->True,
   FrameLabel->{{
      FormBox[
      "\"\\!\\(\\*SubsuperscriptBox[\\(\[ScriptCapitalT]\\), \\(0\\), \
\\(0\\)]\\) / M\"", TraditionalForm], None}, {
      FormBox[
      "\"r / \\!\\(\\*SubscriptBox[\\n \
StyleBox[\\\"L\\\",\\nFontSlant->\\\"Italic\\\"], \\\"*\\\"]\\)\"", 
       TraditionalForm], None}},
   Method->{},
   PlotLabel->FormBox[
    "\"Energy Density \\!\\(\\*SubsuperscriptBox[\\(\[ScriptCapitalT]\\), \
\\(0\\), \\(0\\)]\\) of modified GUP\"", TraditionalForm],
   PlotRange->{{0.1, 1}, {0., 2.6387190801014757`}},
   PlotRangeClipping->True,
   PlotRangePadding->{
     Scaled[0.02], 
     Scaled[0.02]}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        RGBColor[0.9372549019607843, 0.6470588235294118, 0.6431372549019608], 
        
        Line[CompressedData["
1:eJwVkn0w23cAhyNltSrtbW5G0xdnrvW6No0pt/kkxRp6MxdmpjNm3qZGxLTp
iJfS9rwfdeZQLWU9astsrqcypRiXlrW6yi+RIAjx/g3FsGL2x+eeP56/nruP
ZVg8L4JOo9E+2t3/rFJF/iRye4Fm0tn+LsOALRcIhQKfvzHwu0ZhemsPezUu
/JIi9iUGVF+uPHems7WsG5tldweR0S5eThmlsY+ElHLz/5QhyeT78nMZO7D1
UzGGdiiQwJvd5/y2ENCfUhvFUmCzq4U1H/kveu+/uWbjPwT7i8rgrJ4NGPv3
93vkKdFkvT6VareOslBRfIlYBftV03/8+tew/kH4jx/ODcP4kc/SasIqLt+s
E1hbjqK5mfZ5mcsKjjTM5FpaquEV22ers3+Fi6SiWtWmhsYhlt13dBlDkR4M
pu8YjrqA6+C8hC8sy3X3RsdAn2qWTYTp0Mk2MvROHsek6LMzDHMCn2JB1vX9
E9Ckuzp+XLuAbu6qO6mfgJGns5eZ3Ty8z1oHCz004LNyFosGZrH83XllxUsN
BqUbLNHdGVzbzquc40+CoeexZMKfhuvj7s5B+hQKlqlHwjAtdnrqz6qLpmAh
jcl0+nYK4lMNBmYOWhQ5Kjs4MZPI+OuOw3SbFoMJxk3KbA3cnv9WNhk0jduC
+QDH2gkc1pdEixamUdcuo+cpxrE/mV/sJJpB/TFf9cnDux0BnB1z81kox4Pi
qi6MYSzccKCsYRbTeYpfgn5Vo5eanXTnziHxAevWJzQ12vJ/8D8wMYf6jbgW
XcsIBpNoJ5IS52FDPM14pcOQd1a77T24gK+Ple/Lj1Fhi+PSerpmAU+oB5lO
oUow9VML008toruJqUePGgLPbuTeRt8iTmiO37ePUKAki2Vt/BXBU+7Vxvo0
OVbYQl1JKEFji9SxI1kOvy2JhPENwZ3s1ivUZTneuuTOs48msJiTRhvy5SiM
4qWdFxA01GzXJYbKkePNV2RfJzhZsRgfz5Ej42Bj/htiAp1Nz8jmHjnUfSSw
oIlg6XbK27Y0OdjZp997p5kgQz97X9BrCtt6klbrhwQ5CcNuf6xQSHkl1Xp0
Ecg8jSXZkxSEMi0nkyKQpKXLuL0U5MV2xkZDBFJOqnlWFwXnT+PlxSoCs9yO
Qx3tFNZ61+JqxggKrvoGu7ZQSHxoUPl4btdb8J4511N4keQV5bVIENJ2fO+V
OgpMZj5zQEfw7FD769ZqCroGU6l6lSDiqeAYp5yCb1RgSfQ6QYfV+z7XSimI
rSpDdJsEP3sunHlSTMFEPWor3Nr96QWR+kAhhbhKq7WdHQKrKrFHQC6F/wCs
ywB+
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Dashing[{Small, Small}], 
        RGBColor[0.6470588235294118, 0.5686274509803921, 0.611764705882353], 
        Line[CompressedData["
1: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
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        RGBColor[
        0.6745098039215687, 0.07450980392156863, 0.043137254901960784`], 
        Line[CompressedData["
1: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
         "]]}}}, {
     AspectRatio -> GoldenRatio^(-1), Axes -> True, AxesOrigin -> {0.2, 0}, 
      Frame -> True, 
      FrameLabel -> {{
        "\!\(\*SubsuperscriptBox[\(\[ScriptCapitalT]\), \(0\), \(0\)]\) / M", 
         None}, {"r / \!\(\*SubscriptBox[\n StyleBox[\"L\",\n\
FontSlant->\"Italic\"], \"*\"]\)", None}}, Method -> {}, PlotLabel -> 
      "Energy Density \!\(\*SubsuperscriptBox[\(\[ScriptCapitalT]\), \(0\), \
\(0\)]\) of modified GUP", PlotRange -> {{0.1, 1}, {0., 2.6387190801014757`}},
       PlotRangeClipping -> True, PlotRangePadding -> {
        Scaled[0.02], 
        Scaled[0.02]}}], {
     Placed[
      Unevaluated[
       LineLegend[{
         Directive[
          RGBColor[
          0.9372549019607843, 0.6470588235294118, 0.6431372549019608]], 
         Directive[
          Dashing[{Small, Small}], 
          RGBColor[
          0.6470588235294118, 0.5686274509803921, 0.611764705882353]], 
         Directive[
          RGBColor[
          0.6745098039215687, 0.07450980392156863, 0.043137254901960784`]]}, {
        0, 1, 2, 3, 4, 5, 6, 7}, LegendLabel -> "n=", 
        LegendLayout -> {"Row", 3}, LegendLabel -> "n=", 
        LegendLayout -> {"Row", 3}]], {Right, Bottom}, Identity]}]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.613572037540596*^9, 3.613572074630723*^9, 3.613572133922193*^9, 
   3.613627143922385*^9, {3.613627922527152*^9, 3.613627946299913*^9}, 
   3.613628252613492*^9, {3.613628899380477*^9, 3.6136289194812098`*^9}, 
   3.613628996527493*^9, {3.613629027493251*^9, 3.613629034590008*^9}, 
   3.613629106344363*^9, {3.613629162656577*^9, 3.613629189584731*^9}, {
   3.6136292648702297`*^9, 3.613629292151495*^9}, 3.6136293226007*^9, 
   3.6136294094187117`*^9, {3.6136294421057453`*^9, 3.61362947102627*^9}, 
   3.618127661337228*^9, 3.618129123711897*^9, {3.618129297053542*^9, 
   3.618129322932561*^9}, {3.618129356645987*^9, 3.6181293630351543`*^9}, 
   3.618134623375442*^9, 3.618156166318591*^9, 3.61820437469842*^9, 
   3.6182332913379374`*^9, {3.618234043020356*^9, 3.618234053401999*^9}, 
   3.618238703790715*^9, 3.618284066250565*^9, {3.618284246448415*^9, 
   3.6182842515626287`*^9}, 3.6182843164189997`*^9, 3.618408024880274*^9}]
}, Open  ]],

Cell[TextData[{
 "Zur Berechnung von ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["g", "00"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " nutzen wir generische L\[ODoubleDot]sung der Rizzo-DGL. Dabei wird an \
dieser Stelle hier das M reingemogelt, was dem physikalischen ",
 Cell[BoxData[
  FormBox[
   RowBox[{"M", "/", 
    SubscriptBox[
     SuperscriptBox["M", 
      RowBox[{"n", "+", "2"}]], "*"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " entspricht."
}], "Text",
 CellChangeTimes->{{3.618234067129158*^9, 3.618234111717627*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"g00", "[", 
   RowBox[{"n_", ",", " ", "r_"}], "]"}], " ", ":=", 
  RowBox[{"1", "-", " ", 
   RowBox[{
    FractionBox["M", 
     SuperscriptBox["r", 
      RowBox[{"1", "+", "n"}]]], 
    FractionBox[
     RowBox[{"2", " "}], 
     RowBox[{"(", 
      RowBox[{"n", "+", "2"}], ")"}]], 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{
       SuperscriptBox["z", 
        RowBox[{"n", "+", "2"}]], " ", 
       RowBox[{"f0", "[", "n", "]"}], 
       RowBox[{"AValue", "[", "n", "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"z", ",", "0", ",", "r"}], "}"}]}], 
     "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g00s", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"g00", "[", 
      RowBox[{"n", ",", "r"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "7"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6182049373516893`*^9, 3.6182050096753674`*^9}, {
   3.61820506225805*^9, 3.618205067441504*^9}, {3.6182052748313713`*^9, 
   3.6182053156759977`*^9}, {3.618232873545539*^9, 3.61823288532797*^9}, {
   3.618232951623877*^9, 3.6182329517191*^9}, {3.6182340589979486`*^9, 
   3.6182340593489857`*^9}, 3.6182877903387117`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Looking for the extremal radius", "Section",
 CellChangeTimes->{{3.618239465471727*^9, 3.618239470321526*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Prepare", " ", "Export", " ", "and", " ", "metric", " ", "units"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SetDirectory", "[", 
     RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cm", "=", 
     RowBox[{"72", "/", "2.54"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.618287011127096*^9, 3.618287016425947*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Epic", " ", "Epilog"}], "-", 
     RowBox[{"Labels", " ", "coming", " ", "here"}]}], ",", " ", 
    RowBox[{"modified", " ", "for", " ", "the", " ", "current", " ", 
     RowBox[{"problem", ":", "\[IndentingNewLine]", "   ", 
      RowBox[{
      "Featuring", " ", "scaling", " ", "and", " ", "correct", " ", "Inset", 
       " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"no", " ", "rectangle", " ", "nonrotated", " ", "box"}], 
         ")"}], ".", "\[IndentingNewLine]", " ", "ASSUMING"}], " ", "data", 
       " ", "be", " ", "a", " ", "list", " ", "of", " ", "X", " ", "as", " ", 
       "variable"}]}]}], ",", " ", 
    RowBox[{"ideal", " ", "for", " ", 
     RowBox[{"g00s", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ClearAll", "[", "EpiLabels", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"EpiLabels", "[", 
     RowBox[{"xpoint_", ",", " ", "data_", ",", " ", "labels_", ",", 
      RowBox[{"axisratio_:", "1"}]}], "]"}], ":=", " ", "\[IndentingNewLine]", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xpoints", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Head", "@", "xpoint"}], "===", "List"}], ",", " ", 
          "xpoint", ",", " ", 
          RowBox[{
           RowBox[{"xpoint", "&"}], "/@", " ", "labels"}]}], "]"}]}], "}"}], 
      ",", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"erlaube", " ", "Liste", " ", "von", " ", "xpoints"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Inset", "[", 
         RowBox[{
          RowBox[{"Rotate", "[", 
           RowBox[{
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"labels", "[", 
               RowBox[{"[", "#", "]"}], "]"}], ",", 
              RowBox[{"Background", " ", "\[Rule]", " ", "White"}]}], "]"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"ArcTan", "@", 
              RowBox[{"Re", "@", 
               RowBox[{"N", "[", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"D", "[", 
                   RowBox[{
                    RowBox[{
                    "data", "\[LeftDoubleBracket]", "#", 
                    "\[RightDoubleBracket]"}], ",", "X"}], "]"}], "/.", 
                  RowBox[{"{", 
                   RowBox[{"X", "\[Rule]", " ", 
                    RowBox[{
                    "xpoints", "\[LeftDoubleBracket]", "#", 
                    "\[RightDoubleBracket]"}]}], "}"}]}], ")"}], " ", 
                "]"}]}]}], " ", "/", " ", "axisratio"}]}], "]"}], " ", ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "xpoints", "\[LeftDoubleBracket]", "#", "\[RightDoubleBracket]"}],
             ",", " ", 
            RowBox[{"0", " ", "+", 
             RowBox[{
              RowBox[{"(", " ", 
               RowBox[{"data", "/.", 
                RowBox[{"X", "\[Rule]", " ", 
                 RowBox[{
                 "xpoints", "\[LeftDoubleBracket]", "#", 
                  "\[RightDoubleBracket]"}]}]}], ")"}], 
              "\[LeftDoubleBracket]", "#", "\[RightDoubleBracket]"}]}]}], 
           "}"}]}], "\[IndentingNewLine]", "]"}], "&"}], " ", "/@", " ", 
       RowBox[{"Range", "@", 
        RowBox[{"Length", "@", "data"}]}]}]}], "]"}]}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"1", ":", " ", 
     RowBox[{
     "any", " ", "value", " ", "to", " ", "introspect", " ", "list"}]}], 
    "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"point", "[", 
     RowBox[{"color_", ",", " ", "coord_", ",", 
      RowBox[{"size_:", "0.37"}]}], "]"}], " ", ":=", " ", 
    RowBox[{"Inset", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Graphics", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Opacity", "[", "0.9", "]"}], ",", " ", "color", ",", " ", 
         RowBox[{"Disk", "[", "]"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"xOrig", ",", "yOrig"}], "}"}], ",", " ", 
        RowBox[{
         RowBox[{"scaling", " ", "--"}], ">", " ", 
         RowBox[{"see", " ", "Inset", " ", "doku"}]}]}], " ", "*)"}], 
      "\[IndentingNewLine]", "coord", ",", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], ",", " ", "size"}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"miniToSol", "[", "res_", "]"}], " ", ":=", " ", 
    RowBox[{"res", " ", "/.", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"y_", ",", 
        RowBox[{"{", 
         RowBox[{"_", " ", "\[Rule]", " ", "x_"}], "}"}]}], "}"}], " ", 
      "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}]}]}]}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"for", " ", "FindMinimum"}], " ", "\[Rule]", " ", "Coordinate"}],
     "  ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rootToSol", "[", "res_", "]"}], " ", ":=", " ", 
    RowBox[{"res", "  ", "/.", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"_", " ", "\[Rule]", " ", "x_"}], "}"}], " ", "\[Rule]", " ", 
      "x", " ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"for", " ", "first", " ", "FindRoot"}], " ", "\[Rule]", " ", 
        "value"}], " ", "*)"}]}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.61828577957448*^9, 3.618285821364998*^9}, {
   3.618285896854224*^9, 3.618285930091975*^9}, 3.618285995028253*^9, {
   3.6182860347861357`*^9, 3.618286056778779*^9}, {3.618286124695767*^9, 
   3.6182861686637278`*^9}, {3.618286236026266*^9, 3.6182863137329817`*^9}, {
   3.6182863451753483`*^9, 3.618286348843389*^9}, {3.6182863810474586`*^9, 
   3.618286386613768*^9}, {3.6182864578762836`*^9, 3.6182864593561363`*^9}, 
   3.618286835093368*^9, {3.618286886270481*^9, 3.618286897111266*^9}, {
   3.618287124345099*^9, 3.6182872075965137`*^9}, {3.618287530830875*^9, 
   3.618287530984911*^9}, {3.618287595752811*^9, 3.618287654301181*^9}, {
   3.618287691230551*^9, 3.618287713314705*^9}, {3.618289279795586*^9, 
   3.618289280097419*^9}, {3.618289961724201*^9, 3.618290011983058*^9}, {
   3.618293754700364*^9, 3.618293755215811*^9}, {3.618293790771674*^9, 
   3.618293790986228*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "Find ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["r", "C"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["M", "*"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " numerically"
}], "Subsection",
 CellChangeTimes->{{3.618289243815258*^9, 3.618289255888979*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"find", " ", "extremal", " ", 
    SubscriptBox["r", "0"], " ", 
    RowBox[{"Values", ".", " ", "The"}], " ", "test", " ", "Masses", " ", 
    "are", " ", "\"\<experimental\>\""}], " ", "*)"}], " ", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"r0s", " ", "=", " ", 
     RowBox[{"First", "@", 
      RowBox[{"Transpose", "@", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"miniToSol", "@", 
          RowBox[{"FindMinimum", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"Re", "@", 
              RowBox[{"g00s", "\[LeftDoubleBracket]", 
               RowBox[{"n", "+", "1"}], "\[RightDoubleBracket]"}]}], "/.", 
             RowBox[{"M", "\[Rule]", " ", 
              RowBox[{"10", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"n", "+", "1"}], ")"}], "6"]}]}]}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"r", ",", "1"}], "}"}]}], "\[IndentingNewLine]", " ", 
           "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "0", ",", 
           RowBox[{
            RowBox[{"Length", "@", "g00s"}], "-", "1"}]}], "}"}]}], 
        "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"fi3d", " ", "extremal", " ", "Mass", " ", "values"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ms", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"rootToSol", "@", 
        RowBox[{"FindRoot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Re", "@", 
            RowBox[{"g00s", "\[LeftDoubleBracket]", 
             RowBox[{"n", "+", "1"}], "\[RightDoubleBracket]"}]}], "/.", 
           RowBox[{"r", "\[Rule]", " ", 
            RowBox[{"r0s", "\[LeftDoubleBracket]", 
             RowBox[{"n", "+", "1"}], "\[RightDoubleBracket]"}]}]}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"M", ",", 
            SuperscriptBox["10", "n"]}], "}"}]}], "]"}]}], " ", ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "0", ",", 
         RowBox[{
          RowBox[{"Length", "@", "g00s"}], "-", "1"}]}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", "\"\<n\>\"", "}"}], "~", "Join", "~", 
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", 
          RowBox[{
           RowBox[{"Length", "@", "g00s"}], "-", "1"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", "\"\<\!\(\*SubscriptBox[\(r\), \(0\)]\)\>\"", "}"}], "~",
         "Join", "~", "r0s"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", "\"\<\!\(\*SubscriptBox[\(M\), \(*\)]\)\>\"", "}"}], "~",
         "Join", "~", "Ms"}]}], "\[IndentingNewLine]", "}"}], ",", " ", 
     RowBox[{"Frame", "\[Rule]", " ", "All"}]}], "]"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMinimum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient decrease in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FindMinimum/lstol\\\", ButtonNote -> \
\\\"FindMinimum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6182892579715242`*^9, 3.6182910532327023`*^9, 
  3.61840807368054*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMinimum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient decrease in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FindMinimum/lstol\\\", ButtonNote -> \
\\\"FindMinimum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6182892579715242`*^9, 3.6182910532327023`*^9, 
  3.618408073704821*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMinimum", "::", "sdprec"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Line search unable to find a sufficient decrease in the \
function value with \[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digit \
precision. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/FindMinimum\\\", \
ButtonNote -> \\\"FindMinimum::sdprec\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6182892579715242`*^9, 3.6182910532327023`*^9, 
  3.618408073790236*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMinimum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient decrease in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FindMinimum/lstol\\\", ButtonNote -> \
\\\"FindMinimum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6182892579715242`*^9, 3.6182910532327023`*^9, 
  3.618408073825519*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(FindMinimum :: lstol\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6182892579715242`*^9, 3.6182910532327023`*^9, 
  3.618408073855295*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"n\"\>", "0", "1", "2", "3", "4", "5", "6", "7"},
    {"\<\"\\!\\(\\*SubscriptBox[\\(r\\), \\(0\\)]\\)\"\>", 
     "1.7932821344502732`", "1.2753357280486657`", "1.077137703420368`", 
     "0.9937012905079631`", "1.0159240277491175`", "0.9811439085214743`", 
     "0.9536487716768337`", "0.9325015837107627`"},
    {"\<\"\\!\\(\\*SubscriptBox[\\(M\\), \\(*\\)]\\)\"\>", 
     "3.3509188715116727`", "53.00734854638878`", "621.4914268133437`", 
     "6536.697099065992`", "35182.896229535894`", "359680.113419878`", 
     "3.690580273492625`*^6", "3.8323002851627216`*^7"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.618289258024356*^9, 3.6182910532957687`*^9, 
  3.61840807392925*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "//", "TeXForm"}]], "Input",
 CellChangeTimes->{{3.6182910541202*^9, 3.618291056161413*^9}}],

Cell["\<\
\\begin{array}{ccccccccc}
 \\text{n} & 0 & 1 & 2 & 3 & 4 & 5 & 6 & 7 \\\\
 r_0 & 1.79328 & 1.27534 & 1.07714 & 0.993701 & 1.01592 & 0.981144 & 0.953649 \
& 0.932502 \\\\
 M_* & 3.35092 & 53.0073 & 621.491 & 6536.7 & 35182.9 & 359680. & \
3.69058\\times 10^6 &
   3.8323\\times 10^7 \\\\
\\end{array}\
\>", "Output",
 CellChangeTimes->{3.618291056442062*^9, 3.618408074029323*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Interactive Plot fuer variierende M, n.\
\>", "Subsection",
 CellChangeTimes->{{3.618288074378504*^9, 3.618288087804661*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"getM", "[", "n_", "]"}], " ", ":=", " ", 
  RowBox[{"Ms", "\[LeftDoubleBracket]", 
   RowBox[{"n", "+", "1"}], 
   "\[RightDoubleBracket]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "@", 
      RowBox[{"Re", "@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"g00s", "\[LeftDoubleBracket]", 
            RowBox[{"n", "+", "1"}], "\[RightDoubleBracket]"}], ",", " ", 
           RowBox[{"1", "-", 
            RowBox[{
             FractionBox[
              RowBox[{"2", "M"}], 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"n", "+", "2"}], ")"}], 
               RowBox[{"\[CapitalOmega]", "[", "n", "]"}]}]], 
             FractionBox["1", 
              SuperscriptBox["r", 
               RowBox[{"1", "+", "n"}]]]}]}]}], "}"}], "/.", 
         RowBox[{"{", 
          RowBox[{"M", "\[Rule]", " ", "m"}], "}"}]}], ")"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"r", ",", "0.03", ",", "10"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotRangePadding", "\[Rule]", "0"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotStyle", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"Red", ",", " ", "Blue"}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", "\[IndentingNewLine]", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<r / \!\(\*
StyleBox[\"L\",
FontSlant->\"Italic\"]\)\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(g\), \(00\)]\)\>\""}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1.7"}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"GridLines", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"r0s", "\[LeftDoubleBracket]", 
          RowBox[{"n", "+", "1"}], "\[RightDoubleBracket]"}], "}"}], ",", 
        RowBox[{"{", "1", "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "\[Rule]", " ", "Medium"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Epilog", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"point", "[", 
        RowBox[{"Red", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"r0s", "\[LeftDoubleBracket]", 
            RowBox[{"n", "+", "1"}], "\[RightDoubleBracket]"}], ",", 
           RowBox[{
            RowBox[{"g00s", "\[LeftDoubleBracket]", 
             RowBox[{"n", "+", "1"}], "\[RightDoubleBracket]"}], "/.", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"r", "\[Rule]", " ", 
               RowBox[{"r0s", "\[LeftDoubleBracket]", 
                RowBox[{"n", "+", "1"}], "\[RightDoubleBracket]"}]}], ",", 
              " ", 
              RowBox[{"M", "\[Rule]", " ", "m"}]}], "}"}]}]}], "  ", "}"}]}], 
        "]"}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotLabel", "\[Rule]", " ", 
      RowBox[{
      "\"\<Metric \!\(\*SubscriptBox[\(g\), \(00\)]\) of modified GUP in n=\>\
\"", "<>", 
       RowBox[{"ToString", "@", "n"}], "<>", "\[IndentingNewLine]", 
       "\"\< LXDs\\n \!\(\*SubscriptBox[\(r\), \(0\)]\)=\>\"", "<>", 
       RowBox[{"ToString", "@", 
        RowBox[{"r0s", "\[LeftDoubleBracket]", 
         RowBox[{"n", "+", "1"}], "\[RightDoubleBracket]"}]}], " ", "<>", 
       " ", "\"\<, g00(\!\(\*SubscriptBox[\(r\), \(0\)]\))=\>\"", " ", "<>", 
       RowBox[{"ToString", "@", 
        RowBox[{"Ms", "\[LeftDoubleBracket]", 
         RowBox[{"n", "+", "1"}], "\[RightDoubleBracket]"}]}], 
       "\[IndentingNewLine]", "<>", "\"\<, M=\>\"", "<>", 
       RowBox[{"ToString", "@", "m"}]}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"m", ",", "1"}], "}"}], ",", "0.4", ",", 
     RowBox[{"2", 
      RowBox[{"getM", "[", "n", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "0", ",", 
     RowBox[{
      RowBox[{"Length", "@", "g00s"}], " ", "-", " ", "1"}], ",", "1"}], 
    "}"}]}], "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.618238806536746*^9, 3.618238997310728*^9}, {
  3.618239044816156*^9, 3.6182390814958143`*^9}, {3.6182391538614883`*^9, 
  3.618239175898264*^9}, {3.618239251857008*^9, 3.618239339779728*^9}, {
  3.6182393799427834`*^9, 3.61823939980797*^9}, {3.618284088827792*^9, 
  3.618284195835208*^9}, {3.618284285081204*^9, 3.61828430822659*^9}, {
  3.618284361901849*^9, 3.618284454470286*^9}, {3.6182844847899523`*^9, 
  3.618284486754052*^9}, {3.6182845317904167`*^9, 3.618284549314127*^9}, {
  3.6182849193955603`*^9, 3.618284938075202*^9}, {3.618285522026408*^9, 
  3.6182855274585238`*^9}, {3.6182884705949297`*^9, 3.6182884713856363`*^9}, {
  3.6182892693188334`*^9, 3.61828944405879*^9}, {3.618289596170395*^9, 
  3.618289612268948*^9}, {3.6182896553102407`*^9, 3.618289685132834*^9}, {
  3.618292955288414*^9, 3.61829295539324*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`m$$ = 1, $CellContext`n$$ = 0, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`m$$], 1}, 0.4, 
      Dynamic[2 $CellContext`getM[$CellContext`n$$]]}, {
      Hold[$CellContext`n$$], 0, 7, 1}}, Typeset`size$$ = {
    450., {160., 168.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`m$80614$$ = 
    0, $CellContext`n$80615$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`m$$ = 1, $CellContext`n$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`m$$, $CellContext`m$80614$$, 0], 
        Hold[$CellContext`n$$, $CellContext`n$80615$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[
        Evaluate[
         Re[
          ReplaceAll[{
            Part[$CellContext`g00s, $CellContext`n$$ + 1], 
            1 - (2 $CellContext`M/(($CellContext`n$$ + 
              2) $CellContext`\[CapitalOmega][$CellContext`n$$])) (
             1/$CellContext`r^(
              1 + $CellContext`n$$))}, {$CellContext`M -> \
$CellContext`m$$}]]], {$CellContext`r, 0.03, 10}, PlotRangePadding -> 0, 
        PlotStyle -> {Red, Blue}, Frame -> True, 
        FrameLabel -> {
         "r / \!\(\*\nStyleBox[\"L\",\nFontSlant->\"Italic\"]\)", 
          "\!\(\*SubscriptBox[\(g\), \(00\)]\)"}, PlotRange -> {-1, 1.7}, 
        GridLines -> {{
           Part[$CellContext`r0s, $CellContext`n$$ + 1]}, {1}}, ImageSize -> 
        Medium, Epilog -> {
          $CellContext`point[Red, {
            Part[$CellContext`r0s, $CellContext`n$$ + 1], 
            ReplaceAll[
             Part[$CellContext`g00s, $CellContext`n$$ + 1], {$CellContext`r -> 
              Part[$CellContext`r0s, $CellContext`n$$ + 
                1], $CellContext`M -> $CellContext`m$$}]}]}, PlotLabel -> 
        StringJoin[
         "Metric \!\(\*SubscriptBox[\(g\), \(00\)]\) of modified GUP in n=", 
          ToString[$CellContext`n$$], 
          " LXDs\n \!\(\*SubscriptBox[\(r\), \(0\)]\)=", 
          ToString[
           Part[$CellContext`r0s, $CellContext`n$$ + 1]], 
          ", g00(\!\(\*SubscriptBox[\(r\), \(0\)]\))=", 
          ToString[
           Part[$CellContext`Ms, $CellContext`n$$ + 1]], ", M=", 
          ToString[$CellContext`m$$]]], 
      "Specifications" :> {{{$CellContext`m$$, 1}, 0.4, 
         Dynamic[2 $CellContext`getM[$CellContext`n$$]]}, {$CellContext`n$$, 
         0, 7, 1}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{507., {229., 236.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.6182849385090027`*^9, 3.618285527651147*^9, {3.618287853643016*^9, 
   3.61828787151472*^9}, 3.61828847188725*^9, 3.618288656660136*^9, {
   3.618289348546967*^9, 3.618289372504814*^9}, {3.618289411101255*^9, 
   3.618289444339127*^9}, 3.6182896128815813`*^9, {3.61828967938824*^9, 
   3.618289685513761*^9}, 3.618292955834597*^9, 3.6184080740859413`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"@", 
     RowBox[{"Re", "@"}]}], ":", " ", 
    RowBox[{
    "Cut", " ", "off", " ", "small", " ", "imaginary", " ", "parts"}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"fig", " ", "=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"n", "=", "2"}], ",", "chosenM"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"chosenM", "=", 
       RowBox[{"{", 
        RowBox[{"250", ",", " ", 
         RowBox[{"Ms", "\[LeftDoubleBracket]", 
          RowBox[{"n", "+", "1"}], "\[RightDoubleBracket]"}], ",", "1000"}], 
        "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"pointSize", "=", "0.15"}], ";", "\[IndentingNewLine]", 
      RowBox[{"labels", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"\"\<M=\>\"", "<>", 
          RowBox[{"ToString", "@", "#"}], "<>", " ", 
          "\"\<\!\(\*SubscriptBox[\(M\), \(*\)]\)\>\""}], "&"}], "/@", 
        "chosenM"}]}], " ", ";", "\[IndentingNewLine]", 
      RowBox[{"labelsSMM", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"\"\<STM, \>\"", "<>", "#"}], "&"}], "/@", "labels"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"SMM", " ", "=", " ", 
       RowBox[{"1", "-", 
        RowBox[{
         FractionBox[
          RowBox[{"2", "M"}], 
          RowBox[{"(", 
           RowBox[{"n", "+", "2"}], ")"}]], 
         FractionBox["1", 
          SuperscriptBox["r", 
           RowBox[{"1", "+", "n"}]]]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"Evaluate", "@", 
         RowBox[{"Re", "@", 
          RowBox[{"Flatten", "@", 
           RowBox[{"Table", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"g00s", "\[LeftDoubleBracket]", 
                 RowBox[{"n", "+", "1"}], "\[RightDoubleBracket]"}], ",", " ",
                 "SMM"}], "}"}], "/.", 
              RowBox[{"{", 
               RowBox[{"M", "\[Rule]", " ", "M"}], "}"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"M", ",", "chosenM"}], "}"}]}], "]"}]}]}]}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"r", ",", "0", ",", "10"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"PlotRangePadding", "\[Rule]", "0"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"#", ",", " ", 
               RowBox[{"{", 
                RowBox[{"Dashed", ",", 
                 RowBox[{"Lighter", "@", "#"}]}], "}"}]}], "}"}], "&"}], "/@", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Darker", "@", "Green"}], ",", " ", "Red", ",", " ", 
              "Blue"}], "}"}]}], ",", "1"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", "\[IndentingNewLine]", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<r / \!\(\*
StyleBox[\"L\",
FontSlant->\"Italic\"]\)\>\"", ",", 
           "\"\<\!\(\*SubscriptBox[\(g\), \(00\)]\)\>\""}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"PlotRange", "\[Rule]", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.7"}], ",", "1.7"}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Epilog", "\[Rule]", " ", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"EpiLabels", "[", 
            RowBox[{"6", ",", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"g00s", "\[LeftDoubleBracket]", 
                 RowBox[{"n", "+", "1"}], "\[RightDoubleBracket]"}], "/.", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"M", "\[Rule]", " ", "#"}], ",", 
                  RowBox[{"r", "\[Rule]", " ", "X"}]}], "}"}]}], "&"}], "/@", 
              " ", "chosenM"}], ",", "labels", ",", 
             RowBox[{"5", "/", "10"}]}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"EpiLabels", "[", 
            RowBox[{"8.5", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"SMM", "/.", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"M", "\[Rule]", " ", "#"}], ",", " ", 
                  RowBox[{"r", "\[Rule]", " ", "X"}]}], "}"}]}], "&"}], "/@", 
              " ", "chosenM"}], ",", "labelsSMM", ",", " ", 
             RowBox[{"4.1", "/", "10"}]}], "]"}], ",", "\[IndentingNewLine]", 
           
           RowBox[{"point", "[", 
            RowBox[{"Red", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"r0s", "\[LeftDoubleBracket]", 
                RowBox[{"n", "+", "1"}], "\[RightDoubleBracket]"}], ",", 
               "0"}], "}"}], ",", "pointSize"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"point", "[", 
            RowBox[{"Blue", ",", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"rootToSol", "@", 
                RowBox[{"FindRoot", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Re", "@", 
                    RowBox[{"g00s", "\[LeftDoubleBracket]", 
                    RowBox[{"n", "+", "1"}], "\[RightDoubleBracket]"}]}], "/.",
                    " ", 
                   RowBox[{"M", "\[Rule]", " ", 
                    RowBox[{"Last", "@", "chosenM"}]}]}], ",", 
                  RowBox[{"{", 
                   RowBox[{"r", ",", "1"}], "}"}]}], "]"}]}], ",", "0"}], 
              "}"}], ",", "pointSize"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"point", "[", 
            RowBox[{"Blue", ",", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"rootToSol", "@", 
                RowBox[{"FindRoot", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Re", "@", 
                    RowBox[{"g00s", "\[LeftDoubleBracket]", 
                    RowBox[{"n", "+", "1"}], "\[RightDoubleBracket]"}]}], "/.",
                    " ", 
                   RowBox[{"M", "\[Rule]", " ", 
                    RowBox[{"Last", "@", "chosenM"}]}]}], ",", 
                  RowBox[{"{", 
                   RowBox[{"r", ",", "2"}], "}"}]}], "]"}]}], ",", "0"}], 
              "}"}], ",", "pointSize"}], "]"}]}], "\[IndentingNewLine]", 
          "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"GridLines", "\[Rule]", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"r0s", "\[LeftDoubleBracket]", 
             RowBox[{"n", "+", "1"}], "\[RightDoubleBracket]"}], "}"}], ",", 
           RowBox[{"{", "1", "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"ImageSize", " ", "\[Rule]", " ", 
         RowBox[{"15", "cm"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"AspectRatio", "\[Rule]", " ", "0.6"}]}], 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"wird", " ", "in", " ", "Latex", " ", 
         RowBox[{"gemacht", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "lotLabel", "\[Rule]", " ", 
          "\"\<Metric component \!\(\*SubscriptBox[\(g\), \(00\)]\) of \
modified GUP in n=2 LXDs\>\""}], "]"}], "*)"}], "\[IndentingNewLine]", 
       "]"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwd0FsoQ3EAx/HTVtto7k2ERGu5NGs6yMhdtLZI5nLMGLnk4Sg0IUURSmqR
B5lHFgvbG5YlIi1NaIWilicPo9WYmvH/7eHb5/2b0TPc1MehKCqVBN+o7Eep
/70yK9f6Cmd8gS/o0E8H4e7fQWQeUZOpE0EdU1UIbR67AuYsuxjIKiu08DHf
UC4jCpkYNfQtfZsURHpufwuquv0pJcS82aFUeKc/FEOK+xA2yI7J4cNUNQ2N
9xvFsNNbUQkl68d18FkrUMJP88cbVJ1NeGHC3oIPjrFmfikxcW07GqbVc2Jh
TsRNDbT1Smph0jxPB13tKz3wkh65bSZyFxk/tOw0/MAGAx2C8Xx3lIaY7jwR
QbUzehRe90vDTpclj0OBfMAIA96QGTpMcguUxPwewidNpxVOnq/a4enaVVh3
l4rXQtxsPOLDIvZFCEPigjh4Mehpa8VfpawD/gOe0O9K
  "]],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0, 
     NCache[
      Rational[2, 3], 0.6666666666666666], 0], LineBox[CompressedData["
1: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
0QVaf/V27P8BtTHtgw==
     "]]}, 
   {RGBColor[
     NCache[
      Rational[1, 3], 0.3333333333333333], 
     NCache[
      Rational[7, 9], 0.7777777777777778], 
     NCache[
      Rational[1, 3], 0.3333333333333333]], Dashing[{Small, Small}], 
    LineBox[CompressedData["
1:eJwBAQT++yFib1JlAgAAAD8AAAACAAAAEWklagbCEEBmZmZmZmbmv9jCZAFa
LBFA1irww6aL4r/wQdoafS8RQJBWNKj9b+K/B8FPNKAyEUBGM463aFTivza/
OmfmOBFAtIUdDnsd4r+UuxDNckURQNwWQp2OsOG/T7S8mIteEUAW6daYYdrg
v8alFDC9kBFAXNR/Lnt43r+1iMReIPURQCAkJD96ati/qErLGIf4EUAwgkzj
TzjYv5oM0tLt+xFAzMiec0sG2L+AkN9GuwISQFhPrsmzote/TJj6LlYQEkDs
xchqRd3Wv+KnMP+LKxJAnMCX/U1Z1b8Ox5yf92ESQDisFi0IbNK/ZgV14M7O
EkB4FZjZaurJv2Nye7UMmhNAQOohDkXYr78vZyvOTGEUQLBSqmheHaw/zxIs
C3U5FUDc5isOTObEP7uugpssAxZA9OumEX/+zz97ASpQzN0WQGDyC8dSLdU/
Ctx6SG60F0AMEzAF4I/ZP+WmIZSffBhAMLN6LNcg3T+UKBkEuVUZQMZhMFPR
QeA/kJpmx2EgGkC0laPfLKXhP1qUXc4M5xpAGtG+xRva4j/4RKX5n74bQAgk
cyRhA+Q/4+VCeMKHHEBE1OFY+vnkP6I9MRvNYR1ArF0Osljo5T+thXURZy0e
QJYp/P1Ir+Y/h1VjSwP1HkBMftiN+l7nPzXcoamHzR9AbFINDZMK6D+YKZut
zUsgQMgTQrUNm+g/f8CNmEu5IEDv+/WwmijpP00bVaXKJCFAE73frSum6T9B
bsdbEYkhQAh6USq1EOo/nxxiJMz1IUAOp6rj9nnqPyTDp5ZOWyJAit96BKLT
6j+QLcIq0r4iQFnL8rdTJOs/ZvME0ckqI0CAHf5GoXTrP2Kx8iCJjyNAcmc/
23G56z9sglP8SpEjQD/YEaSYuus/dVO01wyTI0A6+hIDv7vrP4j1dY6QliNA
3BNfhAq+6z+uOfn7l50jQANaSZmcwus/+cH/1qarI0D2IWk1rcvrP5DSDI3E
xyNAFvfReYHd6z+ao21ohskjQOzJimKb3us/o3TOQ0jLI0AZ4DDntN/rP7YW
kPrLziNAUE72xObh6z/cWhNo09UjQF9RO9dF5us/J+MZQ+LjI0COMwp98e7r
PzC0eh6k5SNAUscyOQXw6z86hdv5ZecjQIzpA5QY8es/TCedsOnqI0CFhUsm
PvPrP3JrIB7x8SNAOdscwoT36z98PIH5svMjQCFCN3iV+Os/hQ3i1HT1I0AP
RE/OpfnrP5ivo4v4+CNAkPQgW8X76z+igARnuvojQD7ZLpLU/Os/q1FlQnz8
I0BGxeJp4/3rP7Qixh0+/iNASpxm4vH+6z++8yb5//8jQNYr5Pv//+s/KLbw
Sw==
     "]]}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[1, 
     NCache[
      Rational[1, 3], 0.3333333333333333], 
     NCache[
      Rational[1, 3], 0.3333333333333333]], Dashing[{Small, Small}], 
    LineBox[CompressedData["
1:eJwB0QIu/SFib1JlAgAAACwAAAACAAAAzT9PcwK2FkBmZmZmZmbmv3sBKlDM
3RZAiJ6KSms65b8K3HpIbrQXQPD2Q442jt+/5aYhlJ98GEDgOkrBnLDWv5Qo
GQS5VRlA8A6eiJSLzL+QmmbHYSAaQHCnjN3ne72/WpRdzgznGkBAFoZFte+V
v/hEpfmfvhtAmNyC2R2csT/j5UJ4woccQHjl9xMzYsI/oj0xG81hHUDItHnw
gKTLP62FdRFnLR5AJK+od1yv0T+HVWNLA/UeQJ5VFtLlGNU/NdyhqYfNH0DO
mVxLD27YP5gpm63NSyBArHagamY82z9/wI2YS7kgQFg6MzYu/N0/TRtVpcok
IUC7CIxxPjbgP0Fux1sRiSFAvBYNZRc/4T+fHGIkzPUhQKxiZIrBROI/JMOn
lk5bIkAucbkzqyPjP5AtwirSviJA9JbXiUXs4z9m8wTRySojQOA9sOzms+Q/
YrHyIImPI0DQ/Nki+V7lP2yCU/xKkSNAY6rP9dVh5T91U7TXDJMjQMxAtsGx
ZOU/iPV1jpCWI0C+4y1GZmrlP645+fuXnSNAPUifDsN15T/5wf/WpqsjQJ2L
fgNMjOU/kNIMjcTHI0DtaR2gnrjlP5qjbWiGySNARDUVcVu75T+jdM5DSMsj
QGqzRUkXvuU/thaQ+svOI0Ak9gkRjMPlP9xaE2jT1SNAkgYjCmrO5T8n4xlD
4uMjQBwl9AH44+U/MLR6HqTlI0BA8LF5peblPzqF2/ll5yNAl9ly/1Hp5T9M
J52w6eojQHLMqDao7uU/cmsgHvHxI0BqRoRfSfnlP3w8gfmy8yNA7aP7Uu/7
5T+FDeLUdPUjQLz1xVeU/uU/mK+ji/j4I0B/PPeW2wPmP6KABGe6+iNALIov
0n0G5j+rUWVCfPwjQNx9XSAfCeY/tCLGHT7+I0AiOumBvwvmP77zJvn//yNA
rqo6914O5j8UsVz+
     "]]}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1: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
Q20badclS7aZiFGR8EvG/gukNyieVbktSUWyPs0G90l37s5Q/ECjIm2tZ3vS
SYefFFjVtpKKWvj3yjeQ3u9oJiG0moqYQ4McJmlu0Psl2+SoSLU2rliUIOs3
YeHfBUUqSnfzClQmbfnlxEyoEhVJ3XyMdEnTfr4dz1OmIvd9s7PHSVdMzPUP
qlCRvlzRByvSPsLHOqnqVHR2Pd9FJ9IaaxOb0BYqGjSslvIm3b+HW+WgSUVX
j26v9ycdbWpUEruTijIqjz8KIm10/VVe+W4qqlXQPBVMmi+YncnWoSKl0Mn1
90lnvzZIUdxLRccozwQCSV8teBFvvJ+KdtzXmfAhvaaFGeV9kIr+PeIMu5Cu
n9z/MMWQiijRDZzLpAOXxtz9eYSMt50hdYq0Fn3ch/84FR001zXWIz2mvdd1
80kqyh6YilMj/erU02sWZlQkTaEKryB90mnEKticjF878yGP3D/hEB3znHNU
pHm/Y1sH6YI3j48zLKlofVcSL4+00q9dSMeGXK+i+aQj6VZm2E47OyrKzLKm
HyAdKtKn/syB3O/Io37SpNk6IbKsG1SU3yP4NYfMhxSzLprcTSraxx5/dYe0
hfPW5Ye9qMgvlf3pEOnSxHYi0Y+KCp2eejeQ+eZRqD7VEEBFqVQjjcekVVv9
R/7doyLkcUbOmHTksk2tp8OoyC0xPR2T+XzJxfvT8lhyfu+0tjtk/u/Y2vVp
YxyZPyvZhmqkRaZQjv4rKgrUGVNoIesp01nos18yFQ2JJ/ErkJ53epzLzqIi
hX/UpsgpAuo02LmSOVTUTi2N30T6NfNUnnoeFfkw7/Zgsn4POa3Jv4qp6Kvj
SFkPWd9R199+6aymok6FclNBsh/YbhYp4NWS+68Wz703QYD2pH2BVCMV5WX9
lFtCmuG49euxViq6ZfFvfmGMzC/Hr4Wl/VS0fDp0ezPZjyrtm4o//KUinQds
JEz2rxeqO0oq+WhIJKTs7yWyvzmNRZcMCtBQftURi69k/5OyP/9NQYSGKCmi
QrYMAqyujZRGStGQXB4XJfaQ8dkulPtspqGqLcnc9+1kfButKmK20pBprW5W
XxsZ30hpRc52Gto6EbRpJelDtiGVzD005Dr13NrzFxnf1RXV1gY0JLGxTIne
TMBmm021RhdpSMvwnrfoD/L8s5W/nmZNQ8u6wwaWk+dDqD1VQuwqDTVLHq5Z
Wk3AiPPc8TpHGjJ5vXfVfAUBb3yqfx73oSF/Ze+pklICVkZc+33qGQ1lb+x5
1/GFgIWC92OWP2hIuSLi1KEUAtJxfFhxPQ0lNqg0zZPnnUXJE/W1zTS0T19c
Kj2JgLxybydGOw2FvSmeXUqejzcaD7MvD9MQf1SR7ds4AoaG/szZCaxAruEW
f70iyPgpqsvcdq1AwrfmrCO9/tffHEaea69AXscP5cl7kvOVp5eXwAr0an7A
PPUmAQ99tgRK6K9AxJB42GdXsr4Hd/x9b7ICKQgrdGHy/aAqb+9k37UVqCyB
m3vHioAyS7OmYy9XIPeEkvMtBgR8Sfd/riogheqclHIUJcn+bGQq80xICt1e
M+u3XpyA4yPKMYtEpFCgrFH1RlFyvfQfUS0SUojP5+ngpqUEUGNWRvjJSaFj
b2Wc5Mj3pWsBH+4375JCDbzrjwqZPFh9usXNx0kKlczerufW8sB7kcqxmt9S
yEM1L60oiAcinV4GjtkrEWdth3IGkwsDyYqR8T7SaJbeLzpozoXIDasE80xX
ob1LHzlP/zcL4bFXyi8qyCBD30H2r5WzYB55rnb5kAyi1rboRt2ZAe7+JF58
4Wp0Y3ZJ25F+DjAG9nmUBK1B991UP/w6zYHXOltW/7goizQjKdky1WxIu+sm
aaMmh268+hYWeIwNQaaXDgtw5JBXyIIiq5f8/9KZkBr0Qx51Ct7oGXSdhuiN
z9N+HFZAubnP3XRWTcPtorDow3kKaN4zUvtB0RQcWW2aVKWkiBbT4GnKjSnY
61h+VjJYEVn6XjvgoDkF8WuslGo4ikiwLlzfkssCpW9vo4zPrkVmmmmXI8tZ
EK5WotJYuBZhM3n8O44FV6YFGypV6Kja+3f3J3cWWH2cUgh+REcaR2hqWmYs
sPc/MW/4mI6OVecnfzrFArcT2b+WP6GjoOIm122k73PcHoZH0dHTJ6GiGqYs
SN/Fm3sWR0eGVLtNaidYwCteaEl+T0fameF/dhwl529cHlZaTkeMgVUrgw6y
IPaNw9V7lXS0/qTlFzHSb1xr9Qyq6egt+pwWpc+CHKlworqWjgZX13m/PcCC
TnPq1aafdDTzekdujR4LlBmr9PoYdLQ4+tW9dYgFGtlecokDdHT31if2R2DB
7rsdvMtDdDTvW5amS9pIOS5zZJT8PT+N74wuC1yuKcixWHQUMr5a4bE2C3y0
7/CypunIqjuvR570XdG+ZlcOHR0+VjeavocF0RlvHnC5dNR45FX7j90seO0n
aJNP0NGXtjl8jvT745f3+czTkQlDbGJ8Fwuy136X1f1HR+diU61vkS6cXs9b
WKCjob0v6OKk/w9wuWs7
     "]]}, 
   {RGBColor[
     NCache[
      Rational[1, 3], 0.3333333333333333], 
     NCache[
      Rational[1, 3], 0.3333333333333333], 1], Dashing[{Small, Small}], 
    LineBox[CompressedData["
1:eJwBgQJ+/SFib1JlAgAAACcAAAACAAAApjGx9aOcGkBmZmZmZmbmv1qUXc4M
5xpAmLsE6ZCX5L/4RKX5n74bQLzfZtz25N+/4+VCeMKHHEDcXfE4LTDYv6I9
MRvNYR1AoBKNbzq90L+thXURZy0eQJhmPSBwC8W/h1VjSwP1HkCANvBEriC0
vzXcoamHzR9AANekGhomdT+YKZutzUsgQPh4Qqi2YbM/f8CNmEu5IEDsvl8P
q4nCP00bVaXKJCFANNH73bpiyj9BbsdbEYkhQDzQi1KphdA/nxxiJMz1IUBu
OFUdt8/TPyTDp5ZOWyJATvzWIxCd1j+QLcIq0r4iQMpalr+dItk/ZvME0ckq
I0D86/A3CqXbP2Kx8iCJjyNAkDv72Y7L3T9sglP8SpEjQPrBjiDF1N0/dVO0
1wyTI0DQ0ZcY+N3dP4j1dY6QliNA4J74IlTw3T+uOfn7l50jQBbQSsrkFN4/
+cH/1qarI0CuD0mraV3eP5DSDI3ExyNAtLiPzgvs3j+ao21ohskjQGBPVhTb
9N4/o3TOQ0jLI0DIAIc5p/3eP7YWkPrLziNAfHKyJzYP3z/cWhNo09UjQPaK
2rkuMt8/J+MZQ+LjI0BynFHoi3ffPzC0eh6k5SNAkDqWySmA3z86hdv5Zecj
QGBMH6DEiN8/TCedsOnqI0AmLFwy8ZnfP3JrIB7x8SNAyNnmECa83z98PIH5
svMjQAoRusGrxN8/hQ3i1HT1I0B6IHpyLs3fP5ivo4v4+CNAfqQH2Sre3z+i
gARnuvojQO7JdpGk5t8/q1FlQnz8I0AwKhZPG+/fP7Qixh0+/iNATOI0E4/3
3z++8yb5//8jQKxeId///98/jRo7HQ==
     "]]}},
  AspectRatio->0.6,
  Axes->True,
  AxesOrigin->{0, 0},
  Epilog->{{
     InsetBox[
      BoxData[
       FormBox[
        RotationBox[
         InterpretationBox[
          Cell[
           BoxData[
            FormBox[
            "\"M=250\\!\\(\\*SubscriptBox[\\(M\\), \\(*\\)]\\)\"", TextForm]],
            "InlineText", Background -> GrayLevel[1]], 
          Text[
          "M=250\!\(\*SubscriptBox[\(M\), \(*\)]\)", Background -> 
           GrayLevel[1]]], BoxRotation -> -0.09308249812350614], 
        TraditionalForm]], 
      NCache[{
       6, 1 + Rational[-125, 
           5184] (-12 + (6 + 
            6 (6 (-1)^Rational[1, 4] + 
              6 (Complex[0, 3] + 6 (-1)^Rational[3, 4]))) 
           E^((-6) (-1)^Rational[1, 4]) + (6 - 
            6 (6 (-1)^Rational[3, 4] + 
             6 (Complex[0, 3] + 6 (-1)^Rational[1, 4]))) 
           E^(6 (-1)^Rational[3, 4]))/Pi}, {6, 1.1362845213046355`}]], 
     InsetBox[
      BoxData[
       FormBox[
        RotationBox[
         InterpretationBox[
          Cell[
           BoxData[
            FormBox[
            "\"M=621.491\\!\\(\\*SubscriptBox[\\(M\\), \\(*\\)]\\)\"", 
             TextForm]], "InlineText", Background -> GrayLevel[1]], 
          Text[
          "M=621.491\!\(\*SubscriptBox[\(M\), \(*\)]\)", Background -> 
           GrayLevel[1]]], BoxRotation -> -0.23054058170391512`], 
        TraditionalForm]], 
      NCache[{6, 
        Complex[1.338798646392766, -8.47345450548963*^-18]}, {
       6, 1.338798646392766}]], 
     InsetBox[
      BoxData[
       FormBox[
        RotationBox[
         InterpretationBox[
          Cell[
           BoxData[
            FormBox[
            "\"M=1000\\!\\(\\*SubscriptBox[\\(M\\), \\(*\\)]\\)\"", 
             TextForm]], "InlineText", Background -> GrayLevel[1]], 
          Text[
          "M=1000\!\(\*SubscriptBox[\(M\), \(*\)]\)", Background -> 
           GrayLevel[1]]], BoxRotation -> -0.3683759967673215], 
        TraditionalForm]], 
      NCache[{
       6, 1 + Rational[-125, 
           1296] (-12 + (6 + 
            6 (6 (-1)^Rational[1, 4] + 
              6 (Complex[0, 3] + 6 (-1)^Rational[3, 4]))) 
           E^((-6) (-1)^Rational[1, 4]) + (6 - 
            6 (6 (-1)^Rational[3, 4] + 
             6 (Complex[0, 3] + 6 (-1)^Rational[1, 4]))) 
           E^(6 (-1)^Rational[3, 4]))/Pi}, {6, 1.5451380852185421`}]]}, {
     InsetBox[
      BoxData[
       FormBox[
        RotationBox[
         InterpretationBox[
          Cell[
           BoxData[
            FormBox[
            "\"STM, M=250\\!\\(\\*SubscriptBox[\\(M\\), \\(*\\)]\\)\"", 
             TextForm]], "InlineText", Background -> GrayLevel[1]], 
          Text[
          "STM, M=250\!\(\*SubscriptBox[\(M\), \(*\)]\)", Background -> 
           GrayLevel[1]]], BoxRotation -> 0.17491468868555832`], 
        TraditionalForm]], {8.5, 0.7964583757378384}], 
     InsetBox[
      BoxData[
       FormBox[
        RotationBox[
         InterpretationBox[
          Cell[
           BoxData[
            FormBox[
            "\"STM, M=621.491\\!\\(\\*SubscriptBox[\\(M\\), \\(*\\)]\\)\"", 
             TextForm]], "InlineText", Background -> GrayLevel[1]], 
          Text[
          "STM, M=621.491\!\(\*SubscriptBox[\(M\), \(*\)]\)", Background -> 
           GrayLevel[1]]], BoxRotation -> 0.4310348477645919], 
        TraditionalForm]], {8.5, 0.4940025020856148}], 
     InsetBox[
      BoxData[
       FormBox[
        RotationBox[
         InterpretationBox[
          Cell[
           BoxData[
            FormBox[
            "\"STM, M=1000\\!\\(\\*SubscriptBox[\\(M\\), \\(*\\)]\\)\"", 
             TextForm]], "InlineText", Background -> GrayLevel[1]], 
          Text[
          "STM, M=1000\!\(\*SubscriptBox[\(M\), \(*\)]\)", Background -> 
           GrayLevel[1]]], BoxRotation -> 0.682473001024189], 
        TraditionalForm]], {8.5, 0.1858335029513536}]}, 
    InsetBox[
     GraphicsBox[{
       Opacity[0.9], 
       RGBColor[1, 0, 0], 
       DiskBox[{0, 0}]}], {1.077137703420368, 0}, {0, 0}, 0.15], 
    InsetBox[
     GraphicsBox[{
       Opacity[0.9], 
       RGBColor[0, 0, 1], 
       DiskBox[{0, 0}]}], {0.38349546639349513`, 0}, {0, 0}, 0.15], 
    InsetBox[
     GraphicsBox[{
       Opacity[0.9], 
       RGBColor[0, 0, 1], 
       DiskBox[{0, 0}]}], {2.0151689747645105`, 0}, {0, 0}, 0.15]},
  Frame->True,
  FrameLabel->{{
     FormBox[
     "\"\\!\\(\\*SubscriptBox[\\(g\\), \\(00\\)]\\)\"", TraditionalForm], 
     None}, {
     FormBox[
     "\"r / \\!\\(\\*\\nStyleBox[\\\"L\\\",\\nFontSlant->\\\"Italic\\\"]\\)\"\
", TraditionalForm], None}},
  GridLines->{{1.077137703420368}, {1}},
  ImageSize->425.1968503937008,
  Method->{},
  PlotRange->{{0, 10}, {-0.7, 1.7}},
  PlotRangeClipping->True,
  PlotRangePadding->0]], "Output",
 CellChangeTimes->{{3.618290394795435*^9, 3.618290410666449*^9}, 
   3.6184080742925587`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<../../Master-Calc18/figures/g00-n2.pdf\>\"", ",", "fig"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.618287040424086*^9, 3.6182870902776012`*^9}}],

Cell[BoxData["\<\"../../Master-Calc18/figures/g00-n2.pdf\"\>"], "Output",
 CellChangeTimes->{{3.618287085649706*^9, 3.6182870935822763`*^9}, {
   3.618287739940785*^9, 3.618287757295025*^9}, 3.618290412475667*^9, 
   3.618408076709306*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fig", " ", "=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"n", "=", "5"}], ",", "chosenM"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"chosenM", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0.5", 
         RowBox[{"Ms", "\[LeftDoubleBracket]", 
          RowBox[{"n", "+", "1"}], "\[RightDoubleBracket]"}]}], ",", " ", 
        RowBox[{"Ms", "\[LeftDoubleBracket]", 
         RowBox[{"n", "+", "1"}], "\[RightDoubleBracket]"}], ",", 
        RowBox[{"1.5", 
         RowBox[{"Ms", "\[LeftDoubleBracket]", 
          RowBox[{"n", "+", "1"}], "\[RightDoubleBracket]"}]}]}], "}"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"pointSize", "=", "0.15"}], ";", "\[IndentingNewLine]", 
     RowBox[{"labels", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "\"\<M=0.5 \!\(\*SubscriptBox[\(M\), \(*\)]\)\>\"", ",", " ", 
        "\"\<M=\!\(\*SubscriptBox[\(M\), \(*\)]\)\>\"", ",", " ", 
        "\"\<M=1.5 \!\(\*SubscriptBox[\(M\), \(*\)]\)\>\""}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"SMM", " ", "=", " ", 
      RowBox[{"1", "-", 
       RowBox[{
        FractionBox[
         RowBox[{"2", "M"}], 
         RowBox[{"(", 
          RowBox[{"n", "+", "2"}], ")"}]], 
        FractionBox["1", 
         SuperscriptBox["r", 
          RowBox[{"1", "+", "n"}]]]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Evaluate", "@", 
        RowBox[{"Re", "@", 
         RowBox[{"Flatten", "@", 
          RowBox[{"Table", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"g00s", "\[LeftDoubleBracket]", 
                RowBox[{"n", "+", "1"}], "\[RightDoubleBracket]"}], ",", " ", 
               "SMM"}], "}"}], "/.", 
             RowBox[{"{", 
              RowBox[{"M", "\[Rule]", " ", "M"}], "}"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"M", ",", "chosenM"}], "}"}]}], "]"}]}]}]}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"r", ",", "0", ",", "10"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"PlotRangePadding", "\[Rule]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"#", ",", " ", 
              RowBox[{"{", 
               RowBox[{"Dashed", ",", 
                RowBox[{"Lighter", "@", "#"}]}], "}"}]}], "}"}], "&"}], "/@", 
           
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Darker", "@", "Green"}], ",", " ", "Red", ",", " ", 
             "Blue"}], "}"}]}], ",", "1"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<r / \!\(\*
StyleBox[\"L\",
FontSlant->\"Italic\"]\)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(g\), \(00\)]\)\>\""}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotRange", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.7"}], ",", "1.7"}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Epilog", "\[Rule]", " ", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"EpiLabels", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"4.5", ",", "5.0", ",", " ", "5.5"}], "}"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"g00s", "\[LeftDoubleBracket]", 
                RowBox[{"n", "+", "1"}], "\[RightDoubleBracket]"}], "/.", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"M", "\[Rule]", " ", "#"}], ",", 
                 RowBox[{"r", "\[Rule]", " ", "X"}]}], "}"}]}], "&"}], "/@", 
             " ", "chosenM"}], ",", "labels", ",", 
            RowBox[{"6", "/", "10"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"point", "[", 
           RowBox[{"Red", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"r0s", "\[LeftDoubleBracket]", 
               RowBox[{"n", "+", "1"}], "\[RightDoubleBracket]"}], ",", "0"}],
              "}"}], ",", "pointSize"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"point", "[", 
           RowBox[{"Blue", ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"rootToSol", "@", 
               RowBox[{"FindRoot", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Re", "@", 
                   RowBox[{"g00s", "\[LeftDoubleBracket]", 
                    RowBox[{"n", "+", "1"}], "\[RightDoubleBracket]"}]}], "/.",
                   " ", 
                  RowBox[{"M", "\[Rule]", " ", 
                   RowBox[{"Last", "@", "chosenM"}]}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"r", ",", "0.5"}], "}"}]}], "]"}]}], ",", "0"}], 
             "}"}], ",", "pointSize"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"point", "[", 
           RowBox[{"Blue", ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"rootToSol", "@", 
               RowBox[{"FindRoot", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Re", "@", 
                   RowBox[{"g00s", "\[LeftDoubleBracket]", 
                    RowBox[{"n", "+", "1"}], "\[RightDoubleBracket]"}]}], "/.",
                   " ", 
                  RowBox[{"M", "\[Rule]", " ", 
                   RowBox[{"Last", "@", "chosenM"}]}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"r", ",", "2"}], "}"}]}], "]"}]}], ",", "0"}], 
             "}"}], ",", "pointSize"}], "]"}]}], "\[IndentingNewLine]", 
         "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"GridLines", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"r0s", "\[LeftDoubleBracket]", 
            RowBox[{"n", "+", "1"}], "\[RightDoubleBracket]"}], "}"}], ",", 
          RowBox[{"{", "1", "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"Exclusions", "\[Rule]", " ", 
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", "0.1"}], "]"}]}], ",", " ", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"hat", " ", "quasi", " ", "keinen", " ", "Effekt"}], 
           "..."}], " ", "sollte", " ", "bloss", " ", "senkrechte", " ", 
          "Striche", " ", "bei", " ", "r"}], "=", 
         RowBox[{"0", " ", "unterbinden"}]}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"ImageSize", " ", "\[Rule]", " ", 
        RowBox[{"15", "cm"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"AspectRatio", "\[Rule]", " ", "0.6"}]}], 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Wird", " ", "in", " ", "Latex", " ", "gemacht"}], " ", "*)"}],
       "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"PlotLabel", "\[Rule]", " ", 
         RowBox[{
         "\"\<Metric component \!\(\*SubscriptBox[\(g\), \(00\)]\) of \
modified GUP in n=\>\"", "<>", 
          RowBox[{"ToString", "@", "n"}], "<>", "\"\< LXDs\>\""}]}], "]"}], 
       "*)"}], "\[IndentingNewLine]", "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.618289744119729*^9, 3.6182897858862457`*^9}, {
   3.6182898244604263`*^9, 3.6182899378731823`*^9}, {3.618290023950027*^9, 
   3.618290126301992*^9}, {3.618290189186942*^9, 3.618290216806665*^9}, {
   3.618290354407818*^9, 3.618290370185111*^9}, 3.618290405661428*^9, {
   3.618290827084375*^9, 3.6182908276304293`*^9}, {3.618290871727602*^9, 
   3.6182908865076847`*^9}, {3.6182909232879553`*^9, 3.618290932816822*^9}, {
   3.6182909788395042`*^9, 3.618290994380465*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0, 
     NCache[
      Rational[2, 3], 0.6666666666666666], 0], LineBox[CompressedData["
1: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
Y/c+pgLPrsQI43ZZpKJhOcWIooKp3cHjGV2yKOTObIzLIyp8+q9g6fgIfl/t
orBT96nwmRyg27Yqi2a2lgQN3KTC5K7D6avsRGSYYIaqg6jAZ6zMt309ERnw
1D9NvkEFc4+e7nB+IkoKObvZ5ToVWvL3XzOUJKLs1a+OPAFU+Lqbu6Jcg4jG
n2uldfhQYcqYIjeyi4isOVbLu72pIOTw9t4GbSKKl7t5fMCLCpbXvex99xPR
J54bVn89qdBa84211ZyI7jWyNRq5U6HNJGn3UzciSt+Uqm5/kgrCa7ey3p0l
ooIJE+p9ZyocLj+7seccvt+rTKHqE/jzSnv+SVwkov2zxhGqx6nwhb2zKjqI
iCTCLlsoO+J4vttgdDeBiGjaAcoxNjj+fkuv058Q0UdnC4FJa7z/24Y21aUQ
kVf7U3Mj7IakEu7VdCJKNDLtXrOiwofLR75cKSSinuksyVhLKlSrRVl7NRPR
5XMublvNqLA8GlAf/oWI3m3vScQHedBLdd6V00pEohEtkpuxKwV2SIx0ENHm
TbfXVEypUDHR0u08QEQf7KuNbYyp8DfttVnQMHZ+csvgASrscUh5lzxGRGgw
N8kfu7zR62kXHT9/JWMt1YgKrzP4TlkvElGVMh9DyJAK806z331XiGhn/tmI
IgMqaIr2GESxkVCh6C0PW+yS27lKLVwkVHl9Q3e6PhVm9jyOn+QlIcmPeV6H
sNUZV7l4BUmoO1RdZxFRofCE6fiBDSRk+nxXsBP2lJi6o5sECXUxmv4JYu9o
2fg5RApfT/XLrQcq5OuOvayVI6FvX7XydmPnbQy7oKNKQuTteyV27cf1ILJ2
O1mNhEbTXpnO76MChf9qzMpOEtrRtlHwDbY427myOh0SemvzwdgIW31xsJG8
j4S8l268FcI2mz/WFYpISIZH/u1vPSrcHj+0dNCEhPam8TgFYScPNgrkm+H1
Vb7/ewS7vBdIQpYkNOZkLLcVu62zQs33CAnplVm1cGBT2zT0221JiKSasPpn
L86HL3nWuxxISO5Iy+tqbPmPZLeEYyRkNZpNT8XeW5ty+a8zCQX392aHYNu9
Fb/n5EpCj0+TBj2wL5ZGJlWdIaGyr6TkI9gRBdx5JE8Sqn4V9V0POyv79rvb
3iR0qlXh7jbsuuf/WgYvkNB91dBiaeze5Et/jPxIKIrD00EQmxVPZWQF4Ps3
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
QQ==
     "]], 
    LineBox[{{-0.00014349489813332802`, 1.7}, {-0.00014349489795918366`, 
     1.}, {-0.0001434948977057688, 1.7}}], 
    LineBox[{{-0.00016900510258201736`, 1.7}, {-0.00016900510204081632`, 
     1.}, {-0.00016900510163466565`, 1.7}}], 
    LineBox[{{-0.0002040816326530611, -0.7}, {-0.0002040816326530611, 1.7}}], 
    LineBox[{{-0.00010161293675239667`, -0.7}, {-0.00010161293669489168`, 
     1.7}}], LineBox[{{0.00005163714498332028, 1.7}, {
     0.000051637144991090884`, -0.7}}], 
    LineBox[{{-0.00005087777834678101, -0.7}, {-0.00005087777834498394, 
     1.7}}], LineBox[{{-0.00012553539275308542`, 
     1.7}, {-0.0001255353919780606, -0.7}}], 
    LineBox[{{0.00007803601175067466, 1.7}, {0.00007803601178153897, -0.7}}], 
    LineBox[{{0.000013994489552242645`, 1.7}, {
     0.00001399448955225027, -0.7}}], 
    LineBox[{{0.00011664212206987913`, 1.7}, {
     0.00011664212228545586`, -0.7}}], 
    LineBox[{{0.00016854819585842713`, -0.7}, {0.0001685481971259781, 1.7}}], 
    LineBox[{{0.00004119515619341236, -0.7}, {0.00004119515619528951, 1.7}}], 
    LineBox[{{-0.00011433516270151691`, -0.7}, {-0.00011433516257598048`, 
     1.7}}], LineBox[{{0.0000916526742415431, -0.7}, {0.0000916526743027283, 
     1.7}}], LineBox[{{-0.000011997791972935693`, -0.7}, \
{-0.000011997791972934362`, 1.7}}], 
    LineBox[{{0.00016034030778452996`, 1.7}, {
     0.00016034030854015902`, -0.7}}], 
    LineBox[{{0.0000846823014605407, -0.7}, {0.00008468230187212887, 1.7}}], 
    LineBox[{{0.00018597567049058808`, 1.7}, {
     0.00018597567212127526`, -0.7}}], 
    LineBox[{{-0.00008095504601107094, -0.7}, {-0.00008095504596575994, 
     1.7}}], LineBox[{{-0.000031628295352788636`, -0.7}, \
{-0.00003162829535239893, 1.7}}], 
    LineBox[{{0.00017464945285769357`, -0.7}, {0.0001746494604784978, 1.7}}], 
    LineBox[{{0.00014961481824602653`, 1.7}, {
     0.00014961481928879908`, -0.7}}], 
    LineBox[{{-6.366517195113341*^-6, -0.7}, {-6.366517195113339*^-6, 1.7}}], 
    LineBox[{{0.0001576734454871829, -0.7}, {0.0001576734469668122, 1.7}}], 
    LineBox[{{-0.0001240149058435462, -0.7}, {-0.00012401490561408105`, 
     1.7}}], LineBox[{{-0.000021236705011365905`, -0.7}, \
{-0.000021236705011336414`, 1.7}}], 
    LineBox[{{0.00018334388182190015`, -0.7}, {0.00018334388437126354`, 
     1.7}}], LineBox[{{-0.00008421758320954332, 
     1.7}, {-0.00008421758317916565, -0.7}}], 
    LineBox[{{0.00011970636855440632`, -0.7}, {0.00011970636883085564`, 
     1.7}}], LineBox[{{-0.000032614650295182506`, 
     1.7}, {-0.00003261465029409072, -0.7}}], 
    LineBox[{{0.00017068880235941285`, 1.7}, {
     0.00017068880703035403`, -0.7}}], 
    LineBox[{{0.000041722094385832095`, 1.7}, {
     0.000041722094387775134`, -0.7}}], 
    LineBox[{{-0.0000600986184936319, -0.7}, {-0.00006009861847638623, 1.7}}],
     LineBox[{{0.00014559892234977727`, -0.7}, {0.00014559892273568393`, 
     1.7}}], LineBox[{{0.00009357260219881321, 1.7}, {
     0.00009357260228056906, -0.7}}], 
    LineBox[{{-8.737568631513652*^-6, 1.7}, {-8.737568631513198*^-6, -0.7}}], 
    LineBox[{{0.0001972144315702184, -0.7}, {0.00019721443679187087`, 1.7}}], 
    LineBox[{{0.000011918005408857773`, -0.7}, {0.000011918005408862923`, 
     1.7}}], LineBox[{{0.00011361122342278573`, -0.7}, {
     0.00011361122356111967`, 1.7}}], 
    LineBox[{{-0.00006450722154120134, 
     1.7}, {-0.00006450722152361705, -0.7}}], 
    LineBox[{{-0.00011569537528837093`, 
     1.7}, {-0.00011569537504330701`, -0.7}}], 
    LineBox[{{0.00008635713143611546, 1.7}, {0.00008635713151181844, -0.7}}], 
    LineBox[{{-0.000015828771272855795`, 
     1.7}, {-0.00001582877127285039, -0.7}}], 
    LineBox[{{0.00012567353730414164`, 1.7}, {
     0.00012567353759290444`, -0.7}}], 
    LineBox[{{0.00007585046378484518, -0.7}, {0.00007585046379878985, 1.7}}], 
    LineBox[{{-0.000026796098887896744`, 
     1.7}, {-0.000026796098887643593`, -0.7}}], 
    LineBox[{{0.00017552998683404453`, 1.7}, {
     0.00017552998836543188`, -0.7}}], 
    LineBox[{{0.000050807717070219775`, -0.7}, {0.00005080771707289959, 
     1.7}}], LineBox[{{-0.00005186394019685081, 
     1.7}, {-0.00005186394018622268, -0.7}}], 
    LineBox[{{-0.00010265914847268175`, 
     1.7}, {-0.00010265914838958085`, -0.7}}], 
    LineBox[{{0.0002025625130065349, 1.7}, {0.00020256252280631442`, -0.7}}]}, 
   {RGBColor[
     NCache[
      Rational[1, 3], 0.3333333333333333], 
     NCache[
      Rational[7, 9], 0.7777777777777778], 
     NCache[
      Rational[1, 3], 0.3333333333333333]], Dashing[{Small, Small}], 
    LineBox[CompressedData["
1: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
YOxZC2cK/hnX/Dk3R+BOSNqisI+CfwEKhOrk
     "]]}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1: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
MYf/AQsCu48=
     "]], LineBox[CompressedData["
1:eJwd1gs0VPsXB3BJXrlCiHmcwVCKkluI0t4hPUiokFC5eojyKFJS6obIsxQi
PTySy1VICoUk1ZSoRElUzozXiOQd/9/9z1qzZn3WrPP7/dbZe3/PUXf3sd8j
KiIi0km+//0W5MxbpsqTx2X//0yAS46OR0q9PE5kxf3jrzcBkc+SxGaJK6BV
XPkRj4FxWNXRM6EvpYAafuLW1/rG4cc4/HSTUcBH87zFm7rGwWmJoKNUQQGH
ov2WGX0dB+1LKx57cxTwxKyOprrGcahzbzn2boUCjh7JidQtGgfJKUZ/hhe5
vv3Urzl+4xC+PL3FrEEBhyeCDjK/joH9QpvBM8lzsc3uQP2d7FEYfGej94+v
IjpYFr+ZWjgCbb5Zj91NlHBFRax1/91fkP7E+oiokjJe9+pxaJ07BIvTr3pn
9ihj3nTBu5CwQZD0tCh9XzQPm1JHNlzUHID73Su1+6NVcGFHXXjLuX4ocons
SXJUxaa6WV5h0AdXVmQlFTqr4uf3QXLaRn1wRrHK/JWrKlp8rI6sX9IHtrzR
VFEPVdzC+mtal+qD3pX7rQ/6qiImPluk8bsX5jPX5ZtFqmJY7QnlkbJeSG4R
8+l7qIqFb7L1HU17IcQhdNCMYuBTBqfbYnMPYMBiuKHOQF8bn+TYdT0gmvjx
/LQmAyf5LzzaoAfCG5Zrlesw0ELrt0v80h6It+5yNDBmoARV3W+q0AOZZvYV
C7Yy8My1jqLKpm7gLdE8JxPFwE+TBkHeHt0Qu6nh3YEYBiZvjtM54doNdt4n
1Z/HM1DOzYlzwaEbmm43PwxLYmAbeLx8s74b2jVj+qYyyXncr21MWdwNQ4xh
+4HHDNTx++e042gXMCXq2E2/GNgoYH+IvtAF6SHVt8ZHGRi9PoNTH90FGkPl
+pxJBh62CBIoR3TBoo67a/eLMnGB6MhESXAXrChLPTguy8TNxnw94z1d4ODj
U0FpM9Et+rZwrXEXxH9Qdt3nzERDd7756U4BKNrI88+7MrE1lv3qcLsAkmtm
+93ZxUQnL26z1ycBXLsrEja2l4lx0dKHvRsE8O/57rzzh5novevq/YIKAbyE
R5MF0UzktllsWp0kAPGcPWmjj5i4dl1KxjEbAezZPVC7q5qJ68wZho82CKCG
ETJQ95SJ12bnGkitFcCZmETLFB4Te3YGHitcKYAp/yc/jD8ysVw0aIb9QgEM
m6qvDf7FxLqU7iM1swRAv23t+63Dwh6x96v8nvBhbcx+lb16LCzknR45/ZgP
mZZDZq//ZCHL+4hYShkf3B/MTk43ZqGoabfcxyI+tKWbmME6Fp47fvn9rUw+
NHkmXw51Z+GrQOk5fhF8eDq9BWamsPBhwZfrd+34QMstvqWfxkJThjDtsQ0f
xDXE5+y6xsISX4mxRis+WFqUtpVnsdCNmcKTsuRD7TnWycBCFh655/X4vgkf
6uQ7y7tesjBIY7RirhYfBBqPNFXqWagSb7XgqAYfJJcnRVs2stDBPa31C4cP
6x02uGQ0s1BMolOrisGH51fyJ1w6WRjhu+uPJ3J8eMENNHkzxcKvWzwmqn/T
0L18882pGWwM170UenyCBmlLbenFs9h4Vi58pdEYDVb7P7ZEzmbj0ln11pVD
NPDyVh8zV2Gjze/UIrleGl4ZSJSW6LOx3vwg3v5Eg9CyndO5nI1ZYpMHi1po
kHV6EDF3BRsXwWRp9QcabI57OfquZuMF+dHrP97S8PpR/fBCKzbKxsyIjuTR
8GZdssFVDzaaW63a/e8jGuSmT2WX7WOj89u4JvkKGjaX7Jv38QBZz9WKfbyM
XK9pNKbsx8bg7zEq20tpeDmjqTw+hI26Mj3JtoU01JbNtTh7mY0tfr22mrdo
ED88UXwzhY1RFckq77JoWLvom1ZVGhubMlcmncukoSa5UGLqJhuXRMYXTt+g
oTrA7uXRAjYWd2zSn3+Vhgq9OHuvOjZ2v6uss0+kYZIOfBL5ko2BO4r1Nl2k
YVW62/Kc12zUVEnRt75Aw0OZJcqd79hotVFk2jGehtIuXotbB7m/BcdjsqNp
GL1evDHkOxvDthulPD1Pg5FTWlkqn42hNVv0u6JoKKn1utrcx8Z7E+umTSNp
KM6Q3m0/zsYgO8U2djgNQ86DDb6/2ejhVK+yO4yGZQofzeJEKHTTmnqTc5aG
wtDbmjxxCgN+zS9c+zcNA0YJl7qlKFwate3DlTM0LO0PEpf6g8LC2bv9h07T
UOC6XrB2LoXxZp6i90JJPRWXbvdQprDgS9xPJvES3rwXZ1QpjFvFt484RUOe
Cf+fxxwK01MPbvU6SUPuvHAfY10KLZ0DdfefoOGp/HRoqh6FvDWuCYJgGtpn
B134/SeFLtf1GIeIlUQO3KsyptD/1tmYc8fJeca/1nJNKfwwPObPJt44tKM5
DCk0lEP/+8doCBVsmtiwjsJAlC8eD6Ih9WutTN5GCo8EnB7IIC5pBUrWhsLX
96JX2xO/aSrV87WjMOjAjeRZxD1v9Nc0bqVwlZPu74qjpB9e5tovd6Jw9c1k
z2Bitadcj8s7KLzO2/zJlHjl47SAUTcKRR8/2DyL2OGBUoSzO4Uaz1bVNATS
4FcUm1y+h8IDqaaGGcTR+RK5lCeFx105GceIs2+FloV6U1idZi65jbjqxhjv
qw+Fctul/zIgbk31b7M4TCE1q/EOg3j4Uk9/diBZP3JEKEYsH+8xQ+o4hc5r
mxhDATToRn1W8Aqh8KZinb6A2PKsg+arUArHbbT0O4h3n6w30DtLoTLPQvkL
8Ymg9esSIigUdga3/ff/Zf8qp59RFG4IpiK6iO96mxzYFkuh2eDJP4aJeXuL
gu8nUNhuIjwkQfand+nGqF6iMLmhLIdNPGNHVnpwMoXvqgxKVxCztlF3PqdS
GJuTc8WJ2HBzUhVco/BJyc5NIcR2G+Te3rhJoWxx5qtsYm/zyO8zsynkzqhU
eU8cbio6vOc2he5XRnUkyf29YRQsUZdH4VZGohgSN+kcXBRdRGGU28yJ/+o1
oEWvFJZQeCZsx1wxUk8ZtZ2bbB+S/nPl0DbEaxTtfBWrKMzQ+V4wSOwi++J0
YA2FYR/dbliR/gmUNL/Y/IzCE3dXmN0mzptcXpL2msL5v4Xh/qTfng3nP5tq
oNC7wUSrjfjrj/ktu95T2JdQs8+G9Ou8TpVJzVbST6Xur1eR/v7zS8IfEV8o
fHSktfchsXWLNKfrK4VFr90yTUNoOPNqck1+FzlvkslbWzIfV58FbJnTR+p1
s9+ig7i0Sujh94NCpygPi0AyT3332iMMRii8prGiI5/Mm1N6zasKMQ7qqfWZ
bSHzu/xHFIuW4GC7RGbmBLGcmZ2X7GwObpjD7r5F5r2u87PkTnkOrj8wY54M
yQejxSPmIhQHnXgq90VJfiicqrigrc7BRHnvX8+JhW/+7rDV5KDlwhqxSyRv
so/InbqxiINHZZRiDEk+KZcvfGhmxEHdzbKit+JoGPzjh6SXCQfPOrmHR5M8
e72zxPGiKQf/7X1ZF5BA6jnT/Nc3cw4yxref3ELycHijy9IwWw7eiU3wXJlE
w/uW2OxnnhzM7bm1oOwaDXd0tv3q9yb7Nxse+nSdzE8I00LFl4P2Z45Y/5e/
Fuo5HfsDOZgdYlVrR/K5eH8VS/pvsp64v5f6bRoSR35esE7jYNSumc6eRTTY
K20/1fCag74W4elRL2iQyr1zyLSRgw7Dsmkm5PlSuVrS7fZ7DrYyVQOEr0ie
7b+/6nQrB3myUvm7G2iYXaY0vrSbgwMJqZ8CmmlwX+ppUieqhuqLBrzs+aTf
m7TuLaDUsNy6f2atBB+CrjfkfeaooQjGWfZI8eHtgZDMi+pqyPt1dmquDB+i
pt9dnNZUw+1KF6t8yPN3TPus/wcdNWxcrGRiq0reH4K/6kUYq+Gp7EqNQh0+
xKtfy6W3quHl78HG3+z5MLG6MTvRQQ3nW6gMe2zjw16XWRlmTmpY8zYys8uR
D6ZJXqnpO8j+H/NfTLjwoVtmRbSDuxq6q5jTZvv4YDH65mCtjxq2a4jnbz/B
h5HXovrZUWq4/8/2OYk5fHA7sff+nko1zL4kciBBUgD29c0H8zTVcY0z9/ok
eV+7E3LYcF+COrZaKnK/PekCA80HOV3D6qgmZRspWtgNN2LfrjrorIERP9v2
ZqX3wNGtyt88ajUwa+AQ/fJKLxxWEFumqcNFW9Z5/vrgPmjRYVxyTObiZd94
h24XIYy65RoOp3BRe7EOR3WXEFQumDQnpnJRJF8x2fIvITiNOjMb07m4rXR3
0lVPITTVpN6wzuLi3aNSxSsDhdDoyv53TSFxcG2uUZwQeHFqz3R4XBwtlh7V
rhRCb/Wd/S9ecbG12M1Q94kQZg+jtGc9F+c0P529pFYIG112b8pu5OKLgJGg
xTwh1GnffKvWwsWM57YbmM1CeFrFbVeiuVg5JLuwsF8I34eKThfzuRj1ZCws
fVAIYtoW3C1dXNwyf5FP5C8hWMR67I3v5eLCbw3fnCeEUO2c1Sv9k4vzBx5a
9Ir3w9cYg9jbQ1wU8tYN8qT6YUbVU731w1x87qS1IE+mH3AB7R82xsXt7oc0
9yr0wy7nQEXNCbJ/RW4PKvXDqRjxkupJLvL/bjFiqPRDeuVlx91TXByW3Ss5
yOiHRz/nj01Pc9HpW7lLHbsf/get9r+O
     "]], 
    LineBox[{{-0.00014349489804625585`, 1.7}, {-0.00014349489795918366`, 
     1.}, {-0.00014349489783247623`, 1.7}}], 
    LineBox[{{-0.00016900510231141684`, 1.7}, {-0.00016900510204081632`, 
     1.}, {-0.000169005101837741, 1.7}}], 
    LineBox[{{-0.0002040816326530611, -0.7}, {-0.0002040816326530611, 1.7}}], 
    LineBox[{{-0.00010161293673203032`, -0.7}, {-0.00010161293670327782`, 
     1.7}}], LineBox[{{0.000051637144984453487`, 1.7}, {
     0.00005163714498833879, -0.7}}], 
    LineBox[{{-0.00005087777834614454, -0.7}, {-0.000050877778345246004`, 
     1.7}}], LineBox[{{-0.00012553539264006095`, 
     1.7}, {-0.00012553539225254855`, -0.7}}], 
    LineBox[{{0.00007803601175517571, 1.7}, {0.00007803601177060787, -0.7}}], 
    LineBox[{{0.000013994489552243756`, 1.7}, {
     0.000013994489552247568`, -0.7}}], 
    LineBox[{{0.00011664212210131739`, 1.7}, {
     0.00011664212220910576`, -0.7}}], 
    LineBox[{{0.00016854819630735145`, -0.7}, {0.00016854819694112693`, 
     1.7}}], LineBox[{{0.000041195156194077184`, -0.7}, {
     0.000041195156195015764`, 1.7}}], 
    LineBox[{{-0.00011433516265705609`, -0.7}, {-0.00011433516259428787`, 
     1.7}}], LineBox[{{0.00009165267426321286, -0.7}, {0.00009165267429380545,
      1.7}}], LineBox[{{-0.000011997791972935222`, -0.7}, \
{-0.000011997791972934557`, 1.7}}], 
    LineBox[{{0.00016034030789472586`, 1.7}, {0.0001603403082725404, -0.7}}], 
    LineBox[{{0.00008468230160631151, -0.7}, {0.0000846823018121056, 1.7}}], 
    LineBox[{{0.00018597567072839663`, 1.7}, {
     0.00018597567154374022`, -0.7}}], 
    LineBox[{{-0.0000809550459950233, -0.7}, {-0.0000809550459723678, 1.7}}], 
    LineBox[{{-0.00003162829535265062, -0.7}, {-0.000031628295352455766`, 
     1.7}}], LineBox[{{0.0001746494555567284, -0.7}, {0.00017464945936713052`,
      1.7}}], LineBox[{{0.0001496148183980975, 1.7}, {
     0.0001496148189194838, -0.7}}], 
    LineBox[{{-6.36651719511334*^-6, -0.7}, {-6.3665171951133395`*^-6, 1.7}}],
     LineBox[{{0.00015767344601121827`, -0.7}, {0.00015767344675103292`, 
     1.7}}], LineBox[{{-0.0001240149057622773, -0.7}, \
{-0.00012401490564754473`, 1.7}}], 
    LineBox[{{-0.00002123670501135546, -0.7}, {-0.000021236705011340714`, 
     1.7}}], LineBox[{{0.00018334388272479968`, -0.7}, {
     0.00018334388399948137`, 1.7}}], 
    LineBox[{{-0.00008421758320511324, 
     1.7}, {-0.00008421758318992441, -0.7}}], 
    LineBox[{{0.00011970636865231546`, -0.7}, {0.00011970636879054012`, 
     1.7}}], LineBox[{{-0.00003261465029502329, 
     1.7}, {-0.000032614650294477395`, -0.7}}], 
    LineBox[{{0.0001706888030405918, 1.7}, {0.00017068880537606237`, -0.7}}], 
    LineBox[{{0.00004172209438611546, 1.7}, {0.00004172209438708698, -0.7}}], 
    LineBox[{{-0.00006009861848752405, -0.7}, {-0.00006009861847890122, 
     1.7}}], LineBox[{{0.00014559892248645253`, -0.7}, {
     0.00014559892267940584`, 1.7}}], 
    LineBox[{{0.00009357260221073595, 1.7}, {0.00009357260225161387, -0.7}}], 
    LineBox[{{-8.737568631513584*^-6, 1.7}, {-8.737568631513357*^-6, -0.7}}], 
    LineBox[{{0.00019721443341955364`, -0.7}, {0.00019721443603037988`, 
     1.7}}], LineBox[{{0.000011918005408859597`, -0.7}, {
     0.000011918005408862172`, 1.7}}], 
    LineBox[{{0.000113611223471779, -0.7}, {0.00011361122354094597`, 1.7}}], 
    LineBox[{{-0.00006450722153863696, 
     1.7}, {-0.00006450722152984481, -0.7}}], 
    LineBox[{{-0.00011569537525263244`, 
     1.7}, {-0.00011569537513010048`, -0.7}}], 
    LineBox[{{0.00008635713144715547, 1.7}, {0.00008635713148500696, -0.7}}], 
    LineBox[{{-0.000015828771272855005`, 
     1.7}, {-0.000015828771272852305`, -0.7}}], 
    LineBox[{{0.00012567353734625286`, 1.7}, {
     0.00012567353749063428`, -0.7}}], 
    LineBox[{{0.00007585046378978392, -0.7}, {0.00007585046379675626, 1.7}}], 
    LineBox[{{-0.000026796098887859827`, 
     1.7}, {-0.00002679609888773325, -0.7}}], 
    LineBox[{{0.00017552998705737188`, 1.7}, {
     0.00017552998782306554`, -0.7}}], 
    LineBox[{{0.00005080771707116887, -0.7}, {0.000050807717072508776`, 
     1.7}}], LineBox[{{-0.000051863940195300874`, 
     1.7}, {-0.00005186394018998681, -0.7}}], 
    LineBox[{{-0.00010265914846056287`, 
     1.7}, {-0.00010265914841901243`, -0.7}}], 
    LineBox[{{0.00020256251443566943`, 1.7}, {0.0002025625193355592, -0.7}}]}, 
   {RGBColor[1, 
     NCache[
      Rational[1, 3], 0.3333333333333333], 
     NCache[
      Rational[1, 3], 0.3333333333333333]], Dashing[{Small, Small}], 
    LineBox[CompressedData["
1:eJwdjA841Icfx5GssNLK4f6fr1BKVCotPp+fUa1pDFG36ocfujJdU4ttFKaS
hitN/M6ohmFt8z//v84wkz+X7A5R544Tvm0qXf6En9/ez/N+3s/reT3Pmxco
9ArW0dLSCl7q/1fstzrA3sgMQ/6Jmiw9enXilp8ZHo7640Vjn5L8767cWyV8
MxSElaadLVOSceskH3QcM0MXdpmVa4qS9GyfFusEmWGZ0uO6q5uSpN4XuIed
WWKqkUeWDJGWjH0/u1w1Q9EXpzNjUhVkep+u8Hm1GdZefu9uh2yAjPaNeenC
pqOda8JKwWAPiV9shjs8OgpMMrL7xT2kzs3+a4sWdKx9MY8J/B7y8sPt62tt
6Ng0qF+a2vuIFLmP+Tk40nFPsrAhSN5N5rh41Vn50FHhZ95U81RKtttaJBgm
Lv0xMZK/rY1kvNPKkr2mY8xE2tYCcSWZFd344+w0HT2TAgMq5PdJ86lae85b
Ok6WBXP/s+4+uXGo2E2gw0BFtGY+PaWc3FUjDptdxUDuZXdeSFIJ6SsU1rGt
l/xeKmOVewEpktOOneAzUItTUPg48hyplx+cOV3PQJyqpLk9LIXggBct/o0M
FHkmes9dKIMmevSL1mYG9uYmpjI3lUNc0s29Ge0MrMw+FHQ3vgIWwn+bdOxn
oJFHg+kD2yrQOPHcvn7NwBXTJm7vCupB/Wjg+bwNEyu3O1wydGyC5kVvWJbB
xIFXK2o+iukAtdHmH+0zmWhKq46YlHSAnrneav9sJiqc7O0Cl3XCXtfKJ7W5
S/7emQ9/vtQJLQnMC+dLmGht5KM3eqULWteM1I49YGJIVVTRFYkU2ojzu6UL
TJzdYP5+UWE3SPelO3wfxMIz+cLd4Y4yMFq8mFdzgoVbG2zttX1k4FFxwqT/
FAvd85wiok7LoNNi5wztcxY2qf7etusHGTzQltWKolnoGVvq3GIgh5aata7x
aSwcjxt7cqBPDnVbUrxCW1kYOVzsExzSB4Uml4WOm9j4rV39pJX7ADSvWYwR
b2FjSfjG/UTQACgMIm/Mb2XjeatvZAZRA2Csdapc4sjGtL2Wj3N+GoCYZwfn
PtzHxs+k1b7TKwfBt8r4Cj+QjX/R+s9t+20QtD/Nzfo6nY3qrDXjJ62fwuGs
po46XQ4KfO9tvK5QwPbJRKb6HQ62tzr5t40pwMjlk9BVBhyMS/fTm3+pgNaR
wRX/XsPBHm541cfLh2Dn5jcfaLE5+Ebu7ZGzYQhotRuqXXZyUCrJaGN+PgR/
9iXn/X6Sg3qhTqKQuSHwMj5y8WEnB+MjXruELihhZWHRaaduDk4YFjE79FTQ
4LzieMGfHPyKmVNgvVoFtoL7e2IHOPjWTfaynaMCgxrjWbtxDu5vS+5tQxUE
2p3c3arDxUhB//XbsSpgytaXW7G5eFt1u0q+oAIRL7tQ7cNFcwf19kvPhmHO
uTvvpi8XbYPyRvl/D0PI0eU/uBzmYs5q/WIbzTA43QoVZ33KxTj9vlv1y0Zg
3HDXt76BXJzdcWN9IXsEXKelYS1CLm4a9i4Xe4/Am04d+7xELg5P/XR1WfUI
HI8KuR/cwEVpvHqm+Es1eHX1ht2z4OHUkczU8PJRKIo+u+PEdR7qm3GOfiJ/
Bg4WVfljGh72HLSk6dWNwZ3kR3vC+OYYGROhcb4wDhE+NFVQizkqJUL/EfsJ
OPue7jYLGwLThKZZjyUT0GdD/84vncAW42c0x/0UTB8v3KHJILDSsCvV6AAF
pjd2994UE2hb/bHW6EcUHJ7mM7qzCEx8ri4UeVAgaxLfcc8lMCFJly/3paD7
GOuXf5UQOHEotXprMAXtKdzfbdoJ1M38CixjKaAaiwRtHQT+WjWjPRhHgYEG
9U92EbhRKfrjRjwFB44GHMzrJrA7Je3U3BUKWq3vPuL2EfgL2bVckkxBs4RQ
GKsJ9EzQbGZnUjA8VRpbNkrgcGVrUvP3FOhauxLeYwQ2rK9+G5pNgWtyUIiI
IpCb8pl+xV0KGvm5lP4rAqV5azXOBRQokxySC6YItFKrnz4ppEBb0rxlv4bA
/GvFg9H3KFgS4ZdmCDzXIDKp+pUCf/75dRZzBErWyXwOFVNwMUmvovEtgZNH
zuVPllCQ1ZDmF7BA4JeDOmuvlVFQ/8pyZnGRwDsXTL+zqKDgf7jnBQA=
     "]]}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJwdVQk01ekblmyp7DWURCNLmokYFdV7iyYmU0qLtLiWxIw9BiUkbkoZZZ0Y
I0sjLmOrVPTaw1jr2q7r/uzrvdxrJ8v/95/3nO985znPe773e573Pd+nYut2
7oaggIBAFbn+v0unq0ePjjiDw38xhG8v+VSMk5gSlrL/mPkgGPzmLcSV8Ydx
UR3zbXqTYJYcJ5vfEQJDPpSOib4JuBM6k8b9OxzmIzZYhj6YgAuvNRKiDZ/C
21c1wh77J4Cr3m63PzUaApUs01P6uaC4WW/WxTMBnG+4HCnT4UJhYF/JRmYS
yF8QfynZxQE1P5MKhvILEF7fpiwSwoGS8blwz7A0OC69nLK5Yxw4zRY7ci5l
Ae0gBgvcH4OD4lnr7m7MBtN0U6Hs78cgxEhw6BTmwC97KEO5zFGQuGLZ7iWb
B9tNpg07dEchvUEkWeZOIWyNUbW9OzYMjHw7ndM/fQDX5XV1u50G4faZ31N/
UC2GZ+Dr+XzbIChz3m/ZsVoM3LqkkV/qB8B5t8zSeN5HWMhTbdqpMwCCZtTe
yk1lcIsjVd262gd/fJTItPWqhNzH6WrXsnqgJvVXwySjf0Fkcv0YNbIDjv2y
N+nyq3/he7vWmWaZDnivzRXYIlkPXpvFdrBi2oFe4lodzqwHic7DihV/tkFk
u8dZP49GyCn4qtlUyAC6cLFuZlMz6BcHLr5bawavQ+WmoStfIMjdxvesJFk3
cddXW20GVMZksc0NKoC7Fkyn2DGgdHuE/x2HcnCoNpJcrmEA59qxFfPyUrC0
qGJ4RrdCD6OyelDyAxx2qbGmarVDJE2SvU4rG4RfNHobXmaC8pPVz7bmL1Df
QaFIIZwJyY27HDvXp6GDlv3SfDETSvPL49byX2L168WAQuUuKPVxKqQK0ZFW
pxr23UgXJKe5pTQdKkCxmdvPd/p0AzVdQivneAkefFfFWsnoBuUjJ7Lh9kd0
DJDayWKSfMngUuE/iLViL1Pjj7JB+7qRsLp4GT7a0UKXFiHAd/Q6qttWIC01
irj3E+nzP0/ylXo+oZLIOwEPux4Is7XR0/u1Bt84slWo/j3g2B7demy2Boe+
07Q/mtMD8UVbNp0UqcOTRR9HlqR7wVF+i7uQYj2KNYzyb3X2gtzyUdq5jc34
cA6EHBz7oSjr1U16+hdcdpvU9LzfD9ErVOu/iC/oOpp0JiCpH5rHgz+vyjPw
PGvleSyjH/RwEoQeMVCp/IPOJ8oAyEfmfda+0Yr5Tw5YaygMgtgrUY3TAu2o
Kjocoqc3CId7uXGaOu0YFxSbSTkzCCHvqoa9bdrR/9bsrGUoyQ+ePGFb2o4n
Lxc8fsgfhBoivOWpTweyVPe9H6sdgsjeix7h/3bi6SQ2MTcwBDNLT7Njpzux
7JsI4fUCwyBU9+LsN9uZ+FKca75dfxg0bnbN+zky0YOXOXwqheRjHT7XLzNx
wMlqs2XJMKQ9X7YJV+7Ci/0bdO07hiFITjCzzKgLD7c5BvhLjIC7/baI2LAu
FClW25J9ewR4LdEdoxtZ6PtDm8G7mBEIGhu76qrFwvGcUGpV7ggkZ9pMOf/E
wuYXA1ndQyOgne8a2EljYcKDlOMSFqNg7Bnj5rvIQm0LJXc3rTFIa5D1k6ru
Rvqjg0HZxmMgtHN+samrGzXKz0WOXxuD+sakRSV+NyrrPMi9GTkGGWHnPZy3
sVFaksezniX5P/O06m+yMeJH8XVJEuNQqhYYLnGbjeIBqtIs9XEQOupu3xfO
RkGupY6l1TjE7/YPghw2TtWVeZjjODye2HmtjctGV0HWvQjy3fHvOH0va5mN
Y4fmntbzxyFD5KiS3EYC+zL25JuocqD5QEFFshqB13uMy2lHOLDQKPNzlS6B
zG+sP1de5IBcyrB5AIXAL7SoKcpDDvA2BNflWBJo/jFbMDCFA74HsUzNnsD6
2U8yJR844FxF1ddzI7DSfnn/oQkOnDeNSZAKIZCSuNXIR5QLRRmHJHqeEFj8
RdvitTIXzEztBH+MI7Dw+I1bOhZcGJAw8GrLIFD7duB9N2cuXN36xGtdHoH0
vD+iskO58Hg272tFEYEaowWp40lc4P2sdUqplMA05cYCzSISH3yYJvWJQGXL
kYqbLVxwjPM0TWggMPF3QUb6GBcOy/555+MXAmNW9WdUdkyAZdBoRBObQBn9
s0JU/QlI3t4yXdJPYITLr3JJZyZATiKEe2KEQPH0UFWW4wSMWEt9vMkhkMb6
S29b8AQ4i8T8/S2PQEG598aWCRMwoGDE8ZsmMOAU43xs4QQkvrzc+MscgUvB
E/aMhgnwiteKnFsg8Lf3Yt4ywxNQ7KXgteMrgVP8XaHmApPg3xNbTCwT6Kp5
JCZCYRKuZqrRj6wSOEa9lF6/fxKW6VdCD6wR6BDv8VrcbBIGsONRA4n7msKr
TG5MQpGl+doaia+LvmylBUxCcTltdxOJmUdLByvjJkFK6jTFkMSXfmPOCuZN
AvV+2DNj8nxG9ozwsbpJOC+vbj1O1jcflNga2E/mr9ca3Ufer15RU61keRK8
0tJuySwSqJqpkrAizoPc7vxjUaS+vqrvUxO/4UGYzf3YfFJ/cq9hlqEqDyKZ
Fq/dSX+ur5gUMLV54Mtz7W0g/VNUuPjB7wgPaj7su15H+nuSknFC/RQP0or2
LqwfINDz5lITw5IH9oW9r+rJ/iRFmFkFO/BggUmpVe0ksPZ10sA+Lx6crz1D
30T2c4bFc+2+xwNegdqrkHqy/0JGi49+54G2PX/LkyrS73PDm4cyeUD/0SXe
/A2BKX6H4qOKeOD/02erTTkENiSH7zpWTeZfejZ0OZ3UN7nvQGIvD+QnzAuz
nhF4Zmtwmekkqc8jKjU3jMDbRxin5pd5cDX3zRuTAAJbwn2p5+T5QOkdSNV1
JHA5v25sbTcfGA7FWg+ukvPKVPTO1uWDkP9mXTdzcj40yh6KneGDc5uT4qo+
gXurNhR8DOWDnhu9X3mNjZc4V444R/GBLnKHp8JjY7BszieFF3wwVl/Qf9/D
xk6bcyyvYj5o7znQlFfKRtrqc2GtaT54LdMqqu+wMW839/cOgSkw+05RL9yJ
jSwz2EaTmILC5OOJoxfZqJvQ/32v5hSMtBoUeGuzsefAXss46hQkyp5IYrC7
cZN1QJ+x6xSwigJdPGu78QCt2XnqzhQUzfrM0gu6MYLhde/nuCmg8rc9XaR1
o6FHSeb6RpIXHUhd0ugm51Pyh7yuKTA+6D34QKobn6ENXh+dArpDU2rhPAtH
Nosw3glNQ0dqxiK3koWxmadX3AynoUY0CEetWMjrJ86wMqbB/YrSXQvvLoxP
dV41fTMN1AehTyIvdSHFbpH+tmIapJpL+N6HuvBpn4x4FHsaHM8aiRqS/8H+
3hOVpnIzIKRnkvr2LhO92FkH3wbOgPxxg5hK905c6PBReXZxFg7zxHruKrRj
crxQ85rdLMRn/GPqxG9DE8unAS4es6Dd+2+CaG0b/tGe2WXyeBYSdQLMrvu0
oUFbd8xa2SyEPXbefbe5Ff2/GIm7fDcH/gNRRJ0XA9caJKdPCs3DVakUq/kH
LUjntMQ2Ss1D0NGjzvutWvDyxmiDCzvmIT50x3PdvS1YYCIfbKs/D741aVcf
NjXjzQpl6buO87BgVr/4ULYZm4p09uXXz0NNgUC7/q4G/CvV4lfFmAXQDhGh
vqupRvCL6+ftXoLcONlPeSN5aJWatIGmuwSRFySn3Dm56NWQvm/7sSUoVTca
ZbP/wQyVwjsnri5Bz/yLaOuhLJSua5Z9/mwJkq3lrar6U7F/m7ix0doSCFR1
M4O++OODYv+0mI6vQHE3HHGfy4amNZsbBuErIGD3LlpPuRZqvj3+nHpFgGLv
UqbsJseGHy+pPdQYXUdZSLz2snJ4GJwXskpL49dT4Eb+tYocHuy53Z3koyVM
2SktQtvcOgORTrlVq4QIRdvv9YEw9gI8Xuc0kzskQplq5pcbchcg7A+Vb+24
IpTDU6JvB78uQFDts6BPSyIU5bmAEkWFRXDX9DaM3CJKif92X9BWi0U4O3oo
T+WUKIVy131wf9UiyDhVJBq/EaWE/EV90/tiCaRDe5UMBMUouv/FV/gf3Eap
YA==
     "]], LineBox[CompressedData["
1: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
SGqqEP4P1naMlA==
     "]], 
    LineBox[{{-0.0001434948980172318, 1.7}, {-0.00014349489795918366`, 
     1.}, {-0.00014349489787471203`, 1.7}}], 
    LineBox[{{-0.00016900510222121667`, 1.7}, {-0.00016900510204081632`, 
     1.}, {-0.00016900510190543275`, 1.7}}], 
    LineBox[{{-0.0002040816326530611, -0.7}, {-0.0002040816326530611, 1.7}}], 
    LineBox[{{-0.00010161293672524154`, -0.7}, {-0.00010161293670607321`, 
     1.7}}], LineBox[{{0.00005163714498483123, 1.7}, {
     0.00005163714498742143, -0.7}}], 
    LineBox[{{-0.00005087777834593239, -0.7}, {-0.00005087777834533337, 
     1.7}}], LineBox[{{-0.00012553539260238614`, 
     1.7}, {-0.00012553539234404454`, -0.7}}], 
    LineBox[{{0.00007803601175667606, 1.7}, {0.00007803601176696416, -0.7}}], 
    LineBox[{{0.000013994489552244127`, 1.7}, {
     0.000013994489552246669`, -0.7}}], 
    LineBox[{{0.00011664212211179683`, 1.7}, {
     0.00011664212218365574`, -0.7}}], 
    LineBox[{{0.00016854819645699287`, -0.7}, {0.00016854819687950987`, 
     1.7}}], LineBox[{{0.000041195156194298795`, -0.7}, {
     0.000041195156194924515`, 1.7}}], 
    LineBox[{{-0.00011433516264223582`, -0.7}, {-0.00011433516260039034`, 
     1.7}}], LineBox[{{0.00009165267427043611, -0.7}, {0.00009165267429083117,
      1.7}}], LineBox[{{-0.000011997791972935065`, -0.7}, \
{-0.000011997791972934621`, 1.7}}], 
    LineBox[{{0.00016034030793145784`, 1.7}, {
     0.00016034030818333419`, -0.7}}], 
    LineBox[{{0.00008468230165490178, -0.7}, {0.00008468230179209784, 1.7}}], 
    LineBox[{{0.00018597567080766612`, 1.7}, {
     0.00018597567135122852`, -0.7}}], 
    LineBox[{{-0.00008095504598967408, -0.7}, {-0.00008095504597457041, 
     1.7}}], LineBox[{{-0.000031628295352604606`, -0.7}, \
{-0.000031628295352474705`, 1.7}}], 
    LineBox[{{0.0001746494564564067, -0.7}, {0.00017464945899667476`, 1.7}}], 
    LineBox[{{0.00014961481844878786`, 1.7}, {
     0.00014961481879637872`, -0.7}}], 
    LineBox[{{-6.36651719511334*^-6, -0.7}, {-6.3665171951133395`*^-6, 1.7}}],
     LineBox[{{0.00015767344618589673`, -0.7}, {0.0001576734466791065, 1.7}}],
     LineBox[{{-0.00012401490573518765`, -0.7}, {-0.00012401490565869928`, 
     1.7}}], LineBox[{{-0.00002123670501135198, -0.7}, \
{-0.00002123670501134215, 1.7}}], 
    LineBox[{{0.0001833438830257662, -0.7}, {0.000183343883875554, 1.7}}], 
    LineBox[{{-0.00008421758320363656, 
     1.7}, {-0.00008421758319351067, -0.7}}], 
    LineBox[{{0.00011970636868495183`, -0.7}, {0.0001197063687771016, 1.7}}], 
    LineBox[{{-0.00003261465029497021, 
     1.7}, {-0.00003261465029460629, -0.7}}], 
    LineBox[{{0.00017068880326765143`, 1.7}, {
     0.00017068880482463183`, -0.7}}], 
    LineBox[{{0.00004172209438620991, 1.7}, {
     0.000041722094386857594`, -0.7}}], 
    LineBox[{{-0.00006009861848548811, -0.7}, {-0.000060098618479739556`, 
     1.7}}], LineBox[{{0.00014559892253201097`, -0.7}, {
     0.00014559892266064652`, 1.7}}], 
    LineBox[{{0.00009357260221471019, 1.7}, {0.00009357260224196214, -0.7}}], 
    LineBox[{{-8.737568631513562*^-6, 1.7}, {-8.737568631513411*^-6, -0.7}}], 
    LineBox[{{0.00019721443403599874`, -0.7}, {0.00019721443577654956`, 
     1.7}}], LineBox[{{0.000011918005408860205`, -0.7}, {
     0.000011918005408861921`, 1.7}}], 
    LineBox[{{0.00011361122348811009`, -0.7}, {0.0001136112235342214, 1.7}}], 
    LineBox[{{-0.00006450722153778216, 
     1.7}, {-0.00006450722153192073, -0.7}}], 
    LineBox[{{-0.00011569537524071961`, 
     1.7}, {-0.00011569537515903163`, -0.7}}], 
    LineBox[{{0.00008635713145083549, 1.7}, {0.00008635713147606982, -0.7}}], 
    LineBox[{{-0.000015828771272854744`, 
     1.7}, {-0.000015828771272852942`, -0.7}}], 
    LineBox[{{0.00012567353736028995`, 1.7}, {
     0.00012567353745654422`, -0.7}}], 
    LineBox[{{0.00007585046379143017, -0.7}, {0.00007585046379607839, 1.7}}], 
    LineBox[{{-0.00002679609888784752, 
     1.7}, {-0.000026796098887763137`, -0.7}}], 
    LineBox[{{0.0001755299871318143, 1.7}, {0.00017552998764227675`, -0.7}}], 
    LineBox[{{0.00005080771707148524, -0.7}, {0.000050807717072378516`, 
     1.7}}], LineBox[{{-0.00005186394019478423, 
     1.7}, {-0.00005186394019124152, -0.7}}], 
    LineBox[{{-0.00010265914845652323`, 
     1.7}, {-0.00010265914842882294`, -0.7}}], 
    LineBox[{{0.0002025625149120476, 1.7}, {0.00020256251817864077`, -0.7}}]}, 
   {RGBColor[
     NCache[
      Rational[1, 3], 0.3333333333333333], 
     NCache[
      Rational[1, 3], 0.3333333333333333], 1], Dashing[{Small, Small}], 
    LineBox[CompressedData["
1:eJwdigk4lAkcxpGo9IQkHnN8M32SXUSXa9P/T9O5uijHkOthSCtRS4lNsjq2
XFupiJKjrC2VI6GPyTGVSqOmYXPGlM+kS8LQrN33ed7nfX7P7+UGhLsEqamo
qLhP9b8divC2728xQsH/kVEMTRFL8tUITZ1jKy0v9VHZccLC8VEjjI9xWhp5
oI9aMFy9hJgwQlpX75zYtY/6sefWmhA1Bl60yb4pn9VH2VZlho3PYaCJ5yqT
ozFvKLfw8Bq2KQPzTPb4cH17qdRX83cG8xnoo1Cmhzp0UxrXgrJG7zMwJC/G
IClNSgX5f2r0EzJQxC2u9d8qpeqN4j6JGhjYrFq8/ldtKZVw+szaC80MZPb5
Gq1OfkV9j3zw0a6dgR69FZJ9yRJqxIG75tBXBk6oGWgozr+gZK2v30+aMXG/
oWGW9csWqkHpCtMuMNE2PTI4mXpAyXQsCpdkMVHaGeJssPMBpbFAQ9svh4lW
ZHmFfFxIreXd7azOn/KTEt1YGyHVeJz5W9RtJoreHolaWFpLiXT7qwceMzG1
UK/jeVQV9YiMsm/5zkScIbCvUd6kWtadX3EpkIWXH0XHlAWcBR3l4YKq4ClW
D8hidmfAlvJgg/ZQFmJGk8VfXhfhqbHN2PwIFsbz4zp5m3LgsaqkOjWOhS3a
oR83ns6Dxio9XuI5FuqQnyMTLG9AjWWKy27RlOebTfgK7kKRQVK4nTkb89Ls
xdF99dCgq4zPtGSjocdh6S7zBujWOpA+uZSNgVEnjpL7G0BfJbSszo6Nta2R
aUNqjRD/bpNiwzo28iKs1AdYTeBWqX+MH8BGES/Z5+KGh6DqlZ996DwbS18v
v+9w8Al4ZNc/qVEn0H7a9Pg7V8Sw/ONJpkyTQAG/kuNbIwYdp22752gRePyh
ht43qRhE/R0zfHUJjA1wM5drt4KNxbfVKmwCZccU7+WxrTC/+od7TjYE7l3z
xNfN9QW8bEsuaNpF4FzHuyXLPr8EF33Pw8+fEnhK0C1yVEhhZlHJHgcxgUIT
HbfgeW1Qu2qGz/WXBO7ZIZ84aNEGi0MqVh55TeDI8wSpwLcNtKr0x61oAiU+
xSf8hG0QYLXLXqTGwRC7lLKexHZgShaWLWJzsLeo1/zYxD+Qys0pkm3noCDn
dnZKZScoVokLzrhx8Lj5l3Kdp50g8J5+1cmDg0OL2XpHezvBIWN3ZrYXB5OI
P5p+0uoCerbtKbeAKZ9Xvve7VxfwRlvCGsM5mFisIFrHu+DbU7UlBSc56P7h
yObpGd3gEyuoCKrloF1T28jJ8h5weSYNKzbm4lBSaIdZ6hsoidtnHZzGxZT8
xbPGnfphhXHltYERLt7fb8c9kSmDK8mtK8P4C7AU70T41LyF6O3z3wQ2LkBx
bqGO9NE72DdXfZmxGYn+hcZhD3MHoM3M6Kz7eRKvcbxzd/xCw6hPkfXIBRLn
/VneYRhOg2G6vfRMJolrDaLi2yNo8BjlM8TZJG4N5Kt4RtMgqc+84pxPovML
Dc3VCTSId7JuON4msUelw6A5g4bmFE6TWTOJmrSNb2UdDXJhScijJyQmnRtJ
+LmeBq0RnLXrGYno6rn4dSMNG739NxWISbz3qocYe0yDyDS3ldM29c+pOM6V
0NBQR3bry0g80PyJZ0HT0Dd850jpWxLd9P/efk1Og7opj3QdIPGyrYGC+4EG
XnKgIFVO4i1JrrbuMA1Cfr581hcSbWNYEZ2TNPSeXpF8fZhEe8/2LZtVBkG1
rsFy/QiJsdtONlerDQIukkX+PkbiDY7n1bOag+DHj5pnrCCRSzgqlTMH4fBp
jXLhBInvkm5MhMwehOzac+7+30m0dk7MapkzCPe/mIwplSR+rsnrstYdhH8B
hgOYZg==
     "]]}},
  AspectRatio->0.6,
  Axes->True,
  AxesOrigin->{0, 0},
  Epilog->{{
     InsetBox[
      BoxData[
       FormBox[
        RotationBox[
         InterpretationBox[
          Cell[
           BoxData[
            FormBox[
            "\"M=0.5 \\!\\(\\*SubscriptBox[\\(M\\), \\(*\\)]\\)\"", 
             TextForm]], "InlineText", Background -> GrayLevel[1]], 
          Text[
          "M=0.5 \!\(\*SubscriptBox[\(M\), \(*\)]\)", Background -> 
           GrayLevel[1]]], BoxRotation -> -0.2430570731496373], 
        TraditionalForm]], 
      NCache[{4.5, 
        Complex[1.342833816702941, -5.30340112218009*^-17]}, {4.5, 
       1.342833816702941}]], 
     InsetBox[
      BoxData[
       FormBox[
        RotationBox[
         InterpretationBox[
          Cell[
           BoxData[
            FormBox[
            "\"M=\\!\\(\\*SubscriptBox[\\(M\\), \\(*\\)]\\)\"", TextForm]], 
           "InlineText", Background -> GrayLevel[1]], 
          Text[
          "M=\!\(\*SubscriptBox[\(M\), \(*\)]\)", Background -> 
           GrayLevel[1]]], BoxRotation -> -0.691386427693296], 
        TraditionalForm]], 
      NCache[{5., 
        Complex[1.4971601148838891`, 1.1273779183090037`*^-16]}, {5., 
       1.4971601148838891`}]], 
     InsetBox[
      BoxData[
       FormBox[
        RotationBox[
         InterpretationBox[
          Cell[
           BoxData[
            FormBox[
            "\"M=1.5 \\!\\(\\*SubscriptBox[\\(M\\), \\(*\\)]\\)\"", 
             TextForm]], "InlineText", Background -> GrayLevel[1]], 
          Text[
          "M=1.5 \!\(\*SubscriptBox[\(M\), \(*\)]\)", Background -> 
           GrayLevel[1]]], BoxRotation -> -1.027333909489758], 
        TraditionalForm]], 
      NCache[{5.5, 
        Complex[1.396796375109947, 0.]}, {5.5, 1.396796375109947}]]}, 
    InsetBox[
     GraphicsBox[{
       Opacity[0.9], 
       RGBColor[1, 0, 0], 
       DiskBox[{0, 0}]}], {0.9811439085214743, 0}, {0, 0}, 0.15], 
    InsetBox[
     GraphicsBox[{
       Opacity[0.9], 
       RGBColor[0, 0, 1], 
       DiskBox[{0, 0}]}], {0.3926196980079458, 0}, {0, 0}, 0.15], 
    InsetBox[
     GraphicsBox[{
       Opacity[0.9], 
       RGBColor[0, 0, 1], 
       DiskBox[{0, 0}]}], {1.6931149041698434`, 0}, {0, 0}, 0.15]},
  Frame->True,
  FrameLabel->{{
     FormBox[
     "\"\\!\\(\\*SubscriptBox[\\(g\\), \\(00\\)]\\)\"", TraditionalForm], 
     None}, {
     FormBox[
     "\"r / \\!\\(\\*\\nStyleBox[\\\"L\\\",\\nFontSlant->\\\"Italic\\\"]\\)\"\
", TraditionalForm], None}},
  GridLines->{{0.9811439085214743}, {1}},
  ImageSize->425.1968503937008,
  Method->{},
  PlotRange->{{0, 10}, {-0.7, 1.7}},
  PlotRangeClipping->True,
  PlotRangePadding->0]], "Output",
 CellChangeTimes->{
  3.618290406675954*^9, 3.618290828510783*^9, {3.618290875095751*^9, 
   3.618290887194063*^9}, {3.61829092737152*^9, 3.618290933850931*^9}, 
   3.618408077243575*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<../../Master-Calc18/figures/g00-n5.pdf\>\"", ",", "fig"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6182902261672153`*^9, 3.618290226287874*^9}}],

Cell[BoxData["\<\"../../Master-Calc18/figures/g00-n5.pdf\"\>"], "Output",
 CellChangeTimes->{3.6182902266004343`*^9, 3.618290372315976*^9, 
  3.6182904087066936`*^9, 3.6182909666511106`*^9, 3.6184080774184847`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Temperature", "Section",
 CellChangeTimes->{{3.618292134837167*^9, 3.6182921376194973`*^9}, 
   3.618294492571377*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "wg", " ", "Simplify", " ", "ca", " ", "10", "sec", " ", "Laufzeit"}], " ",
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Ts", " ", "=", " ", 
    RowBox[{
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"4", "\[Pi]", " ", "M"}], " ", ")"}]}], " ", 
     RowBox[{"D", "[", 
      RowBox[{"g00s", ",", "r"}], "]"}], " ", "*", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"\[CapitalOmega]", "[", 
        RowBox[{"n", "+", "1"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"n", ",", "0", ",", 
         RowBox[{
          RowBox[{"Length", "@", "g00s"}], "-", "1"}]}], "}"}]}], "]"}]}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.618292142091648*^9, 3.618292162277528*^9}, {
  3.6182927126210003`*^9, 3.618292722758212*^9}, {3.618293009871244*^9, 
  3.6182930418718843`*^9}, {3.618293529414513*^9, 3.618293567551074*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Off", "[", 
  RowBox[{"FindMaximum", "::", "lstol"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"TsMaxima", " ", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"miniToSol", "@", 
     RowBox[{"FindMaximum", "[", 
      RowBox[{
       RowBox[{"Re", "@", "#"}], ",", 
       RowBox[{"{", 
        RowBox[{"r", ",", "2"}], "}"}]}], "]"}]}], "&"}], "/@", 
   "Ts"}]}]}], "Input",
 CellChangeTimes->{{3.6182930453904867`*^9, 3.6182930458523397`*^9}, {
  3.61829308864305*^9, 3.618293113283243*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3.3836342944376643`", ",", "0.020215567331995053`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.51256707132128`", ",", "0.006551265677965186`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.261184329768466`", ",", "0.0016647856786989608`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.187140810786088`", ",", "0.00030935678956029616`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"2.1915869381391166`", ",", "0.00005583677977707677`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"2.1711253830257444`", ",", "6.9750269682045175`*^-6"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"2.1577044088472346`", ",", "7.765215318444268`*^-7"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"2.148893502909861`", ",", "7.745543662973536`*^-8"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.6182930468435993`*^9, {3.618293095690798*^9, 3.618293116556388*^9}, 
   3.618293537142331*^9, 3.618293569005815*^9, 3.618408077588317*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fig", "=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "chosenN", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"chosenN", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "2"}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"colors", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Darker", "@", "Green"}], ",", " ", 
        RowBox[{"Darker", "@", "Yellow"}], ",", " ", "Red"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"labels", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"\"\<n=\>\"", "<>", 
         RowBox[{"ToString", "@", "#"}]}], " ", "&"}], "/@", " ", 
       "chosenN"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"TData", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Ts", "\[LeftDoubleBracket]", 
          RowBox[{"n", "+", "1"}], "\[RightDoubleBracket]"}], " ", "/.", " ", 
         
         RowBox[{"{", 
          RowBox[{"r", "\[Rule]", " ", 
           RowBox[{"r", " ", "*", " ", 
            RowBox[{"r0s", "\[LeftDoubleBracket]", 
             RowBox[{"n", "+", "1"}], "\[RightDoubleBracket]"}]}]}], "}"}]}], 
        ",", " ", 
        RowBox[{"{", 
         RowBox[{"n", ",", "chosenN"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"TSSM", " ", "=", "  ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"1", "-", 
            RowBox[{"2", "/", 
             RowBox[{"(", 
              SuperscriptBox["r", 
               RowBox[{"1", "+", "n"}]], ")"}]}]}], ",", "r"}], "]"}], " ", "/.",
          " ", 
         RowBox[{"{", 
          RowBox[{"r", " ", "\[Rule]", " ", 
           RowBox[{"r", " ", 
            RowBox[{"r0s", "\[LeftDoubleBracket]", 
             RowBox[{"n", "+", "1"}], "\[RightDoubleBracket]"}]}]}], "}"}]}], 
        ",", " ", 
        RowBox[{"{", 
         RowBox[{"n", ",", " ", "chosenN"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Evaluate", "@", 
        RowBox[{"Join", "@", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Re", "@", "TData"}], ",", " ", "TSSM"}], "}"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"r", ",", "0", ",", "10"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"PlotStyle", "\[Rule]", " ", 
        RowBox[{"Join", "[", 
         RowBox[{"colors", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Dashed", ",", 
              RowBox[{"Lighter", "@", "#"}]}], "}"}], "&"}], "/@", 
           "colors"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"PlotRangePadding", " ", "\[Rule]", " ", "None"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"FrameLabel", " ", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(r\), \(H\)]\) / \!\(\*SubscriptBox[\(r\), \
\(0\)]\)\>\"", ",", " ", "\"\<T/\!\(\*SubscriptBox[\(L\), \(P\)]\)\>\""}], 
         "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{"Epilog", "\[Rule]", " ", 
        RowBox[{"Join", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"EpiLabels", "[", 
            RowBox[{"3.4", ",", 
             RowBox[{"TData", "/.", " ", 
              RowBox[{"r", "\[Rule]", " ", "X"}]}], ",", "labels", " ", ",", 
             " ", 
             RowBox[{"0.02", "/", "3"}]}], "]"}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"EpiLabels", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"6", ",", "5", ",", "4.5"}], "}"}], ",", 
             RowBox[{"TSSM", "/.", " ", 
              RowBox[{"r", "\[Rule]", " ", "X"}]}], ",", "labels", " ", ",", 
             " ", 
             RowBox[{"0.02", "/", "2.5"}]}], "]"}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"Inset", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Graphics", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Opacity", "[", "0.9", "]"}], ",", " ", 
                 RowBox[{
                 "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                 ",", " ", 
                 RowBox[{"Disk", "[", "]"}]}], "}"}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"(*", " ", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"x", ",", "y"}], "}"}], ",", " ", 
                RowBox[{"{", 
                 RowBox[{"xOrig", ",", "yOrig"}], "}"}], ",", " ", 
                RowBox[{
                 RowBox[{"scaling", " ", "--"}], ">", " ", 
                 RowBox[{"see", " ", "Inset", " ", "doku"}]}]}], " ", "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"#", "\[LeftDoubleBracket]", 
                  RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "/", 
                 RowBox[{
                 "#", "\[LeftDoubleBracket]", "3", 
                  "\[RightDoubleBracket]"}]}], ",", 
                RowBox[{"#", "\[LeftDoubleBracket]", 
                 RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}], "}"}], 
              ",", " ", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", " ", "0.17"}], 
             "\[IndentingNewLine]", "]"}], "&"}], " ", "/@", " ", 
           RowBox[{"Transpose", "@", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"TsMaxima", "\[LeftDoubleBracket]", 
               RowBox[{"chosenN", "+", "1"}], "\[RightDoubleBracket]"}], ",", 
              "colors", ",", " ", 
              RowBox[{"r0s", "\[LeftDoubleBracket]", 
               RowBox[{"chosenN", "+", "1"}], "\[RightDoubleBracket]"}]}], 
             "}"}]}]}]}], "\[IndentingNewLine]", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotRange", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "0.1"}], 
           RowBox[{"Max", "@", 
            RowBox[{"Last", "@", 
             RowBox[{"Transpose", "@", "TsMaxima"}]}]}]}], ",", 
          RowBox[{"1.1", 
           RowBox[{"Max", "@", 
            RowBox[{"Last", "@", 
             RowBox[{"Transpose", "@", "TsMaxima"}]}]}]}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"GridLines", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "}"}], ",", 
          RowBox[{"{", "0", "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"AspectRatio", " ", "\[Rule]", " ", "0.5"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ImageSize", "\[Rule]", " ", 
        RowBox[{"15", " ", "cm"}]}]}], "\[IndentingNewLine]", "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6182921643861637`*^9, 3.61829218217449*^9}, {
  3.6182927276366997`*^9, 3.6182929448788013`*^9}, {3.61829313217225*^9, 
  3.618293180647748*^9}, {3.61829321480683*^9, 3.618293356273727*^9}, {
  3.61829344078656*^9, 3.6182935221059923`*^9}, {3.618293579170887*^9, 
  3.618293602595295*^9}, {3.618293640957971*^9, 3.618293672899797*^9}, {
  3.618293806550922*^9, 3.618293836201977*^9}, {3.61829387473437*^9, 
  3.6182941012465343`*^9}, {3.6182941377213583`*^9, 3.618294172965973*^9}, {
  3.6182942349798*^9, 3.61829427182365*^9}, {3.618294314460772*^9, 
  3.6182944594128923`*^9}, {3.618294500793145*^9, 3.6182948469108133`*^9}, {
  3.618294895090906*^9, 3.618294895164605*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0, 
     NCache[
      Rational[2, 3], 0.6666666666666666], 0], LineBox[CompressedData["
1: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
f28qOeqKimE9Af3DQCbHnn25NsIV/wO5c8Uo
     "]]}, 
   {RGBColor[
     NCache[
      Rational[2, 3], 0.6666666666666666], 
     NCache[
      Rational[2, 3], 0.6666666666666666], 0], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJwVlnc81f8Xx++1Qsm+18q6RWbuvSqk3kcSZSRl3SsZhVJWgyI0ZEQJiUQD
lYQIId03omFEMlK+SUYpGlb2/X1+f30ez8d7nfE653xUPPztDvKQSCRMJpH+
/+XxdftgtaUfGSQ3kc9fccPe6F36aNAAWj2mK2sgz8aku9NVny4NoKivXq/K
P7FwGp9Cb2POABIER2XWTRZ+/cZLMa9rAGUpZMuLKrLw2r0Ldw8aDaIDw/7a
+jRn/N1H/dFn8hAKj92Ye0rfER9OOsNpSxxGsZ3B1q7H9mC/IY2B0sIR1JyV
HJfYaIG/uPYI1r4ZQddcvgXesbfAez7E6LYMjqAq5QuPRfvNsUHTt1NDcj/Q
seQT/nyz2zFvca4YJfoHCkPrz9jqmOG0MJUtwft/ogBNr1tn7pvgWknZdEOx
MdQ5tqK5s3491k94zTHTGkPrGgM9To7r43sCIYO7t4+h+UdCT94r6+P42a51
h8PG0KD1y0v1EQzs0Jfy8sb3MVQomspeitfFPx6KTc7X/EL7fpCCHv1SwcIq
F9T7DP6gmHCZG/tbBNFr46vrws3+IDdy9zsPWIkuOmVtXGX3B+UtWxm1plsc
8SRWmLN9/6Dea+G2XpupaG5p1Ls78w8SeNMikTeljH722j9o5fmL9DXqD8d7
aaHmNHWNmua/aJZ3TdvzhxtRXKk+fX/PX7Qtb3lu7zYDZNFmYrg09Bc5Wrau
ZX82QPXLXHYYc/+i+I/Cz4NFjVD1ycRDFfRxtCO86DHjsDEq2Dub9zh1HF0Q
W/N3OBLQZbEmzTtuE+jGsf7MXf9tQ5UbV5XZ+E2g6QuL4rJqZmjQ1R8thE6g
y5ferYv2M0ObCiT3Ol6fQEsW93p2L5mh7ztczoi8nUCqPb7CObLmyPT8WOup
TZPoy3u3l/ZoB5qZEj1hR5lCVwIvhbwxt0a0VR5cLm0KTQ/yanhGWSObbaWx
BfQpVDnxKDi3zhrlJjllCVpPITfh7tDVxjbIbt2dV5zzU6j/1keuqNYuVODD
kNP6S5xPDrZwDbNFHp/2Yt7maSRWndJpoGmHhDP6jwb2TKOUFz+yjE3tUAnL
T6FveBr9exmRKONih3g/Rp+qIv9D7zqLDJwT7FDOhypm4MZ/KKPzdTl3zA4N
dyo/+Hz3H7L0LPAdv78HHW4bTaw8NYOOdAn2zy7tRRKJp5B69Ax6pqbTvFbS
HlXtEviVkjKDKoRfuTLU7dHyViXLgKIZVFLd2tJpY48etdjxqw/NoEG1f6vc
btqjX40Vp1JsZ9Hc/DT5mp4DCmy44OGvPocUus98kt7iiBQHtwtMM+cQZMTu
KrdyRE08Qg/DYA4d3yB9w4DtiNZAwt9Y5zkU5eg29zXYEfVUXYvMuTSHltr+
fW4rckQmj+9l9fyeQ0fOVPKqyDmhX299trotzCHbLV5239ScUMaY5vCw4Dzy
//oxLZHphKY0i3QmVebRh/UKDvFWTigv92n1yr3zKPLHzFXNM05IPOP1R9OK
efRZNF5BoscJcSrjwhvr5xHr25lwsUEn5PvBSnX3u3kkcEZ6afyXE2qQfnfI
9cc8KjPSvX2AzxmdSuyZCVFYQJ+aIk8u6Dij/qgflMLIBeSosSJvZZgzupzz
qEo/YQGdvZ2W6hjljDa98HN9lr6AqnfONEZddkbXSBO5r0sW0N0f7XZJt53R
jtB5/YHBBfQqs3Xk6AtnVBywYo/MjkWkNRh0FfGxUPMNyVMFDoso5/z9ktgV
LDRcL3dr64FFVACX35RJsZCcrMbPIxGLaDBS2qB0NQtdqDU7X1u2iNJtGsqs
TFko66dVnsOLRRRTaqSat5OFKqT3tv5sW0RbPtWbft/NQmOHPOQpo4volPAH
flE3FnKQiHhyWHUJOfzeu5ocykIBxhd7uOuWECnuZfeJsywU55XATdm8hFLe
dXJbolkIV2VYYqclpFqQJKKRwkJrPSsGJK8sIWOX7ufx+Sy0NQEL5d1cQi2Z
MaVKxSzk8vTlui0Pl5BcqENfajkLXV3eGerTsIRiDs3pMWpZaO7JX8nn80vo
xUlBD6VOFpL6PGNoJ8RFIvE7rnf1sJCuIMntG4WLDvSN4aDPLOTpsvKROIOL
bquN7GR9I+LFp7XNy4eLtDoEBr//I+Klyzg8f4KLfMZe2zbOsxDJ2TAx8TwX
0Qza/K9yWWh9gXlvVRYXhenM0N4JsFGW/YHjop1clFqgxZWRYqOKCN8bOV+5
KDs+J02Tykbv84JqDP9w0ZxH2V1VOTbiiwCBEn4SeP9N8X6pxEbiUtvSw1aQ
4COje3eQKhsp5plrm0uSIMYhbTn/GjYyeG9j16tMAkY/26pPg43MfOyG7qmT
QNK1gkddm43sFu1DAnVJsOqF+Td7XTY6or4vS8CYBOn5CemHGGx0qtqN/m4r
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
0td55WUmdvfOdZstoMCfU/JzTxKZ+N+dna5vSwn/f5KLeq8xMY16zTmkjrBv
/PlYzi0mDiVr2jb/R4FrV5d+yxQz8fC25R/U+on9+3dbrnjCxLYxo/vPDlJA
rEZGfKqUiVeLFvlv+EmBbElt7r0KJm5W0L9ye4YCc1oi7ATMxBvcpKnz8xRw
dKnkatcy8e3s6Sx7LgVs1vzbW1fHxCc0KwuFBahw8bq4/tsGJlY02PL2uCQV
/u6rrPBtYuKYUCWHVgoV6k3/dVY2M/E4h/RZQ44KL5u9RhZbmPiV2Yuxz8pU
GPlyXtqnjYkZsTknDFdTob00El1+x8Q3m6MWk9Wp4FNmfe5hOxMH7LEQ2aFL
hSKbvuMNHUz8MVXjWjadCkt8X9fXdzLxto/Cq5b0qeAlT2dUdjGxrHuL9pNN
VCAFy3CjPjDxhZzCUhFEBSX6f1/29TDxr29XjH22UiFTx1xZ+yMT1/nZWa3a
QYV4suXH/E9MrF3C7Ai2okK1Jvfgvl4mTp2ScmnfRQULRkIg/39MTDKcHtDe
QwWhkDD+HIJ9w7p9ox2o0MNnp2n4mYm7cMVEvzMVui4mfq8nGHhvhBrvo8Jb
6woL8z4mlopzufTXkwr3FyrE9L4wcXjLZkkrbyqsir8Ym0rwdzGljHuHqZDx
QO3lBMF2e0k0sh8VbqeItJr3M/Hz6/0P2YFUmFcseJRE8NpPdYzy41TwuHXc
u4PgJMWcKrEQKkyMty0T+crEC+5RW31DqdASop1qTLBXrldjQzgVilf+lvMk
uO27uZ3yOSKfIuFZkQQbaWt8PB1FBcp2Y41rBOf4C3t0xlChcDH2xW2CRZ/8
HFkXT4VnP+pPZBN8ero5MO4KFQroFhaZBA8aFs4OJlHhhPsR08sE25y5chal
UuF4QLT/SYIragKEbqRTgVY52mFPsCqf3dXJm1QYnx4N1SY43pwpu+s2FURM
u47MEf5Mx0ndycumwjrxySJMsPvbqbV896kQp33FOozgZvHux64PqXC9dMxa
j+AN9hUGlQXEebk9lZ+I+N1OS6+RLCb0KE9KCydYuPe0hV8pFXJfMMZlCN4Q
nCdy5SkVBk0Ww0qI/LhLfGgvqqKCWmPeo20EV1is3/e3hgr9X6yl9xD5HBzw
VJWop4LJoyR2K5F/0Yikb4xXVGD/2+O+jWCvst+Bx1uosMK7tUGG0E+SreLG
a21UkB5roIcQ+nr+02qh7D0VHhQXB7cR+pNSfXjxXw8VDkJjvi+hz9rLBzJO
D1NhqHPdUWtCz6MayW4ZI0R+M0XdjxN6l2moXVM9SoWOWT/PFKIe/OYVHy+O
U6FW+XUBJupFwaenPpJLBc0JDdH6t0xswSsYd4dHBmKj2TqlRP0dy9qwq45f
BuK2C1/OJOqzsSO5h3eFDCwGP9FzaWTiEBObXxdlZCDy+7miWKK+c3rDntyX
l4E97fPXttUzcWtwfshrRRnoFd0/PkP0A7VCQV7hNTLAE+KvZlPDxO/lXlAT
6DLAPs6jm1/FxLqTG02Sd8pA4Z1ks/WFTMy64iVQai0DMcaqF+IeMXGU5rWm
DlsZUEoqz+x5yMS9buP2FEcZEJoYOH3wPhPHtTw6nO4pA7TMoEv6t5l46J5K
yq0wGfDe5+1XRvTH0Qv9s7yRMuCQpvQ9nOif4x539vuclwGF9uybJvFEvSqp
aNHjCH8VZTpLoplY7rpyXd11GXD7tdrFLJzoj9FKf4ZKZOB+IjmUfpiJq71X
WWmPyMCOvZ287M3E/DD7rzhxVAbmUyJvsoyIeNEyqVO/CX8qQ933bmTi7j6F
gefTMlAmcSdhA51431Hh9C4+Wfhrk2pUTsyjtRbyD4KUZCGRfdEoT5iJU9bK
8lXay4LfQY+HV4j56OKqdn/ASRbCze75q7Qy8OoU5s6VLrIgp3NguLCJgUu5
1omeHrJwk3ZtqbqegTu6zims9CfuOy9/4l45MS+jRvU9Y2RhfXyV5ZN0Bk7q
xwdFnsnC07PPL390YeDEG16v3JXl4DVvok0U8T8QfPLcsTCaHHg5ffcy7aBj
V7sspetqcpARbXJzqZWOtYW7gpu15eCYq17AkVd0/OaU2dqNhnKweffCJrVy
OuZxXh27wk4OVjUa2lGS6fgE9evOp+flINjd1n2ZJR2zUva9XfFNDqTD7Zzk
S/XwzLbc2VsceZDWygvenK+LB4a2htRFK4B5d3bLn0UtfHczXb7FfRX0NlZ5
bhHXwAVRJ8S9dRTByO5T2NqDajja3tOSd0oRvi80XpQYoOH1vXfyoluUYGo5
n4WmgwpO08goaLFUhrR3vZG1OxRxRE1CmmWlMtCYmVNG87LYWt4+t3G1CjSO
2QbGb6RgE79XbPFYFfBsiGwuXyWJbyl4rG6eUoFPMYI/N60Tw6tf3E+1YatC
3KJI7ef7y3GiTp1mO0cVxlIe/dUrXoYfGLCFztWoQuKnC/EOd5ZhbDr5jV6n
Cm+cFbdFX12Gfzmr5V5tUAXB9otTQkHLsOXFOKXdzaqw/m1GRzJzGRbos5Nq
61EF5doyhbIKARyaOLDYMqkK+7UagoWb+LHXBN+7N5o0aB9dbB9YyYddH257
66JNAws71/E4Hj7s4H6h6bcODT7vXpFjNM2Lt7fyvpSm0+DYtYqCJ//xYrV8
nmfuG2kQLao5vLyAFw95kHJnTWkgZBy+c7c1Lz7QPh+isY8GFJZgv0QKD/Yo
HleOvULc/1yUGmdIxkfO7VnYeZUGzzqXK/PokvGJPaXdK5Jp0FCrefm8KhnH
TJ24nJhKA/mnWufvLifjQsPZ+euZNEiwG6Lbfibh2Vpu1718wn6nSyUHo0g4
sX1FQv0rGvQ1/h7NLuVybmQf9bn4hgbKt/lDu29xOdnH35paNNFgXyE+onCJ
yymnJM41vSXei/vP5qM7l9PLkvR530kD9b6gD6vFuBz1AVnTrwM0UMwqdf3p
v8TRKz2tmDNEg9QYq4V1Lksco6hPswe/0aBt8qZ1lMUSx0o98/HIDxrkF77s
c1dZ4gT5Kiv+/Uv45x5wtf/9IifM+OxsyQQN0mJHMx7WLHKiRL52HJ+iQe5d
Nd4LBYuctKLsSzMzNKgeuVTtHb3IuRvJ5101RwPqa9nZwOOLnPzdB7eGLdDg
DknLO959kVOq+nLVliUaVIrMzJfbLHI4E2qzXC4N0i2rH/3dtMj5H8L95aY=

     "]]}, 
   {RGBColor[
     NCache[
      Rational[1, 3], 0.3333333333333333], 
     NCache[
      Rational[7, 9], 0.7777777777777778], 
     NCache[
      Rational[1, 3], 0.3333333333333333]], Dashing[{Small, Small}], 
    LineBox[CompressedData["
1:eJwB8QIO/SFib1JlAgAAAC4AAAACAAAAQLwD8VcoFUBu6nciVMWWP88SLAt1
ORVAz8PMuI2elj+7roKbLAMWQK7+71NqB5U/ewEqUMzdFkDoghjJz3yTPwrc
ekhutBdAZGA7Eigikj/lpiGUn3wYQKBY+/Jj/pA/lCgZBLlVGUBc7gI4CsCP
P5CaZsdhIBpAsJ1YpPDajT9alF3ODOcaQOD6MKFaKIw/+ESl+Z++G0ApPTY2
bXmKP+PlQnjChxxA5vk8KUkJiT+iPTEbzWEdQA53Y2UWm4c/rYV1EWctHkBG
PB6VwWCGP4dVY0sD9R5Aq9RcTs5DhT813KGph80fQHtmz/YbJoQ/mCmbrc1L
IEDtKXFTSC+DP3/AjZhLuSBA6Q+jsEk3gj9NG1WlyiQhQCCDv26lVYE/QW7H
WxGJIUCaZNn5mpGAP58cYiTM9SFACBoJxrqWfz8kw6eWTlsiQA1ElPwjPX4/
kC3CKtK+IkA3Jq0naf98P2bzBNHJKiNAC5J8+1G8ez9isfIgiY8jQLFpVVh9
oXo/bIJT/EqRI0Aavt0TtZx6P3VTtNcMkyNASjEPGe6Xej+I9XWOkJYjQDZl
lP5jjno/rjn5+5edI0AXMUQpX3t6P/nB/9amqyNARFzHlpJVej+Q0gyNxMcj
QCHHcanqCno/mqNtaIbJI0Bkt9W4SgZ6P6N0zkNIyyNA7VZ9A6wBej+2FpD6
y84jQItB2Ehy+Hk/3FoTaNPVI0CB6ouHDeZ5PyfjGUPi4yNAiyIFdH7BeT8w
tHoepOUjQF+GnAPyvHk/OoXb+WXnI0CuU5DHZrh5P0wnnbDp6iNA+/3Z6lOv
eT9yayAe8fEjQEbSGZM8nXk/fDyB+bLzI0Cpcbe5uZh5P4UN4tR09SNAgvtP
ETiUeT+Yr6OL+PgjQA2WxFE4i3k/ooAEZ7r6I0BwgMo5uoZ5P6tRZUJ8/CNA
fAgfUT2CeT+0IsYdPv4jQImQV5fBfXk/vvMm+f//I0DFqQkMR3l5P4DNTkM=

     "]]}, 
   {RGBColor[
     NCache[
      Rational[7, 9], 0.7777777777777778], 
     NCache[
      Rational[7, 9], 0.7777777777777778], 
     NCache[
      Rational[1, 3], 0.3333333333333333]], Dashing[{Small, Small}], 
    LineBox[CompressedData["
1:eJwBkQNu/CFib1JlAgAAADgAAAACAAAA6eI+Y4C1EUBu6nciVMWWP7WIxF4g
9RFA6Pt1FtnSlT+oSssYh/gRQK7IPzh3xpU/mgzS0u37EUBzfEu2HrqVP4CQ
30a7AhJAjwzYo4mhlT9MmPouVhASQCuAv0/OcJU/4qcw/4srEkBvobdiCxGV
Pw7HnJ/3YRJAHWTrJhpYlD9mBXXgzs4SQLcBgvTU/pI/Y3J7tQyaE0B+hkBL
k8eQPy9nK85MYRRA28LBYPfbjT/PEiwLdTkVQCZHDb58b4o/u66CmywDFkD3
FEiDcbKHP3sBKlDM3RZAQxNVxNAjhT8K3HpIbrQXQBrIHZqo+YI/5aYhlJ98
GEAv/jU49zaBP5QoGQS5VRlAPMGkbyEWfz+QmmbHYSAaQKux8gVuWHw/WpRd
zgznGkAwIkpuZvZ5P/hEpfmfvhtAnR96KWardz/j5UJ4woccQFMNQih1xHU/
oj0xG81hHUALSa1rxO1zP62FdRFnLR5AWRkKu+9kcj+HVWNLA/UeQCDDmY4B
CnE/NdyhqYfNH0DWFLvNVW5vP5gpm63NSyBAs6n0qb8zbT9/wI2YS7kgQBGr
di+6BGs/TRtVpcokIUDCbnoV1RRpP0Fux1sRiSFAtySF1hZwZz+fHGIkzPUh
QHB9/AJn0GU/JMOnlk5bIkB9dekbR25kP5AtwirSviJA6B1WW5gvYz9m8wTR
ySojQIBx0Bd18mE/YrHyIImPI0DP9yKKsOJgP2yCU/xKkSNANPF+WyTeYD91
U7TXDJMjQCzLwc6Z2WA/iPV1jpCWI0DRuA6YidBgP645+fuXnSNA1aVdoXy+
YD/5wf/WpqsjQBiu2OyvmmA/kNIMjcTHI0B0CbVrRlRgP5qjbWiGySNABeE9
Fu1PYD+jdM5DSMsjQDXs/UuVS2A/thaQ+svOI0APv2ZW6kJgP9xaE2jT1SNA
j53F06YxYD8n4xlD4uMjQLtwOdloD2A/MLR6HqTlI0Dx+tLlJwtgPzqF2/ll
5yNAsAbacugGYD9MJ52w6eojQNdPFRfc/F8/cmsgHvHxI0Dak/9JFttfP3w8
gfmy8yNAFUQZRazSXz+FDeLUdPUjQPQtiDZFyl8/mK+ji/j4I0BE9C/3f7lf
P6KABGe6+iNATKvPwyGxXz+rUWVCfPwjQEhQkoHGqF8/tCLGHT7+I0BMBi0v
bqBfP77zJvn//yNAyp5VyxiYXz8M8pi8
     "]]}, 
   {RGBColor[1, 
     NCache[
      Rational[1, 3], 0.3333333333333333], 
     NCache[
      Rational[1, 3], 0.3333333333333333]], Dashing[{Small, Small}], 
    LineBox[CompressedData["
1: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
Xy3MbEEWNE4snZ6bI9CknJ0jw2TBf90IcDs=
     "]]}},
  AspectRatio->0.5,
  Axes->True,
  AxesOrigin->{0, 0},
  Epilog->{{
     InsetBox[
      BoxData[
       FormBox[
        RotationBox[
         InterpretationBox[
          Cell[
           BoxData[
            FormBox["\"n=0\"", TextForm]], "InlineText", Background -> 
           GrayLevel[1]], 
          Text["n=0", Background -> GrayLevel[1]]], 
         BoxRotation -> -0.8156612196034658], TraditionalForm]], {3.4, 
      0.012110445659702138`}], 
     InsetBox[
      BoxData[
       FormBox[
        RotationBox[
         InterpretationBox[
          Cell[
           BoxData[
            FormBox["\"n=1\"", TextForm]], "InlineText", Background -> 
           GrayLevel[1]], 
          Text["n=1", Background -> GrayLevel[1]]], 
         BoxRotation -> -0.39544978932393604`], TraditionalForm]], 
      NCache[{3.4, 
        Complex[0.003198593425086883, -2.168404344971009*^-19]}, {3.4, 
       0.003198593425086883}]], 
     InsetBox[
      BoxData[
       FormBox[
        RotationBox[
         InterpretationBox[
          Cell[
           BoxData[
            FormBox["\"n=2\"", TextForm]], "InlineText", Background -> 
           GrayLevel[1]], 
          Text["n=2", Background -> GrayLevel[1]]], 
         BoxRotation -> -0.13683974117280612`], TraditionalForm]], 
      NCache[{3.4, 
        Complex[0.0007771387524909836, 9.257653228662501*^-19]}, {3.4, 
       0.0007771387524909836}]]}, {
     InsetBox[
      BoxData[
       FormBox[
        RotationBox[
         InterpretationBox[
          Cell[
           BoxData[
            FormBox["\"n=0\"", TextForm]], "InlineText", Background -> 
           GrayLevel[1]], 
          Text["n=0", Background -> GrayLevel[1]]], 
         BoxRotation -> -0.719803922735269], TraditionalForm]], {
      6, 0.017275485095068738`}], 
     InsetBox[
      BoxData[
       FormBox[
        RotationBox[
         InterpretationBox[
          Cell[
           BoxData[
            FormBox["\"n=1\"", TextForm]], "InlineText", Background -> 
           GrayLevel[1]], 
          Text["n=1", Background -> GrayLevel[1]]], 
         BoxRotation -> -1.1569784239967216`], TraditionalForm]], {
      5, 0.015426819529434109`}], 
     InsetBox[
      BoxData[
       FormBox[
        RotationBox[
         InterpretationBox[
          Cell[
           BoxData[
            FormBox["\"n=2\"", TextForm]], "InlineText", Background -> 
           GrayLevel[1]], 
          Text["n=2", Background -> GrayLevel[1]]], 
         BoxRotation -> -1.207703320932642], TraditionalForm]], {4.5, 
      0.010869668107569374`}]}, 
    InsetBox[
     GraphicsBox[{
       Opacity[0.9], 
       RGBColor[0, 
        NCache[
         Rational[2, 3], 0.6666666666666666], 0], 
       DiskBox[{0, 0}]}], {1.8868387909719015`, 0.020215567331995053`}, {0, 
     0}, 0.17], 
    InsetBox[
     GraphicsBox[{
       Opacity[0.9], 
       RGBColor[
        NCache[
         Rational[2, 3], 0.6666666666666666], 
        NCache[
         Rational[2, 3], 0.6666666666666666], 0], 
       DiskBox[{0, 0}]}], {1.9701220753578723`, 0.006551265677965186}, {0, 0},
      0.17], 
    InsetBox[
     GraphicsBox[{
       Opacity[0.9], 
       RGBColor[1, 0, 0], 
       DiskBox[{0, 0}]}], {2.099252790602584, 0.0016647856786989608`}, {0, 0},
      0.17]},
  Frame->True,
  FrameLabel->{{
     FormBox[
     "\"T/\\!\\(\\*SubscriptBox[\\(L\\), \\(P\\)]\\)\"", TraditionalForm], 
     None}, {
     FormBox[
     "\"\\!\\(\\*SubscriptBox[\\(r\\), \\(H\\)]\\) / \
\\!\\(\\*SubscriptBox[\\(r\\), \\(0\\)]\\)\"", TraditionalForm], None}},
  GridLines->{{}, {0}},
  ImageSize->425.1968503937008,
  Method->{},
  PlotRange->{{0, 10}, {-0.0020215567331995053`, 0.022237124065194562`}},
  PlotRangeClipping->True,
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{
  3.618294272439329*^9, {3.618294385842416*^9, 3.61829446193832*^9}, {
   3.618294516169506*^9, 3.618294725183442*^9}, {3.618294761689245*^9, 
   3.618294847292778*^9}, 3.618294895587633*^9, 3.618408077737761*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<../../Master-Calc18/figures/Temp.pdf\>\"", ",", "fig"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.618294842205076*^9, 3.618294842766433*^9}}],

Cell[BoxData["\<\"../../Master-Calc18/figures/Temp.pdf\"\>"], "Output",
 CellChangeTimes->{{3.618294843153002*^9, 3.6182948495649643`*^9}, 
   3.618294898127391*^9, 3.618408078252966*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fig", "=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "chosenN", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"chosenN", " ", "=", " ", 
      RowBox[{"{", "7", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"colors", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"Darker", "@", "Green"}], "}"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"labels", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"\"\<n=\>\"", "<>", 
         RowBox[{"ToString", "@", "#"}]}], " ", "&"}], "/@", " ", 
       "chosenN"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"TData", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Ts", "\[LeftDoubleBracket]", 
          RowBox[{"n", "+", "1"}], "\[RightDoubleBracket]"}], " ", "/.", " ", 
         
         RowBox[{"{", 
          RowBox[{"r", "\[Rule]", " ", 
           RowBox[{"r", " ", "*", " ", 
            RowBox[{"r0s", "\[LeftDoubleBracket]", 
             RowBox[{"n", "+", "1"}], "\[RightDoubleBracket]"}]}]}], "}"}]}], 
        ",", " ", 
        RowBox[{"{", 
         RowBox[{"n", ",", "chosenN"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"TSSM", " ", "=", "  ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"1", "-", 
            RowBox[{"2", "/", 
             RowBox[{"(", 
              SuperscriptBox["r", 
               RowBox[{"1", "+", "n"}]], ")"}]}]}], ",", "r"}], "]"}], " ", "/.",
          " ", 
         RowBox[{"{", 
          RowBox[{"r", " ", "\[Rule]", " ", 
           RowBox[{"r", " ", 
            RowBox[{"r0s", "\[LeftDoubleBracket]", 
             RowBox[{"n", "+", "1"}], "\[RightDoubleBracket]"}]}]}], "}"}]}], 
        ",", " ", 
        RowBox[{"{", 
         RowBox[{"n", ",", " ", "chosenN"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Evaluate", "@", 
        RowBox[{"Join", "@", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Re", "@", "TData"}], ",", " ", "TSSM"}], "}"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"r", ",", "0.4", ",", "15"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotStyle", "\[Rule]", " ", 
        RowBox[{"Join", "[", 
         RowBox[{"colors", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Dashed", ",", 
              RowBox[{"Lighter", "@", "#"}]}], "}"}], "&"}], "/@", 
           "colors"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"PlotRangePadding", " ", "\[Rule]", " ", "None"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"FrameLabel", " ", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(r\), \(H\)]\) / \!\(\*SubscriptBox[\(r\), \
\(0\)]\)\>\"", ",", " ", "\"\<T/\!\(\*SubscriptBox[\(L\), \(P\)]\)\>\""}], 
         "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{"PlotRange", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "1.1"}], 
           RowBox[{"Max", "@", 
            RowBox[{"Last", "@", 
             RowBox[{"Transpose", "@", 
              RowBox[{"TsMaxima", "\[LeftDoubleBracket]", 
               RowBox[{"chosenN", "+", "1"}], 
               "\[RightDoubleBracket]"}]}]}]}]}], ",", 
          RowBox[{"1.1", 
           RowBox[{"Max", "@", 
            RowBox[{"Last", "@", 
             RowBox[{"Transpose", "@", 
              RowBox[{"TsMaxima", "\[LeftDoubleBracket]", 
               RowBox[{"chosenN", "+", "1"}], 
               "\[RightDoubleBracket]"}]}]}]}]}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"GridLines", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "}"}], ",", 
          RowBox[{"{", "0", "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"AspectRatio", " ", "\[Rule]", " ", "0.3"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Exclusions", "\[Rule]", " ", 
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", "0.1"}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"ImageSize", "\[Rule]", " ", 
        RowBox[{"15", " ", "cm"}]}]}], "\[IndentingNewLine]", "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6182950358657312`*^9, 3.618295051392942*^9}, {
  3.61829510389252*^9, 3.618295218908039*^9}, {3.618295261592428*^9, 
  3.618295276616397*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0, 
     NCache[
      Rational[2, 3], 0.6666666666666666], 0], 
    LineBox[{{0.4000002979591837, -7.927078990015607*^-8}, {
     0.4000002979591837, -8.52009802927089*^-8}}], LineBox[CompressedData["
1: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
     "]], 
    LineBox[{{0.06535337536364526, -8.52009802927089*^-8}, {
     0.06825998791296933, 6.758708887894303*^-8}, {
     0.07311441853649046, -8.107661588841036*^-8}, {
     0.0779688491600116, -5.423981909773712*^-8}, {
     0.08220620230227434, -8.52009802927089*^-8}}], 
    LineBox[{{-0.0002971068818283689, -8.52009802927089*^-8}, \
{-0.0002971068818283689, 8.52009802927089*^-8}}], 
    LineBox[{{0.00515238980679106, -8.52009802927089*^-8}, {
     0.00515238980679106, 8.52009802927089*^-8}}], 
    LineBox[{{-0.00014560247277873626`, 
     8.52009802927089*^-8}, {-0.00014560247277873626`, \
-8.52009802927089*^-8}}], 
    LineBox[{{-0.00022155495484516802`, 
     8.52009802927089*^-8}, {-0.00022155495484516802`, \
-8.52009802927089*^-8}}], 
    LineBox[{{0.0000774627413717686, -8.52009802927089*^-8}, {
     0.0000774627413717686, 8.52009802927089*^-8}}], 
    LineBox[{{-0.00025816344929326, -8.52009802927089*^-8}, \
{-0.00025816344929326, 8.52009802927089*^-8}}], 
    LineBox[{{0.000041572665253727486`, 8.52009802927089*^-8}, {
     0.000041572665253727486`, -8.52009802927089*^-8}}], 
    LineBox[{{0.04301463267893965, -8.52009802927089*^-8}, {
     0.043094215276972006`, 8.52009802927089*^-8}}], 
    LineBox[{{0.000189131204969653, -8.52009802927089*^-8}, {
     0.000189131204969653, 8.52009802927089*^-8}}], 
    LineBox[{{-0.0000343231565857485, 
     8.52009802927089*^-8}, {-0.0000343231565857485, -8.52009802927089*^-8}}],
     LineBox[{{0.0001708530934087675, -8.52009802927089*^-8}, {
     0.0001708530934087675, 8.52009802927089*^-8}}], 
    LineBox[{{-0.00020319393020807808`, -8.52009802927089*^-8}, \
{-0.00020319393020807808`, 8.52009802927089*^-8}}], 
    LineBox[{{0.00009653706694671635, -8.52009802927089*^-8}, {
     0.00009653706694671635, 8.52009802927089*^-8}}], 
    LineBox[{{0.00024349039170127462`, 8.52009802927089*^-8}, {
     0.00024349039170127462`, -8.52009802927089*^-8}}], 
    LineBox[{{-0.0002397459796856473, -8.52009802927089*^-8}, \
{-0.0002397459796856473, 8.52009802927089*^-8}}], 
    LineBox[{{0.00005700486368680381, -8.52009802927089*^-8}, {
     0.00005700486368680381, 8.52009802927089*^-8}}], 
    LineBox[{{-0.00008910071067004513, -8.52009802927089*^-8}, \
{-0.00008910071067004513, 8.52009802927089*^-8}}], 
    LineBox[{{0.00020739823055240862`, -8.52009802927089*^-8}, {
     0.00020739823055240862`, 8.52009802927089*^-8}}], 
    LineBox[{{0.0002829801283654913, 8.52009802927089*^-8}, {
     0.0002829801283654913, -8.52009802927089*^-8}}], 
    LineBox[{{-0.00028799241376569455`, 
     8.52009802927089*^-8}, {-0.00028799241376569455`, \
-8.52009802927089*^-8}}], 
    LineBox[{{0.00001388592728806622, -8.52009802927089*^-8}, {
     0.00001388592728806622, 8.52009802927089*^-8}}], 
    LineBox[{{0.014756686534545023`, 8.52009802927089*^-8}, {
     0.014756687891103062`, -8.52009802927089*^-8}}], 
    LineBox[{{-0.00013594623811930356`, 
     8.52009802927089*^-8}, {-0.00013594623811930356`, \
-8.52009802927089*^-8}}], 
    LineBox[{{0.00016066718505001613`, 8.52009802927089*^-8}, {
     0.00016066718505001613`, -8.52009802927089*^-8}}], 
    LineBox[{{-0.0002127465309923824, -8.52009802927089*^-8}, \
{-0.0002127465309923824, 8.52009802927089*^-8}}], 
    LineBox[{{-0.0002496487553613592, -8.52009802927089*^-8}, \
{-0.0002496487553613592, 8.52009802927089*^-8}}], 
    LineBox[{{-0.00009867780728860252, -8.52009802927089*^-8}, \
{-0.00009867780728860252, 8.52009802927089*^-8}}], 
    LineBox[{{0.00019703965174534517`, 8.52009802927089*^-8}, {
     0.00019703965174534517`, -8.52009802927089*^-8}}], 
    LineBox[{{0.0002718813924412258, -8.52009802927089*^-8}, {
     0.0002718813924412258, 8.52009802927089*^-8}}], 
    LineBox[{{-0.0002687769200136651, 
     8.52009802927089*^-8}, {-0.0002687769200136651, -8.52009802927089*^-8}}],
     LineBox[{{0.0000322063691393395, -8.52009802927089*^-8}, {
     0.0000322063691393395, 8.52009802927089*^-8}}], 
    LineBox[{{0.03285932605402097, -8.52009802927089*^-8}, {
     0.03287455220312519, 8.52009802927089*^-8}}], 
    LineBox[{{-0.00011831940862366052`, -8.52009802927089*^-8}, \
{-0.00011831940862366052`, 8.52009802927089*^-8}}], 
    LineBox[{{-0.00019316866540103044`, 
     8.52009802927089*^-8}, {-0.00019316866540103044`, \
-8.52009802927089*^-8}}], 
    LineBox[{{-0.00004266719443209183, 
     8.52009802927089*^-8}, {-0.00004266719443209183, \
-8.52009802927089*^-8}}], 
    LineBox[{{0.00006818329276960997, -8.52009802927089*^-8}, {
     0.00006818329276960997, 8.52009802927089*^-8}}], 
    LineBox[{{-0.00008321706866340828, 
     8.52009802927089*^-8}, {-0.00008321706866340828, \
-8.52009802927089*^-8}}], 
    LineBox[{{-9.270684373922737*^-6, -8.52009802927089*^-8}, \
{-9.270684373922737*^-6, 8.52009802927089*^-8}}], 
    LineBox[{{0.0002920674104608915, 8.52009802927089*^-8}, {
     0.0002920674104608915, -8.52009802927089*^-8}}], 
    LineBox[{{9.211726444628907*^-6, 8.52009802927089*^-8}, {
     9.211726444628907*^-6, -8.52009802927089*^-8}}], 
    LineBox[{{-0.0001441417277680308, -8.52009802927089*^-8}, \
{-0.0001441417277680308, 8.52009802927089*^-8}}], 
    LineBox[{{0.0001555810560619497, -8.52009802927089*^-8}, {
     0.0001555810560619497, 8.52009802927089*^-8}}], 
    LineBox[{{0.00008246136014587179, 8.52009802927089*^-8}, {
     0.00008246136014587179, -8.52009802927089*^-8}}], 
    LineBox[{{-0.0002545932980535178, 
     8.52009802927089*^-8}, {-0.0002545932980535178, -8.52009802927089*^-8}}],
     LineBox[{{-0.00010661858196649274`, 
     8.52009802927089*^-8}, {-0.00010661858196649274`, \
-8.52009802927089*^-8}}], 
    LineBox[{{0.0002676129254356045, 8.52009802927089*^-8}, {
     0.0002676129254356045, -8.52009802927089*^-8}}], 
    LineBox[{{-0.00027364629990045717`, -8.52009802927089*^-8}, \
{-0.00027364629990045717`, 8.52009802927089*^-8}}], 
    LineBox[{{0.028398183948372346`, 8.52009802927089*^-8}, {
     0.028402713644830768`, -8.52009802927089*^-8}}], 
    LineBox[{{-0.00012522029315649322`, 
     8.52009802927089*^-8}, {-0.00012522029315649322`, \
-8.52009802927089*^-8}}], 
    LineBox[{{0.00017551662181099036`, 8.52009802927089*^-8}, {
     0.00017551662181099036`, -8.52009802927089*^-8}}], 
    LineBox[{{0.00009900759354903575, 8.52009802927089*^-8}, {
     0.00009900759354903575, -8.52009802927089*^-8}}], 
    LineBox[{{0.0002488418106455034, -8.52009802927089*^-8}, {
     0.0002488418106455034, 8.52009802927089*^-8}}], 
    LineBox[{{0.00006408241466954336, 8.52009802927089*^-8}, {
     0.00006408241466954336, -8.52009802927089*^-8}}], 
    LineBox[{{0.00021193768888149402`, 8.52009802927089*^-8}, {
     0.00021193768888149402`, -8.52009802927089*^-8}}], 
    LineBox[{{0.00013739450369878263`, -8.52009802927089*^-8}, {
     0.00013739450369878263`, 8.52009802927089*^-8}}], 
    LineBox[{{0.00028590895819214, -8.52009802927089*^-8}, {
     0.00028590895819214, 8.52009802927089*^-8}}], 
    LineBox[{{0.000018585103310972826`, 8.52009802927089*^-8}, {
     0.000018585103310972826`, -8.52009802927089*^-8}}], 
    LineBox[{{0.0194306835704884, -8.52009802927089*^-8}, {
     0.019430742852363844`, 8.52009802927089*^-8}}], 
    LineBox[{{-0.00013383101936049953`, -8.52009802927089*^-8}, \
{-0.00013383101936049953`, 8.52009802927089*^-8}}], 
    LineBox[{{-0.00020724750034315382`, 
     8.52009802927089*^-8}, {-0.00020724750034315382`, \
-8.52009802927089*^-8}}], 
    LineBox[{{-0.0002444746591086888, 
     8.52009802927089*^-8}, {-0.0002444746591086888, -8.52009802927089*^-8}}],
     LineBox[{{0.05556847427814794, 8.52009802927089*^-8}, {
     0.057875125732642106`, -8.52009802927089*^-8}}], 
    LineBox[{{-0.00009712564312559435, 
     8.52009802927089*^-8}, {-0.00009712564312559435, \
-8.52009802927089*^-8}}], 
    LineBox[{{0.00012815143970901254`, 8.52009802927089*^-8}, {
     0.00012815143970901254`, -8.52009802927089*^-8}}], 
    LineBox[{{0.03743205395500815, 8.52009802927089*^-8}, {
     0.037466238334627575`, -8.52009802927089*^-8}}], 
    LineBox[{{-0.00018844926383184408`, -8.52009802927089*^-8}, \
{-0.00018844926383184408`, 8.52009802927089*^-8}}], 
    LineBox[{{0.00011137829930969503`, -8.52009802927089*^-8}, {
     0.00011137829930969503`, 8.52009802927089*^-8}}], 
    LineBox[{{-0.00004174894825991835, -8.52009802927089*^-8}, \
{-0.00004174894825991835, 8.52009802927089*^-8}}], 
    LineBox[{{0.00007252587944504131, 8.52009802927089*^-8}, {
     0.00007252587944504131, -8.52009802927089*^-8}}], 
    LineBox[{{-0.00007690643772336232, -8.52009802927089*^-8}, \
{-0.00007690643772336232, 8.52009802927089*^-8}}], 
    LineBox[{{0.00022102452974962527`, -8.52009802927089*^-8}, {
     0.00022102452974962527`, 8.52009802927089*^-8}}], 
    LineBox[{{0.00014852825708688367`, 8.52009802927089*^-8}, {
     0.00014852825708688367`, -8.52009802927089*^-8}}]}, 
   {RGBColor[
     NCache[
      Rational[1, 3], 0.3333333333333333], 
     NCache[
      Rational[7, 9], 0.7777777777777778], 
     NCache[
      Rational[1, 3], 0.3333333333333333]], Dashing[{Small, Small}], 
    LineBox[CompressedData["
1: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
r6HbvPW7ALxM4ppbW2Pjly+pq1m9AvB//UkU0Q==
     "]], 
    LineBox[{{0.4000002979591837, 8.52009802927089*^-8}, {
     0.4000002979591837, -8.52009802927089*^-8}}]}},
  AspectRatio->0.3,
  Axes->True,
  AxesOrigin->{2., 0},
  Frame->True,
  FrameLabel->{{
     FormBox[
     "\"T/\\!\\(\\*SubscriptBox[\\(L\\), \\(P\\)]\\)\"", TraditionalForm], 
     None}, {
     FormBox[
     "\"\\!\\(\\*SubscriptBox[\\(r\\), \\(H\\)]\\) / \
\\!\\(\\*SubscriptBox[\\(r\\), \\(0\\)]\\)\"", TraditionalForm], None}},
  GridLines->{{}, {0}},
  ImageSize->425.1968503937008,
  Method->{},
  PlotRange->{{0.4, 15}, {-8.52009802927089*^-8, 8.52009802927089*^-8}},
  PlotRangeClipping->True,
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{
  3.6182950520415363`*^9, {3.6182951069993763`*^9, 3.618295219473853*^9}, {
   3.6182952625092*^9, 3.6182952772950363`*^9}, 3.618408078633478*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<../../Master-Calc18/figures/Temp-n7.pdf\>\"", ",", "fig"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6182952234381313`*^9, 3.618295225474524*^9}}],

Cell[BoxData["\<\"../../Master-Calc18/figures/Temp-n7.pdf\"\>"], "Output",
 CellChangeTimes->{3.618295225832367*^9, 3.618408078761022*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1440, 876},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
CellContext->Notebook,
Magnification:>1.25 Inherited,
FrontEndVersion->"9.0 for Linux x86 (64-bit) (February 7, 2013)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 98, 1, 116, "Title"],
Cell[680, 25, 625, 13, 187, "Text"],
Cell[CellGroupData[{
Cell[1330, 42, 2341, 66, 189, "Input"],
Cell[3674, 110, 571, 11, 61, "Output"],
Cell[4248, 123, 1085, 30, 65, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5370, 158, 1819, 46, 164, "Input"],
Cell[7192, 206, 129679, 2233, 314, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[136908, 2444, 107, 1, 100, "Section"],
Cell[137018, 2447, 151, 3, 39, "Text"],
Cell[137172, 2452, 2791, 75, 239, "Input"],
Cell[CellGroupData[{
Cell[139988, 2531, 10824, 268, 1139, "Input"],
Cell[150815, 2801, 1990, 41, 617, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[152842, 2847, 1627, 42, 214, "Input"],
Cell[154472, 2891, 7897, 256, 291, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162406, 3152, 1841, 47, 288, "Input"],
Cell[164250, 3201, 2148, 68, 324, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[166447, 3275, 105, 1, 100, "Section"],
Cell[166555, 3278, 723, 23, 112, "Text"],
Cell[167281, 3303, 1914, 46, 114, "Input"],
Cell[CellGroupData[{
Cell[169220, 3353, 1367, 33, 139, "Input"],
Cell[170590, 3388, 13095, 393, 411, "Output"]
}, Open  ]],
Cell[183700, 3784, 254, 5, 39, "Text"],
Cell[CellGroupData[{
Cell[183979, 3793, 685, 18, 38, "Input"],
Cell[184667, 3813, 524, 12, 41, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[185228, 3830, 2262, 52, 239, "Input"],
Cell[187493, 3884, 19261, 556, 763, "Output"]
}, Open  ]],
Cell[206769, 4443, 589, 18, 40, "Text"],
Cell[CellGroupData[{
Cell[207383, 4465, 3500, 96, 403, "Input"],
Cell[210886, 4563, 24505, 473, 332, "Output"]
}, Open  ]],
Cell[235406, 5039, 565, 17, 73, "Text"],
Cell[235974, 5058, 1247, 35, 95, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[237258, 5098, 116, 1, 100, "Section"],
Cell[237377, 5101, 474, 14, 89, "Input"],
Cell[237854, 5117, 6506, 155, 464, "Input"],
Cell[CellGroupData[{
Cell[244385, 5276, 347, 13, 56, "Subsection"],
Cell[CellGroupData[{
Cell[244757, 5293, 3007, 77, 298, "Input"],
Cell[247767, 5372, 745, 14, 72, "Message"],
Cell[248515, 5388, 746, 14, 72, "Message"],
Cell[249264, 5404, 574, 11, 27, "Message"],
Cell[249841, 5417, 746, 14, 72, "Message"],
Cell[250590, 5433, 586, 12, 27, "Message"],
Cell[251179, 5447, 890, 17, 93, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[252106, 5469, 120, 2, 38, "Input"],
Cell[252229, 5473, 389, 10, 166, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[252667, 5489, 135, 3, 56, "Subsection"],
Cell[CellGroupData[{
Cell[252827, 5496, 5129, 117, 512, "Input"],
Cell[257959, 5615, 3679, 74, 485, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[261675, 5694, 8145, 197, 748, "Input"],
Cell[269823, 5893, 34822, 651, 342, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[304682, 6549, 200, 4, 38, "Input"],
Cell[304885, 6555, 239, 3, 38, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[305161, 6563, 7989, 190, 722, "Input"],
Cell[313153, 6755, 53624, 957, 342, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[366814, 7717, 200, 4, 38, "Input"],
Cell[367017, 7723, 214, 2, 38, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[367292, 7732, 124, 2, 100, "Section"],
Cell[367419, 7736, 939, 25, 64, "Input"],
Cell[CellGroupData[{
Cell[368383, 7765, 511, 14, 64, "Input"],
Cell[368897, 7781, 1015, 26, 72, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[369949, 7812, 7854, 187, 700, "Input"],
Cell[377806, 8001, 34765, 650, 296, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[412608, 8656, 196, 4, 38, "Input"],
Cell[412807, 8662, 187, 2, 38, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[413031, 8669, 4668, 119, 500, "Input"],
Cell[417702, 8790, 29296, 512, 196, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[447035, 9307, 201, 4, 38, "Input"],
Cell[447239, 9313, 138, 1, 38, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
